"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[3342],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87949:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={authors:"kcxain",tags:["NLP","\u4ee3\u7801\u89e3\u8bfb"]},l="[\u4ee3\u7801\u89e3\u8bfb] BERT\u53e5\u5b50\u8868\u5f81\u80fd\u529b\u7684\u6539\u8fdb\uff1aCondenser",o={permalink:"/blog/2023/05/18/condenser",editUrl:"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2023/05-18-condenser.md",source:"@site/blog/2023/05-18-condenser.md",title:"[\u4ee3\u7801\u89e3\u8bfb] BERT\u53e5\u5b50\u8868\u5f81\u80fd\u529b\u7684\u6539\u8fdb\uff1aCondenser",description:"Paper a Pre-training Architecture for Dense Retrieval",date:"2023-05-18T00:00:00.000Z",formattedDate:"2023\u5e745\u670818\u65e5",tags:[{label:"NLP",permalink:"/blog/tags/nlp"},{label:"\u4ee3\u7801\u89e3\u8bfb",permalink:"/blog/tags/\u4ee3\u7801\u89e3\u8bfb"}],readingTime:4.125,hasTruncateMarker:!0,authors:[{name:"Kcxain",url:"https://github.com/kcxain",email:"kcxain@gmail.com",imageURL:"https://github.com/kcxain.png",key:"kcxain"}],frontMatter:{authors:"kcxain",tags:["NLP","\u4ee3\u7801\u89e3\u8bfb"]},prevItem:{title:"\u6211\u7528 2 \u4e07\u6761\u804a\u5929\u8bb0\u5f55\uff0c\u521b\u9020\u4e86\u6211\u7684\u6570\u5b57\u751f\u547d",permalink:"/blog/2023/05/24/chatglm"},nextItem:{title:"\u8d5b\u5c14\u7b14\u8bb0 | \u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21",permalink:"/blog/2023/04/26/dstc11"}},p={authorsImageUrls:[void 0]},s=[{value:"\u4e00\u3001\u6a21\u578b\u52a8\u673a",id:"\u4e00\u6a21\u578b\u52a8\u673a",level:2},{value:"\u4e8c\u3001\u6a21\u578b\u7ed3\u6784",id:"\u4e8c\u6a21\u578b\u7ed3\u6784",level:2},{value:"\u4e09\u3001\u4ee3\u7801\u89e3\u8bfb",id:"\u4e09\u4ee3\u7801\u89e3\u8bfb",level:2},{value:"1. \u5982\u4f55\u521d\u59cb\u5316\u7684\u81ea\u5b9a\u4e49 BertLayer\uff1f",id:"1-\u5982\u4f55\u521d\u59cb\u5316\u7684\u81ea\u5b9a\u4e49-bertlayer",level:3},{value:"2.\u5982\u4f55\u5f97\u5230\u7279\u5b9a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\uff1f",id:"2\u5982\u4f55\u5f97\u5230\u7279\u5b9a\u9690\u85cf\u5c42\u7684\u8f93\u51fa",level:3},{value:"\u4e09\u3001TODO",id:"\u4e09todo",level:2}],d={toc:s},u="wrapper";function c(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Paper: ",(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/2104.08253"},"Condenser: a Pre-training Architecture for Dense Retrieval")),(0,r.kt)("p",{parentName:"blockquote"},"Code: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luyug/Condenser"},"https://github.com/luyug/Condenser")),(0,r.kt)("p",{parentName:"blockquote"},"Publication: EMNLP 2021")),(0,r.kt)("p",null,"\u6700\u8fd1\u5728\u5fd9\u7684\u9879\u76ee\u9700\u8981\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u6765\u8868\u5f81\u53e5\u5b50\uff0c\u4e8e\u662f\u5c31\u8bfb\u5230\u4e86\u8fd9\u7bc7\u8bba\u6587\u3002\u8fd9\u7bc7\u8bba\u6587\u7684 idea \u548c\u4ee3\u7801\u90fd\u4e0d\u590d\u6742\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u5bf9 Bert \u7684\u4e00\u4e2a\u7b80\u5355\u6539\u9020\u3002\u6211\u5199\u672c\u6587\u7684\u76ee\u7684\u662f\u8bb0\u5f55\u5b66\u4e60\u4e00\u4e0b\u5b83\u6539\u9020 bert \u7684\u4ee3\u7801\u6280\u5de7\u3002"),(0,r.kt)("h2",{id:"\u4e00\u6a21\u578b\u52a8\u673a"},"\u4e00\u3001\u6a21\u578b\u52a8\u673a"),(0,r.kt)("p",null,"Condenser \u7684\u52a8\u673a\u6765\u6e90\u4e8e\u4e00\u4e2a\u5df2\u53d1\u73b0\u7684\u73b0\u8c61\uff1a\u4e00\u4e2a\u9884\u8bad\u7ec3\u597d\u7684 Bert \u4e2d\uff0c\u4e2d\u95f4\u5c42\u7684 CLS \u4e0e\u53e5\u5b50\u4e2d\u7684\u5176\u4ed6 token \u7684 attention \u7cfb\u6570\u5f88\u4f4e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u5c42 CLS \u624d\u4e0e\u6240\u6709\u7684 token \u6709\u6bd4\u8f83\u5927\u7684 attention\u7cfb\u6570\u3002\u6240\u4ee5\uff0c\u662f\u5426\u53ef\u4ee5\u8ba9\u6700\u540e\u4e00\u5c42\u7684 CLS \u5411\u91cf\u4e0e\u4e2d\u95f4\u5c42\u7684\u5176\u5b83 token \u7684\u5411\u91cf\u505a self-attention \u5b66\u4e60\u5462\uff1f"),(0,r.kt)("h2",{id:"\u4e8c\u6a21\u578b\u7ed3\u6784"},"\u4e8c\u3001\u6a21\u578b\u7ed3\u6784"),(0,r.kt)("p",null,"\u57fa\u4e8e\u8fd9\u6837\u7684\u52a8\u673a\uff0c\u6a21\u578b\u5982\u4e0b\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(16116).Z,width:"978",height:"761"})),(0,r.kt)("p",null,"\u5c06 12 \u5c42 BertLayer \u5206\u4e3a Late \u548c Early\uff0c\u5404 6 \u5c42\u3002\u7528\u7b2c 12 \u5c42\u7684 CLS \u4f4d\u7f6e\u5411\u91cf\u4e0e\u7b2c 6 \u5c42\u9664 CLS \u4f4d\u7f6e\u7684\u5176\u4ed6\u9690\u85cf\u5411\u91cf\u62fc\u63a5\u6210\u539f\u957f\u5ea6\u7684\u8f93\u51fa\u5411\u91cf\uff0c\u6700\u540e\u63a5\u4e00\u4e2a 2 \u5c42 BertLayer \u8bad\u7ec3\u3002"),(0,r.kt)("p",null,"12 \u5c42 BertLayer \u7684\u6743\u91cd\u5c31\u4ece\u5df2\u7ecf\u9884\u8bad\u7ec3\u597d\u7684 Bert \u4e2d\u52a0\u8f7d\u3002\u800c\u7531\u4e8e\u6700\u4e0a\u9762\u7684\u4e24\u5c42 BertLayer \u662f\u81ea\u5df1\u6dfb\u52a0\u7684\uff0c\u5176\u6743\u91cd\u662f\u968f\u673a\u521d\u59cb\u5316\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u4e24\u5c42\u7684\u968f\u673a\u6743\u91cd\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5bf9\u6574\u4e2a\u6a21\u578b\u7684\u6743\u91cd\u6709\u7834\u574f\u3002\u6240\u4ee5\u5728\u8bbe\u8ba1\u635f\u5931\u51fd\u6570\u65f6\uff0c\u628a\u6700\u539f\u59cb\u7684 Bert \u7684 MLM \u635f\u5931\u4e5f\u8981\u52a0\u4e0a\u3002"),(0,r.kt)("h2",{id:"\u4e09\u4ee3\u7801\u89e3\u8bfb"},"\u4e09\u3001\u4ee3\u7801\u89e3\u8bfb"),(0,r.kt)("p",null,"\u4e0b\u9762\u4ecb\u7ecd\u6211\u5b66\u5230\u7684\u4e00\u4e9b\u4ee3\u7801\u6280\u5de7\u3002"),(0,r.kt)("h3",{id:"1-\u5982\u4f55\u521d\u59cb\u5316\u7684\u81ea\u5b9a\u4e49-bertlayer"},"1. \u5982\u4f55\u521d\u59cb\u5316\u7684\u81ea\u5b9a\u4e49 BertLayer\uff1f"),(0,r.kt)("p",null,"\u9996\u5148\uff0c\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u8bbe\u7f6e\u7684 BertLayer\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"self.c_head = nn.ModuleList(\n    # \u8bba\u6587\u4e2dmodel_args.n_head_layers=2\n    [BertLayer(bert.config) for _ in range(model_args.n_head_layers)]\n)\n")),(0,r.kt)("p",null,"\u5bf9\u4e8e\u8fd9\u4e2a ModuleList \u4e2d\u7684\u6bcf\u4e2a Module\uff0c\u53ef\u4ee5\u4f7f\u7528 apply \u65b9\u6cd5\uff0c\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u63a5\u6536 Module \u4e3a\u53c2\u6570\u7684\u51fd\u6570"),(0,r.kt)("p",null,"huggingface \u7684\u6bcf\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"PreTrainedModel"),"\u90fd\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"init_weights"),"\u65b9\u6cd5\uff0c\u8fd9\u662f\u8bf4\u660e\u6587\u6863\uff1a"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"init_weights")),(0,r.kt)("p",{parentName:"admonition"},"If needed prunes and maybe initializes weights. If using a custom ",(0,r.kt)("inlineCode",{parentName:"p"},"PreTrainedModel"),", you need to implement any initialization logic in ",(0,r.kt)("inlineCode",{parentName:"p"},"_init_weights"),".")),(0,r.kt)("p",null,"\u6240\u4ee5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 BertModel \u7684\u521d\u59cb\u5316\u6743\u91cd\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u7684 BertLayer\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"self.lm = BertModel\nself.c_head.apply(self.lm._init_weights)\n")),(0,r.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u770b BertModel \u4e2d\u7684\u8fd9\u4e2a\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def _init_weights(self, module):\n    """Initialize the weights"""\n    if isinstance(module, nn.Linear):\n        # Slightly different from the TF version which uses truncated_normal for initialization\n        # cf https://github.com/pytorch/pytorch/pull/5617\n        module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\n        if module.bias is not None:\n            module.bias.data.zero_()\n    elif isinstance(module, nn.Embedding):\n        module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\n        if module.padding_idx is not None:\n            module.weight.data[module.padding_idx].zero_()\n    elif isinstance(module, nn.LayerNorm):\n        module.bias.data.zero_()\n        module.weight.data.fill_(1.0)\n')),(0,r.kt)("p",null,"Bert \u4e2d\u7684 initializer_range=0.02\uff0c\u4e5f\u5c31\u662f\u7528 mean=0\uff0cstd=0.02 \u6765\u968f\u673a\u521d\u59cb\u5316\u53c2\u6570\u3002"),(0,r.kt)("h3",{id:"2\u5982\u4f55\u5f97\u5230\u7279\u5b9a\u9690\u85cf\u5c42\u7684\u8f93\u51fa"},"2.\u5982\u4f55\u5f97\u5230\u7279\u5b9a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\uff1f"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MaskedLMOutput"),"\u6709\u8fd9\u6837\u51e0\u4e2a\u503c\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"last_hidden_state: (batch_size, sequence_length, hidden_size)\uff0c\u6700\u540e\u4e00\u5c42\u8f93\u51fa\u7684\u9690\u85cf\u72b6\u6001"),(0,r.kt)("li",{parentName:"ul"},"pooler_output: (batch_size, hidden_size)\uff0c\u5e8f\u5217\u7b2c\u4e00\u4e2a token \u6700\u540e\u4e00\u5c42\u7684\u9690\u85cf\u72b6\u6001"),(0,r.kt)("li",{parentName:"ul"},"hidden_states: \u9700\u8981\u6307\u5b9a",(0,r.kt)("inlineCode",{parentName:"li"},"config.output_hidden_states=True"),"\uff0c\u8fd9\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a embedding\uff0c\u5176\u4f59\u5143\u7d20\u662f\u5404\u5c42\u7684\u8f93\u51fa\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u5f62\u72b6\u4e3a (batch_size, sequence_length, hidden_size)"),(0,r.kt)("li",{parentName:"ul"},"attentions: \u9700\u8981 ",(0,r.kt)("inlineCode",{parentName:"li"},"config.output_attentions=True"),"\uff0c\u8fd9\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5143\u7d20\u662f\u6bcf\u4e00\u5c42\u7684\u6ce8\u610f\u529b\u6743\u91cd")),(0,r.kt)("p",null,"\u6240\u4ee5\uff0c\u8981\u5f97\u5230 CLS \u6700\u540e\u4e00\u5c42\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"cls_hiddens = lm_out.hidden_states[-1][:, :1]\n")),(0,r.kt)("p",null,"\u5f97\u5230\u5176\u5b83\u4f4d\u7f6e\u7b2c 6 \u5c42\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"skip_hiddens = lm_out.hidden_states[6][:, 1:]\n")),(0,r.kt)("h2",{id:"\u4e09todo"},"\u4e09\u3001TODO"),(0,r.kt)("p",null,"\u6682\u4e14\u5148\u5199\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u5c31\u4ee5\u8fd9\u4e2a\u6a21\u578b\u4e3a\u4f8b\u8bb2\u8bb2\u5982\u4f55\u628a\u81ea\u5df1\u7684\u6a21\u578b\u52a0\u5165 transformers \u5e93\u4e2d"))}c.isMDXComponent=!0},16116:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-20230518103007659-6d4ad1fc9cd668bdd2bfae78f9eb2ca6.png"}}]);