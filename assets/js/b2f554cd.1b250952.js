"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[1477],{30010:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/2023/06/26/scir-test","metadata":{"permalink":"/blog/2023/06/26/scir-test","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2023/06-26-scir-test.md","source":"@site/blog/2023/06-26-scir-test.md","title":"\u54c8\u5de5\u5927 SCIR \u5b9e\u9a8c\u5ba4\u7b14\u8bd5\u5c0f\u8bb0","description":"\u6628\u5929\u53c2\u52a0\u4e86\u54c8\u5de5\u5927 SCIR \u5b9e\u9a8c\u5ba4\u7684 2024 \u7814\u7a76\u751f\u62db\u751f\u7b14\u8bd5\u3002\u8bd5\u9898\u5f88\u57fa\u7840\uff0c\u4f46\u9898\u91cf\u5f88\u5927\uff0c\u4e00\u4e2a\u534a\u5c0f\u65f6\u8981\u5b8c\u6210\u4e00\u9053\u903b\u8f91\u9898\uff0c\u4e00\u9053\u6587\u732e\u7ffb\u8bd1\u9898\uff0c\u4e24\u9053\u6570\u5b66\u9898\uff0c\u4e24\u9053\u795e\u7ecf\u7f51\u7edc\u76f8\u5173\u77e5\u8bc6\u7684\u9898\uff0c\u4e24\u9053\u7f16\u7a0b\u9898\u3002\u53cd\u6b63\u6211\u6ca1\u505a\u5b8c\u3002","date":"2023-06-26T00:00:00.000Z","formattedDate":"2023\u5e746\u670826\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"\u590d\u76d8","permalink":"/blog/tags/\u590d\u76d8"}],"readingTime":4.385,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","\u590d\u76d8"]},"nextItem":{"title":"\u6211\u7528 2 \u4e07\u6761\u804a\u5929\u8bb0\u5f55\uff0c\u521b\u9020\u4e86\u6211\u7684\u6570\u5b57\u751f\u547d","permalink":"/blog/2023/05/24/chatglm"}},"content":"\u6628\u5929\u53c2\u52a0\u4e86\u54c8\u5de5\u5927 SCIR \u5b9e\u9a8c\u5ba4\u7684 2024 \u7814\u7a76\u751f\u62db\u751f\u7b14\u8bd5\u3002\u8bd5\u9898\u5f88\u57fa\u7840\uff0c\u4f46\u9898\u91cf\u5f88\u5927\uff0c\u4e00\u4e2a\u534a\u5c0f\u65f6\u8981\u5b8c\u6210\u4e00\u9053\u903b\u8f91\u9898\uff0c\u4e00\u9053\u6587\u732e\u7ffb\u8bd1\u9898\uff0c\u4e24\u9053\u6570\u5b66\u9898\uff0c\u4e24\u9053\u795e\u7ecf\u7f51\u7edc\u76f8\u5173\u77e5\u8bc6\u7684\u9898\uff0c\u4e24\u9053\u7f16\u7a0b\u9898\u3002\u53cd\u6b63\u6211\u6ca1\u505a\u5b8c\u3002\\n\\n\u672c\u6587\u7ed9\u51fa\u4e24\u9053\u6570\u5b66\u9898\u548c\u4e24\u9053\u7f16\u7a0b\u9898\u7684\u9898\u89e3\uff0c\u6743\u5f53\u590d\u4e60\u5de9\u56fa\u57fa\u7840\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4e00\u3001\u9ad8\u65af\u5206\u5e03\u7684KL\u6563\u5ea6\\n\\n\u8fd9\u9053\u9898\u5b8c\u5168\u7a7a\u7740\u4e86\uff0c\u5fd8\u4e86 KL \u6563\u5ea6\u600e\u4e48\u6c42\u4e86\u3002\u7a76\u5176\u539f\u56e0\u662f\u6ca1\u6709\u6df1\u5165\u7406\u89e3\u4fe1\u606f\u71b5\u3001\u4ea4\u53c9\u71b5\u3001\u76f8\u5bf9\u71b5\u90a3\u4e00\u5957\u539f\u7406[^1]\u3002\\n\\n**\u4fe1\u606f\u71b5\uff1a**\\n$$\\nH_p(X)=-\\\\int p(x)\\\\cdot\\\\log(p(x))\\\\mathrm dx\\n$$\\n$-\\\\log_b(p(x))=\\\\log_b(\\\\frac{1}{p(x)})$\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4e8b\u4ef6\u7684\u4e0d\u786e\u5b9a\u6027\u7a0b\u5ea6\uff0c\u90a3\u4e48$H_p(X)$\u663e\u7136\u5c31\u662f\u6574\u4e2a\u5206\u5e03\u7684\u671f\u671b\u3002\\n\\n**\u4ea4\u53c9\u71b5\uff1a**\\n$$\\nH_{p_o,p_s}(X)=-\\\\int p_o(x)\\\\cdot\\\\log(p_s(x))\\\\mathrm dx\\n$$\\n\u5176\u4e2d\uff0c$p_s$\u4e3a\u4e3b\u89c2\u8ba4\u4e3a\u7684\u6982\u7387\u5206\u5e03\uff0c\u6216\u8005\u8bf4\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u9884\u6d4b\u51fa\u6765\u7684\u6982\u7387\u5206\u5e03\uff0c\u800c$p_o$\u4e3a\u5ba2\u89c2\u7684\u6982\u7387\u5206\u5e03\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u6211\u4eec\u5e26\u7740\u67d0\u4e2a\u4e3b\u89c2\u8ba4\u77e5\u53bb\u63a5\u89e6\u67d0\u4e2a\u5ba2\u89c2\u968f\u673a\u73b0\u8c61\u7684\u4e0d\u786e\u5b9a\u6027\u7a0b\u5ea6\u3002\\n\\n**\u76f8\u5bf9\u71b5\uff08KL\u6563\u5ea6\uff09\uff1a**\\n$$\\n\\\\begin{aligned}\\nD_{KL}(p_o||p_s) &= H_{p_o,p_s}(X)-H_{p_o}(X) \\\\\\\\\\n&=-\\\\int p_o(x)\\\\cdot\\\\log(\\\\frac{p_s(x)}{p_o(x)})\\\\mathrm dx \\n\\\\end{aligned}\\n$$\\n\u5176\u5b9e\u5c31\u662f\u8861\u91cf\u4ea4\u53c9\u71b5\u4e0e\u4fe1\u606f\u71b5\u7684\u5dee\u503c\u3002\\n\\nKL\u6563\u5ea6\u7684\u82e5\u5e72\u6761\u6027\u8d28\uff1a\\n\\n- KL\u6563\u5ea6\u5927\u4e8e\u7b49\u4e8e 0\uff0c\u7b80\u5355\u8bc1\u660e\uff1a\\n  - \u5bf9$x\\\\in(0,1]$\uff0c\u6709$\\\\text{ln}(x)\\\\le x-1$\uff0c\u4ece\u800c\\n    $$\\n    \\\\begin{aligned}\\n    D_{KL}(p_o||p_s) &=-\\\\int p_o(x)\\\\cdot\\\\text{ln}(\\\\frac{p_s(x)}{p_o(x)})\\\\mathrm dx  \\\\\\\\\\n    &\\\\ge -\\\\int p_o(x)\\\\cdot(\\\\frac{p_s(x)}{p_o(x)}-1)\\\\mathrm dx  \\\\\\\\\\n    &=-\\\\int p_o(x)\\\\cdot(\\\\frac{p_s(x)}{p_o(x)}-1)\\\\mathrm dx  \\\\\\\\\\n    &=-(\\\\int p_s(x)\\\\text{dx} - \\\\int p_o(x)\\\\mathrm dx ) \\\\\\\\\\n    &=0\\n    \\\\end{aligned}\\n    $$\\n- \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u4e2a\u5206\u5e03\u7684\u8ddd\u79bb\uff0c\u4f46\u662f\u5e76\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\u548c\u4e09\u89d2\u4e0d\u7b49\u5f0f\\n\\n\u56de\u5230\u672c\u9898\uff1a\\n$$\\n\\\\begin{aligned}\\n\\\\operatorname{D_{KL}}({\\\\mathcal{N}}(\\\\mu_{1},\\\\sigma_{1}^{2})||{\\\\mathcal{N}}(\\\\mu_{2},\\\\sigma_{2}^{2}))& =\\\\int_{\\\\mathrm x}\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm e^{-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}}\\\\log\\\\frac{\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm e^{-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}}}{\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_2}\\\\mathrm e^{-\\\\frac{(x-\\\\mu_2)^2}{2\\\\sigma_2^2}}}\\\\mathrm dx  \\\\\\\\\\n&=\\\\int_{x}\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm{e}^{-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}}\\\\left[\\\\log\\\\frac{\\\\sigma_2}{\\\\sigma_1}-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}+\\\\frac{(x-\\\\mu_2)^2}{2\\\\sigma_2^2}\\\\right]\\\\mathrm{dx}\\n\\\\end{aligned}\\n$$\\n\u7b2c\u4e00\u9879\uff1a\\n$$\\n\\\\log\\\\frac{\\\\sigma_2}{\\\\sigma_1}\\\\int_x\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm{e}^{-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}}\\\\mathrm{dx}=\\\\log\\\\frac{\\\\sigma_2}{\\\\sigma_1}\\n$$\\n\u7b2c\u4e8c\u9879\u8981\u770b\u51fa\u91cc\u9762\u662f\u65b9\u5dee\uff1a\\n$$\\n-\\\\frac{1}{2\\\\sigma_1^2}\\\\int_x(\\\\mathrm x-\\\\mu_1)^2\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm e^{-\\\\frac{(\\\\mathrm x-\\\\mu_1)^2}{2\\\\sigma_1^2}}\\\\mathrm dx=-\\\\frac{1}{2\\\\sigma_1^2}\\\\sigma_1^2=-\\\\frac{1}{2}\\n$$\\n\u7b2c\u4e09\u9879\uff0c\u6ce8\u610f$E(x)^2=D(x)+E(x^2)$\\n$$\\n\\\\begin{aligned}\\n\\\\frac{1}{2\\\\sigma_{2}^{2}}\\\\int_{x}(x-\\\\mu_{2})^{2}\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_{1}}\\\\mathrm{e}^{-\\\\frac{(\\\\mathrm{x}-\\\\mu_{1})^{2}}{2\\\\sigma_{1}^{2}}}\\\\mathrm{dx}& =\\\\frac{1}{2\\\\sigma_2^2}\\\\int_{x}(x^2-2\\\\mu_2x+\\\\mu_2^2)\\\\frac{1}{\\\\sqrt{2\\\\pi}\\\\sigma_1}\\\\mathrm{e}^{-\\\\frac{(x-\\\\mu_1)^2}{2\\\\sigma_1^2}}\\\\mathrm{dx}  \\\\\\\\\\n&=\\\\frac{\\\\sigma_1^2+\\\\mu_1^2-2\\\\mu_1\\\\mu_2+\\\\mu_2^2}{2\\\\sigma_2^2}=\\\\frac{\\\\sigma_1^2+(\\\\mu_1-\\\\mu_2)^2}{2\\\\sigma_2^2}\\n\\\\end{aligned}\\n$$\\n\u7efc\u4e0a\uff1a\\n$$\\n\\\\operatorname{D_{KL}}({\\\\mathcal{N}}(\\\\mu_{1},\\\\sigma_{1}^{2})||{\\\\mathcal{N}}(\\\\mu_{2},\\\\sigma_{2}^{2}))=\\\\log\\\\frac{\\\\sigma_2}{\\\\sigma_1}-\\\\frac{1}{2}+\\\\frac{\\\\sigma_1^2+(\\\\mu_1-\\\\mu_2)^2}{2\\\\sigma_2^2}\\n$$\\n\\n## \u4e8c\u3001\u7ec4\u5408\u9898\uff08\u56fe\u8bba\uff09\\n\\n> \u6709 n \u4e2a\u4eba\uff0c\u6bcf\u6b21\u5750\u6210\u4e00\u5708\uff0c\u4e3a\u4e86\u4f7f\u6bcf\u6b21\u6bcf\u4e2a\u4eba\u7684\u90bb\u5c45\u4e0e\u4e4b\u524d\u90fd\u4e0d\u540c\uff0c\u5219\u5750\u6cd5\u6700\u591a\u6709\u51e0\u6b21\uff1f\\n\\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u62bd\u8c61\u4e3a\uff1a\u5b8c\u5168\u56fe$K_n$\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a\u8fb9\u4e0d\u91cd\u590d\u7684\u54c8\u5bc6\u987f\u5708\u3002\\n\\n\u5f88\u660e\u663e\uff0c\u8981\u5c06\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u8bc6\u4e00\u904d\u4e14\u4e0d\u91cd\u590d\uff0c\u4e0d\u4f1a\u8d85\u8fc7$\\\\lfloor \\\\frac{n-1}{2} \\\\rfloor$\u6b21\uff0c\u4e3b\u8981\u662f\u8003\u8651\u5982\u4f55\u6784\u9020[^2]\uff1a\\n\\n\u5947\u6570\uff1a\\n\\n![](./assets/scir_1.png)\\n\\n\u53ef\u4ee5\u65cb\u8f6c$\\\\frac{n-1}{2}$\u6b21\\n\\n\u5076\u6570\uff1a\\n\\n![](./assets/scir_2.png)\\n\\n\u53ef\u4ee5\u65cb\u8f6c$\\\\frac{n-2}{2}$\u6b21\\n\\n\u6545\uff0c\u7b54\u6848\u4e3a$\\\\lfloor \\\\frac{n-1}{2} \\\\rfloor$\\n\\n## \u4e09\u3001\u7f16\u7a0b\u9898\uff08\u6c42\u7f16\u8f91\u8ddd\u79bb\uff09\\n\\n\u539f\u9898\uff1a[72. \u7f16\u8f91\u8ddd\u79bb - \u529b\u6263](https://leetcode.cn/problems/edit-distance/)\\n\\n\u7ecf\u5178\u7684\u5b57\u7b26\u4e32 dp \u9898\uff1a\\n\\n```cpp\\nint minDistance(string word1, string word2) {\\n    int m = word1.size(), n = word2.size();\\n    vector<vector<int>> dp(m + 1, vector<int>(n + 1));\\n    // dp[i][j] = max(\\n    //\\t\\tdp[i-1][j] + 1, \\t\u5220\u9664\\n    // \\t\\tdp[i][j-1] + 1, \\t\u63d2\u5165\\n    //\\t\\tdp[i-1][j-1] + 1, \\t\u4fee\u6539\\n    //\\t)\\n    for (int i = 0; i <= m; i++) dp[i][0] = i;\\n    for (int j = 0; j <= n; j++) dp[0][j] = j;\\n    for (int i = 1; i <= m; i++) {\\n        for(int j = 1; j <= n; j++) {\\n            dp[i][j] = min(dp[i-1][j] + 1, dp[i][j-1] + 1);\\n            if (word1[i - 1] == word2[j - 1]) {\\n                dp[i][j] = min(dp[i][j], dp[i-1][j-1]);\\n            }\\n            else {\\n                dp[i][j] = min(dp[i][j], dp[i-1][j-1] + 1);\\n            }\\n        }\\n    }\\n    return dp[m][n];\\n}\\n```\\n\\n## \u56db\u3001\u7f16\u7a0b\u9898\uff08\u6ed1\u52a8\u7a97\u53e3\uff09\\n\\n\u539f\u9898\uff1a[239. \u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c - \u529b\u6263](https://leetcode.cn/problems/sliding-window-maximum/)\\n\\n\u4e3b\u8981\u8003\u8651\u5982\u679c i > j\uff0c\u5e76\u4e14 nums[i] > nums[j]\uff0c\u5219 j \u5c31\u53ef\u4ee5\u4e22\u5f03\uff0c\u6545\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff1a\\n\\n```cpp\\nvector<int> maxSlidingWindow(vector<int>& nums, int k) {\\n    int n = nums.size();\\n    deque<int> d;\\n    vector<int> ans;\\n    for(int i = 0; i < n; i++) {\\n        while(!d.empty() && nums[d.back()] <= nums[i]) d.pop_back();\\n        d.push_back(i);\\n        if(i >= k - 1) {\\n            while(!d.empty() && d.front() <= i - k) d.pop_front();\\n            ans.push_back(nums[d.front()]);\\n        }\\n    }\\n    return ans;\\n}\\n```\\n\\n\\n\\n[^1]:[\u4e00\u7bc7\u6587\u7ae0\u8bb2\u6e05\u695a\u4ea4\u53c9\u71b5\u548cKL\u6563\u5ea6 - \u77e5\u4e4e (zhihu.com)](https://zhuanlan.zhihu.com/p/573385147)\\n[^2]:[11\u4e2a\u4eba\u5750\u4e00\u5706\u684c\u513f\uff0c\u6bcf\u6b21\u6bcf\u4eba\u5de6\u53f3\u8fb9\u4e24\u4eba\u90fd\u4e0d\u540c\uff0c\u95ee\u6709\u51e0\u79cd\u5750\u6cd5\uff1f](https://www.zhihu.com/question/47823783)"},{"id":"/2023/05/24/chatglm","metadata":{"permalink":"/blog/2023/05/24/chatglm","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2023/05-24-chatglm.md","source":"@site/blog/2023/05-24-chatglm.md","title":"\u6211\u7528 2 \u4e07\u6761\u804a\u5929\u8bb0\u5f55\uff0c\u521b\u9020\u4e86\u6211\u7684\u6570\u5b57\u751f\u547d","description":"\u672c\u6587\u4ecd\u5728\u6301\u7eed\u66f4\u65b0\u4e2d\uff01","date":"2023-05-24T00:00:00.000Z","formattedDate":"2023\u5e745\u670824\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"\u9879\u76ee","permalink":"/blog/tags/\u9879\u76ee"}],"readingTime":4.095,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","\u9879\u76ee"]},"prevItem":{"title":"\u54c8\u5de5\u5927 SCIR \u5b9e\u9a8c\u5ba4\u7b14\u8bd5\u5c0f\u8bb0","permalink":"/blog/2023/06/26/scir-test"},"nextItem":{"title":"[\u4ee3\u7801\u89e3\u8bfb] BERT\u53e5\u5b50\u8868\u5f81\u80fd\u529b\u7684\u6539\u8fdb\uff1aCondenser","permalink":"/blog/2023/05/18/condenser"}},"content":"**\u672c\u6587\u4ecd\u5728\u6301\u7eed\u66f4\u65b0\u4e2d\uff01**\\n\\n\u6700\u8fd1\u6709\u4e2a\u5947\u5947\u602a\u602a\u7684\u60f3\u6cd5\uff1a\u5982\u679c\u7528\u6211\u7684\u6240\u6709\u793e\u4ea4\u8f6f\u4ef6\u7684\u804a\u5929\u8bb0\u5f55\u6765\u8bad\u7ec3\u50cf ChatGPT \u8fd9\u6837\u7684\u5927\u8bed\u8a00\u6a21\u578b\uff0c\u90a3\u4e48\u5b83\u80fd\u4e0d\u80fd\u5b66\u4f1a\u6211\u7684\u8bf4\u8bdd\u98ce\u683c\uff0c\u751a\u81f3\u62e5\u6709\u6211\u7684\u8bb0\u5fc6\u5462\uff1f\\n\\n\u8bf4\u5e72\u5c31\u5e72\uff0c\u6211\u4ece\u6211\u7684 QQ \u5bfc\u51fa\u6240\u6709\u804a\u5929\u8bb0\u5f55\uff0c\u5e76\u6784\u9020\u51fa\u4e86\u4e24\u4e07\u6761\u5bf9\u8bdd\u6570\u636e\uff0c\u4f7f\u7528 P-Tune v2 \u5fae\u8c03\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u7684 [ChatGLM-6B](https://github.com/THUDM/ChatGLM-6B) \u6a21\u578b\uff0c\u521b\u9020\u4e86\u6211\u7684\u6570\u5b57\u751f\u547d\uff01\\n\\n\u9879\u76ee\u5df2\u5f00\u6e90\uff1a[kcxain/CloneLLM: Clone Yourself by Fine-tuning a Large Language Model | \u7528\u5927\u8bed\u8a00\u6a21\u578b\u521b\u9020\u4f60\u7684\u6570\u5b57\u751f\u547d\uff01 (github.com)](https://github.com/kcxain/CloneLLM)\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4e00\u3001\u6570\u636e\u96c6\u6784\u9020\\n\\n- \u9884\u5904\u7406\u6570\u636e\uff1a\u4f7f\u7528 QQ \u804a\u5929\u65f6\uff0c\u7528\u6237\u503e\u5411\u4e8e\u5c06\u4e00\u6574\u6bb5\u8bed\u4e49\u5b8c\u6574\u7684\u6d88\u606f\u5206\u6210\u591a\u6761\u53d1\u51fa\u3002\u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u9636\u6bb5\u4f1a\u628a\u540c\u4e00\u7528\u6237\u8fde\u7eed\u53d1\u51fa\u7684\u6240\u6709\u6d88\u606f\u5408\u5e76\u4e3a\u4e00\u6761\u3002\\n- \u6784\u9020\u5bf9\u8bdd\u6570\u636e\u96c6\uff1a\u5bf9\u4e8e\u4f60\u53d1\u51fa\u7684\u6bcf\u6761\u6d88\u606f\uff0c\u5c06\u8fd9\u6761\u6d88\u606f\u8bbe\u7f6e\u4e3a\u591a\u8f6e\u5bf9\u8bdd\u7684\u6700\u540e\u4e00\u6761 response\uff0c\u8be5\u6d88\u606f\u4e4b\u524d\u7684\u6d88\u606f\u4f5c\u4e3a promt\uff0c\u65e0\u8bba\u662f\u79c1\u804a\u8fd8\u662f\u7fa4\u804a\u90fd\u53d6\u524d\u82e5\u5e72\u8f6e\u4f5c\u4e3a\u5bf9\u8bdd\u5386\u53f2\uff08TODO\uff1a\u7fa4\u804a\u662f\u5426\u6709\u66f4\u597d\u7684\u5904\u7406\u65b9\u5f0f\uff1f\uff09\\n\\n\u6700\u540e\u6784\u9020\u7684\u5bf9\u8bdd\u6570\u636e\u96c6\u793a\u4f8b\u5982\u4e0b\uff1a\\n\\n```json\\n{\\n    \\"prompt\\": \\"\u662f\u72b6\u6001\u56fe\u7684\u4e5d\u4e2a\u516c\u5f0f \u5427 \u4e0d\u662f\u4e5d\u4e2a\u72b6\u6001\u56fe\u5427\\",\\n    \\"response\\": \\"\u80fd\u624b\u5199\u5417\\",\\n    \\"history\\": [\\n        [\\"\u95ee\u4e00\u4e0b\u5b50\\", \\"\u54ea\u6765\u7684\u4e5d\u5f20\u72b6\u6001\u8f6c\u79fb\u56fe\u554a \u5c31\u90a3\u4e00\u5f20 \u540e\u9762\u7684\u90fd\u662f\u7ed3\u679c\\"],\\n        [\\"\u54ce\u5440\u7ed9\u6211\u770b\u770b\u561b \u4f60\u4ec0\u4e48\u65f6\u5019\u7a7f\u6b63\u88c5\\", \\"\u4f60\u518d\u628aPPT\u53d1\u7ed9\u6211\\"],\\n        [\\"\u6211\u731c\u7684\u8fd8\u662f\u5f88\u63a5\u8fd1\u6ef4\u561b\\", \\"\u521a\u526a\u5b8c\u5934\\"],\\n        [\\"23 \u6fc0\u60c5\u731c\u4ef7\\", \\"\u732a\u8098\u662f\u53e6\u5916\u73b0\u5207\u7684 9\u5757 \u5269\u4e0b\u768410.5\\"],\\n        [\\"\u5de6\u4e0a\u89d2\u662f\u4ec0\u4e48\\", \\"\u732a\u811a \u731c\u731c\u8fd9\u603b\u5171\u591a\u5c11\u94b1\\"],\\n        [\\"\u4f60\u8bf4\u561e\\", \\"\u6211\u548b\u77e5\u9053\u634f\\"]\\n    ]\\n}\\n{\\n    \\"prompt\\": \\"\u4e0b\u5468\u4e09\u4e4b\u524d\\",\\n    \\"response\\": \\"\u8bba\u6587\u7684\u8fd9\u4e2a\u516c\u5f0f\u9519\u4e86 \u4f60\u53bb\u7fa4\u91cc\u8bf4\u4e00\u4e0b \u8bf4\u8fd9\u4e2a\u8bba\u6587\u4e2d\u8fd9\u4e2a\u516c\u5f0f\u6253\u9519\u4e86 \u5e94\u8be5\u662f\\",\\n    \\"history\\": [\\n        [\\"\u662f\u72b6\u6001\u56fe\u7684\u4e5d\u4e2a\u516c\u5f0f \u5427 \u4e0d\u662f\u4e5d\u4e2a\u72b6\u6001\u56fe\u5427\\", \\"\u80fd\u624b\u5199\u5417\\"],\\n        [\\"\u95ee\u4e00\u4e0b\u5b50\\", \\"\u54ea\u6765\u7684\u4e5d\u5f20\u72b6\u6001\u8f6c\u79fb\u56fe\u554a \u5c31\u90a3\u4e00\u5f20 \u540e\u9762\u7684\u90fd\u662f\u7ed3\u679c\\"],\\n        [\\"\u54ce\u5440\u7ed9\u6211\u770b\u770b\u561b \u4f60\u4ec0\u4e48\u65f6\u5019\u7a7f\u6b63\u88c5\\", \\"\u4f60\u518d\u628aPPT\u53d1\u7ed9\u6211\\"],\\n        [\\"\u6211\u731c\u7684\u8fd8\u662f\u5f88\u63a5\u8fd1\u6ef4\u561b\\", \\"\u521a\u526a\u5b8c\u5934\\"],\\n        [\\"23 \u6fc0\u60c5\u731c\u4ef7\\", \\"\u732a\u8098\u662f\u53e6\u5916\u73b0\u5207\u7684 9\u5757 \u5269\u4e0b\u768410.5\\"],\\n        [\\"\u5de6\u4e0a\u89d2\u662f\u4ec0\u4e48\\", \\"\u732a\u811a \u731c\u731c\u8fd9\u603b\u5171\u591a\u5c11\u94b1\\"]\\n    ]\\n}\\n```\\n\\n## \u4e8c\u3001\u5fae\u8c03\u7b56\u7565\\n\\n### 1. P-tuning v2\\n\\n\u8bba\u6587\u94fe\u63a5\uff1a[P-Tuning v2: Prompt Tuning Can Be Comparable to Finetuning Universally Across Scales and Tasks](https://arxiv.org/abs/2110.07602) \\n\\n![](./assets/P-tuning-v2-1684976826225-2.png)\\n\\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5728\u6a21\u578b\u6240\u6709\u5c42\u6dfb\u52a0\u53ef\u8bad\u7ec3\u7684 Prompts \u4f5c\u4e3a Prefix\uff0c\u8bad\u7ec3\u65f6\u51bb\u7ed3\u539f\u59cb\u9884\u8bad\u7ec3\u6a21\u578b\u53c2\u6570\uff0c\u53ea\u8bad\u7ec3 Prefix \u90e8\u5206\u3002\\n\\n### 2. LoRA \u5fae\u8c03\\n\\nTODO\\n\\n### 3. \u5168\u53c2\u6570\u5fae\u8c03\\n\\nTODO\\n\\n### 4. \u5fae\u8c03\u53c2\u6570\u96c6\u6210\\n\\n\u89c1 [UniPELT: A Unified Framework for Parameter-Efficient Language Model Tuning](https://arxiv.org/abs/2110.07577)\\n\\nTODO\\n\\n## \u4e09\u3001\u7ed3\u679c\u5206\u6790\\n\\n\u76ee\u524d\u7ed3\u679c\u8fd8\u5f88\u5dee\u52b2\uff1a\\n\\n![](./assets/image-20230525005652859.png)\\n\\n- \u56de\u590d\u957f\u5ea6\u7684\u95ee\u9898\u3002\u7531\u4e8e QQ \u5bf9\u8bdd\u6570\u636e\u96c6\u7684\u95ee\u9898\uff0c\u6bcf\u6761\u56de\u590d\u90fd\u975e\u5e38\u77ed\\n- \u56de\u590d\u8d28\u91cf\u95ee\u9898\u3002\u5f88\u591a\u56de\u590d\u7b54\u975e\u6240\u95ee\uff0c\u5e94\u8be5\u662f QQ \u7fa4\u5bf9\u8bdd\u7684\u6570\u636e\u7684\u6c61\u67d3\\n- \u8bb0\u5fc6\u95ee\u9898\u3002\u6a21\u578b\u5e76\u6ca1\u6709\u5f88\u597d\u8bb0\u4f4f\u6211\u7684\u4fe1\u606f\uff0c\u6000\u7591\u662f P-tuning \u5fae\u8c03\u7684\u7f3a\u9677"},{"id":"/2023/05/18/condenser","metadata":{"permalink":"/blog/2023/05/18/condenser","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2023/05-18-condenser.md","source":"@site/blog/2023/05-18-condenser.md","title":"[\u4ee3\u7801\u89e3\u8bfb] BERT\u53e5\u5b50\u8868\u5f81\u80fd\u529b\u7684\u6539\u8fdb\uff1aCondenser","description":"Paper a Pre-training Architecture for Dense Retrieval","date":"2023-05-18T00:00:00.000Z","formattedDate":"2023\u5e745\u670818\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"\u4ee3\u7801\u89e3\u8bfb","permalink":"/blog/tags/\u4ee3\u7801\u89e3\u8bfb"}],"readingTime":4.125,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","\u4ee3\u7801\u89e3\u8bfb"]},"prevItem":{"title":"\u6211\u7528 2 \u4e07\u6761\u804a\u5929\u8bb0\u5f55\uff0c\u521b\u9020\u4e86\u6211\u7684\u6570\u5b57\u751f\u547d","permalink":"/blog/2023/05/24/chatglm"},"nextItem":{"title":"\u8d5b\u5c14\u7b14\u8bb0 | \u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21","permalink":"/blog/2023/04/26/dstc11"}},"content":"> Paper: [Condenser: a Pre-training Architecture for Dense Retrieval](https://arxiv.org/abs/2104.08253)\\n>\\n> Code: https://github.com/luyug/Condenser\\n>\\n> Publication: EMNLP 2021\\n\\n\u6700\u8fd1\u5728\u5fd9\u7684\u9879\u76ee\u9700\u8981\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u6765\u8868\u5f81\u53e5\u5b50\uff0c\u4e8e\u662f\u5c31\u8bfb\u5230\u4e86\u8fd9\u7bc7\u8bba\u6587\u3002\u8fd9\u7bc7\u8bba\u6587\u7684 idea \u548c\u4ee3\u7801\u90fd\u4e0d\u590d\u6742\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u5bf9 Bert \u7684\u4e00\u4e2a\u7b80\u5355\u6539\u9020\u3002\u6211\u5199\u672c\u6587\u7684\u76ee\u7684\u662f\u8bb0\u5f55\u5b66\u4e60\u4e00\u4e0b\u5b83\u6539\u9020 bert \u7684\u4ee3\u7801\u6280\u5de7\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4e00\u3001\u6a21\u578b\u52a8\u673a\\n\\nCondenser \u7684\u52a8\u673a\u6765\u6e90\u4e8e\u4e00\u4e2a\u5df2\u53d1\u73b0\u7684\u73b0\u8c61\uff1a\u4e00\u4e2a\u9884\u8bad\u7ec3\u597d\u7684 Bert \u4e2d\uff0c\u4e2d\u95f4\u5c42\u7684 CLS \u4e0e\u53e5\u5b50\u4e2d\u7684\u5176\u4ed6 token \u7684 attention \u7cfb\u6570\u5f88\u4f4e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u5c42 CLS \u624d\u4e0e\u6240\u6709\u7684 token \u6709\u6bd4\u8f83\u5927\u7684 attention\u7cfb\u6570\u3002\u6240\u4ee5\uff0c\u662f\u5426\u53ef\u4ee5\u8ba9\u6700\u540e\u4e00\u5c42\u7684 CLS \u5411\u91cf\u4e0e\u4e2d\u95f4\u5c42\u7684\u5176\u5b83 token \u7684\u5411\u91cf\u505a self-attention \u5b66\u4e60\u5462\uff1f\\n\\n## \u4e8c\u3001\u6a21\u578b\u7ed3\u6784\\n\\n\u57fa\u4e8e\u8fd9\u6837\u7684\u52a8\u673a\uff0c\u6a21\u578b\u5982\u4e0b\uff1a\\n\\n![](./assets/image-20230518103007659.png)\\n\\n\u5c06 12 \u5c42 BertLayer \u5206\u4e3a Late \u548c Early\uff0c\u5404 6 \u5c42\u3002\u7528\u7b2c 12 \u5c42\u7684 CLS \u4f4d\u7f6e\u5411\u91cf\u4e0e\u7b2c 6 \u5c42\u9664 CLS \u4f4d\u7f6e\u7684\u5176\u4ed6\u9690\u85cf\u5411\u91cf\u62fc\u63a5\u6210\u539f\u957f\u5ea6\u7684\u8f93\u51fa\u5411\u91cf\uff0c\u6700\u540e\u63a5\u4e00\u4e2a 2 \u5c42 BertLayer \u8bad\u7ec3\u3002\\n\\n12 \u5c42 BertLayer \u7684\u6743\u91cd\u5c31\u4ece\u5df2\u7ecf\u9884\u8bad\u7ec3\u597d\u7684 Bert \u4e2d\u52a0\u8f7d\u3002\u800c\u7531\u4e8e\u6700\u4e0a\u9762\u7684\u4e24\u5c42 BertLayer \u662f\u81ea\u5df1\u6dfb\u52a0\u7684\uff0c\u5176\u6743\u91cd\u662f\u968f\u673a\u521d\u59cb\u5316\u7684\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u4e24\u5c42\u7684\u968f\u673a\u6743\u91cd\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5bf9\u6574\u4e2a\u6a21\u578b\u7684\u6743\u91cd\u6709\u7834\u574f\u3002\u6240\u4ee5\u5728\u8bbe\u8ba1\u635f\u5931\u51fd\u6570\u65f6\uff0c\u628a\u6700\u539f\u59cb\u7684 Bert \u7684 MLM \u635f\u5931\u4e5f\u8981\u52a0\u4e0a\u3002\\n\\n## \u4e09\u3001\u4ee3\u7801\u89e3\u8bfb\\n\\n\u4e0b\u9762\u4ecb\u7ecd\u6211\u5b66\u5230\u7684\u4e00\u4e9b\u4ee3\u7801\u6280\u5de7\u3002\\n\\n### 1. \u5982\u4f55\u521d\u59cb\u5316\u7684\u81ea\u5b9a\u4e49 BertLayer\uff1f\\n\\n\u9996\u5148\uff0c\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u8bbe\u7f6e\u7684 BertLayer\uff1a\\n\\n```python\\nself.c_head = nn.ModuleList(\\n    # \u8bba\u6587\u4e2dmodel_args.n_head_layers=2\\n    [BertLayer(bert.config) for _ in range(model_args.n_head_layers)]\\n)\\n```\\n\\n\u5bf9\u4e8e\u8fd9\u4e2a ModuleList \u4e2d\u7684\u6bcf\u4e2a Module\uff0c\u53ef\u4ee5\u4f7f\u7528 apply \u65b9\u6cd5\uff0c\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u63a5\u6536 Module \u4e3a\u53c2\u6570\u7684\u51fd\u6570\\n\\nhuggingface \u7684\u6bcf\u4e2a`PreTrainedModel`\u90fd\u6709`init_weights`\u65b9\u6cd5\uff0c\u8fd9\u662f\u8bf4\u660e\u6587\u6863\uff1a\\n\\n:::info `init_weights`\\n\\nIf needed prunes and maybe initializes weights. If using a custom `PreTrainedModel`, you need to implement any initialization logic in `_init_weights`.\\n\\n:::\\n\\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 BertModel \u7684\u521d\u59cb\u5316\u6743\u91cd\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u7684 BertLayer\uff1a\\n\\n```python\\nself.lm = BertModel\\nself.c_head.apply(self.lm._init_weights)\\n```\\n\\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u770b BertModel \u4e2d\u7684\u8fd9\u4e2a\u65b9\u6cd5\uff1a\\n\\n```python\\ndef _init_weights(self, module):\\n    \\"\\"\\"Initialize the weights\\"\\"\\"\\n    if isinstance(module, nn.Linear):\\n        # Slightly different from the TF version which uses truncated_normal for initialization\\n        # cf https://github.com/pytorch/pytorch/pull/5617\\n        module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\\n        if module.bias is not None:\\n            module.bias.data.zero_()\\n    elif isinstance(module, nn.Embedding):\\n        module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\\n        if module.padding_idx is not None:\\n            module.weight.data[module.padding_idx].zero_()\\n    elif isinstance(module, nn.LayerNorm):\\n        module.bias.data.zero_()\\n        module.weight.data.fill_(1.0)\\n```\\n\\nBert \u4e2d\u7684 initializer_range=0.02\uff0c\u4e5f\u5c31\u662f\u7528 mean=0\uff0cstd=0.02 \u6765\u968f\u673a\u521d\u59cb\u5316\u53c2\u6570\u3002\\n\\n### 2.\u5982\u4f55\u5f97\u5230\u7279\u5b9a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\uff1f\\n\\n`MaskedLMOutput`\u6709\u8fd9\u6837\u51e0\u4e2a\u503c\uff1a\\n\\n- last_hidden_state: (batch_size, sequence_length, hidden_size)\uff0c\u6700\u540e\u4e00\u5c42\u8f93\u51fa\u7684\u9690\u85cf\u72b6\u6001\\n- pooler_output: (batch_size, hidden_size)\uff0c\u5e8f\u5217\u7b2c\u4e00\u4e2a token \u6700\u540e\u4e00\u5c42\u7684\u9690\u85cf\u72b6\u6001\\n- hidden_states: \u9700\u8981\u6307\u5b9a`config.output_hidden_states=True`\uff0c\u8fd9\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a embedding\uff0c\u5176\u4f59\u5143\u7d20\u662f\u5404\u5c42\u7684\u8f93\u51fa\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u5f62\u72b6\u4e3a (batch_size, sequence_length, hidden_size)\\n- attentions: \u9700\u8981 `config.output_attentions=True`\uff0c\u8fd9\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5143\u7d20\u662f\u6bcf\u4e00\u5c42\u7684\u6ce8\u610f\u529b\u6743\u91cd\\n\\n\u6240\u4ee5\uff0c\u8981\u5f97\u5230 CLS \u6700\u540e\u4e00\u5c42\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a\\n\\n```python\\ncls_hiddens = lm_out.hidden_states[-1][:, :1]\\n```\\n\\n\u5f97\u5230\u5176\u5b83\u4f4d\u7f6e\u7b2c 6 \u5c42\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a\\n\\n```python\\nskip_hiddens = lm_out.hidden_states[6][:, 1:]\\n```\\n\\n## \u4e09\u3001TODO\\n\\n\u6682\u4e14\u5148\u5199\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u5c31\u4ee5\u8fd9\u4e2a\u6a21\u578b\u4e3a\u4f8b\u8bb2\u8bb2\u5982\u4f55\u628a\u81ea\u5df1\u7684\u6a21\u578b\u52a0\u5165 transformers \u5e93\u4e2d"},{"id":"/2023/04/26/dstc11","metadata":{"permalink":"/blog/2023/04/26/dstc11","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2023/04-26-dstc11.md","source":"@site/blog/2023/04-26-dstc11.md","title":"\u8d5b\u5c14\u7b14\u8bb0 | \u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21","description":"\u672c\u6587\u6700\u521d\u6295\u7a3f\u5728\u54c8\u5de5\u5927 SCIR \u516c\u4f17\u53f7\u4e0a","date":"2023-04-26T00:00:00.000Z","formattedDate":"2023\u5e744\u670826\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"\u7ade\u8d5b","permalink":"/blog/tags/\u7ade\u8d5b"},{"label":"\u590d\u76d8","permalink":"/blog/tags/\u590d\u76d8"}],"readingTime":27.205,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","unlisted":true,"tags":["NLP","\u7ade\u8d5b","\u590d\u76d8"]},"prevItem":{"title":"[\u4ee3\u7801\u89e3\u8bfb] BERT\u53e5\u5b50\u8868\u5f81\u80fd\u529b\u7684\u6539\u8fdb\uff1aCondenser","permalink":"/blog/2023/05/18/condenser"},"nextItem":{"title":"BERT \u5bb6\u65cf\u5927\u5168\u89e3\u2014\u2014RoBERTa, DeBERTa","permalink":"/blog/2022/11/12/bert-family"}},"content":"> \u672c\u6587\u6700\u521d\u6295\u7a3f\u5728\u54c8\u5de5\u5927 SCIR \u516c\u4f17\u53f7\u4e0a\\n>\\n> \u4f5c\u8005\uff1a\u67ef\u660c\u946b\u3001\u5b59\u695a\u82ae\u3001\u9a6c\u9f99\u8f69\\n\\n## 1 \u5f15\u8a00\\n\\n\u5bf9\u8bdd\u7cfb\u7edf\u6280\u672f\u6311\u6218\u8d5b DSTC\uff08The Dialog System Technology Challenge\uff09\u662f\u5bf9\u8bdd\u6280\u672f\u9886\u57df\u7684\u9876\u7ea7\u8d5b\u4e8b\uff0c\u5230 2023 \u5e74\u5df2\u4e3e\u529e\u81f3\u7b2c 11 \u5c4a\u3002\\n\\nDSTC11 \u5171\u8bbe\u6709 5 \u4e2a\u8d5b\u9053\uff0c\u5176\u4e2d\u521a\u521a\u7ed3\u675f\u7684 track5 \u7684\u4e3b\u9898\u662f**\u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21**\u3002\u672c\u8d5b\u9053\u5305\u62ec\u4e09\u4e2a\u5b50\u4efb\u52a1\uff1a\\n\\n- **Turn Detection**\uff1a\u5224\u65ad\u5f53\u524d\u7684\u5bf9\u8bdd\u662f\u5426\u9700\u8981\u5916\u90e8\u77e5\u8bc6\\n\\n- **Knowledge Selection**\uff1a\u5728\u975e\u7ed3\u6784\u5316\u4e3b\u89c2\u77e5\u8bc6\u6587\u6863\u4e2d\u9009\u51fa\u76f8\u5173\u7684\u77e5\u8bc6\u5019\u9009\\n\\n- **Response Generation**\uff1a\u6839\u636e\u7b2c\u4e8c\u6b65\u7684\u77e5\u8bc6\u5019\u9009\u751f\u6210\u56de\u590d\\n\\n\u6211\u4eec\u53c2\u52a0\u4e86 DSTC11-track5 \u5e76\u5728\u6240\u6709 14 \u4e2a\u53c2\u8d5b\u961f\u4f0d\u4e2d\u6392\u540d\u7b2c\u4e09\uff08\u5ba2\u89c2\u6307\u6807\uff09\uff0c\u5176\u4e2d Turn Detection \u5b50\u4efb\u52a1\u6392\u540d\u7b2c\u4e00\u3002\u672c\u6587\u5c06\u4ecb\u7ecd track 5 \u76f8\u5173\u5185\u5bb9\u4ee5\u53ca\u6211\u4eec\u5728\u7ade\u8d5b\u4e2d\u5c1d\u8bd5\u7684\u65b9\u6cd5\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## 2 \u8d5b\u9898\u4ecb\u7ecd\\n\\n\u6211\u4eec\u5728\u672c\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u5177\u6709\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd (SK-TOD) \u5efa\u6a21\u4efb\u52a1\u7684\u6570\u636e\u96c6\u3001\u5b50\u4efb\u52a1\u3001\u7ade\u8d5b\u8bc4\u4ef7\u6307\u6807\u4ee5\u53ca\u8fdb\u884c\u7684\u524d\u671f\u76f8\u5173\u8c03\u7814\u3002\\n\\n### 2.1 \u6570\u636e\u96c6\u4ecb\u7ecd\\n\\n\u4e0b\u56fe[^1]\u4e3a\u5bf9\u8bdd\u6570\u636e\u96c6\u4e2d\u7684\u4e09\u4e2a\u5bf9\u8bdd\u5b9e\u4f8b\u548c\u4e0e\u5b83\u4eec\u76f8\u5173\u7684\u77e5\u8bc6\u6570\u636e\u4e2d\u7684\u4e3b\u89c2\u77e5\u8bc6\u6761\u76ee\u793a\u4f8b\uff1a\\n\\n![\u56fe1. \u6570\u636e\u96c6\u793a\u4f8b\u3002\u6700\u4e0a\u65b9\u7684\u4e3b\u89c2\u77e5\u8bc6\u90e8\u5206\u662f Gonville Hotel \u548c Avalon Hotel \u7684\u8bc4\u8bba\uff0c\u4efb\u52a1\u8981\u6c42\u4e3a\u4e0b\u65b9\u7684\u4e09\u4e2a\u5bf9\u8bdd\u4e2d\u6bcf\u8f6e\u56de\u590d\u627e\u5230\u76f8\u5173\u7684\u77e5\u8bc6\u6761\u76ee](./assets/image-dataset.png)\\n\\n\u5bf9\u8bdd\u6570\u636e\u96c6\u6709\u4e24\u90e8\u5206\u6765\u6e90\uff1a\\n\\n- \u4e3b\u529e\u65b9\u6807\u6ce8\u7684 19696 \u6761\u9700\u8981\u4e3b\u89c2\u77e5\u8bc6\u7684\u5bf9\u8bdd\uff0c\u8fd9\u4e9b\u5bf9\u8bdd\u65e2\u6709\u5305\u542b\u5355\u4e2a\u5b9e\u4f53\uff0c\u53c8\u6709\u5305\u542b\u591a\u4e2a\u5b9e\u4f53\u7684\uff08\u5982\u56fe 1 \u7684 Dialogue 2\uff09\u3002\\n- \u4ece MultiWOZ[^2] \u4efb\u52a1\u578b\u5bf9\u8bdd\u6570\u636e\u96c6\u4e2d\u62bd\u53d6\u7684 18383 \u6761\u4e0d\u9700\u8981\u4e3b\u89c2\u77e5\u8bc6\u7684\u5bf9\u8bdd\u3002\\n\\n\u77e5\u8bc6\u5305\u62ec\u4e24\u79cd\uff1areview \u7c7b\u578b\u7684\u4e3b\u89c2\u77e5\u8bc6\uff08\u7531\u591a\u4e2a\u53e5\u5b50\u7ec4\u6210\uff09 \u548c FAQs \u7c7b\u578b\u7684\u77e5\u8bc6\uff08\u95ee\u7b54\u5bf9\uff09\u3002\u8fd9\u4e9b\u77e5\u8bc6\u88ab\u88ab\u5212\u5206\u4e3a\u4e24\u4e2a\u57df\uff1ahotel \u548c restaurant\uff0c\u5206\u522b\u5305\u542b 33 \u4e2a\u5b9e\u4f53\u548c 110 \u4e2a\u5b9e\u4f53\u3002\\n\\n\u4f8b\u5982\uff0chotel \u57df\u4e2d\u7684 Hobsons House \u5b9e\u4f53\uff0c\u5305\u542b\u7684 review \u77e5\u8bc6\u6709\uff1a\\n\\n```\\n\\"I was very please with my recent visit to Hobsons House.\\"\\n\\"I was on a business trip and needed a quiet place to stay and this place fit the bill!\\"\\n\\"While I was not pleased with the slow wi-fi and small room, I was content with their awesome breakfast options, friendly and engaging staff members and the best part!\\"\\n\\"Nice and quiet, just the way I like it!\\"\\n\\"Would definitely recommend this place to friends and plan on staying here again on my next venture!\\"\\n...\\n```\\n\\n\u5305\u542b\u7684 FAQs \u77e5\u8bc6\u6709\uff1a\\n\\n```\\nquestion: \\"What do you offer for breakfast?\\",\\nanswer: \\"An Full English/Irish breakfast is available at the HOBSONS HOUSE\\"\\n\\nquestion: \\"What is the check-out time at your location?\\",\\nanswer: \\"Check-out time at the Hobsons House is between 7:30 am and 10 am.\\"\\n\\n...\\n```\\n\\n### 2.2 \u95ee\u9898\u5b9a\u4e49\\n\\n\u6211\u4eec\u7ed9\u51fa DSTC11-track5 \u8d5b\u9898\u7684\u4e00\u822c\u5316\u5b9a\u4e49\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5bf9\u8bdd\u5b9e\u4f8b $\\\\mathbf{C}=[U_1,A_1,U_2,A_2,\\\\cdots,U_{|C|}]$\uff0c\u9664\u6700\u540e\u4e00\u8f6e\u5916\uff0c\u4e4b\u524d\u6bcf\u4e00\u8f6e\u90fd\u6709 agent \u7684\u56de\u590d $A_i$ \u4e0e\u7528\u6237\u67e5\u8be2 $U_i$ \u5bf9\u5e94\u3002\u6574\u4e2a\u5bf9\u8bdd\u5b9e\u4f8b $\\\\mathbf{C}$ \u53ef\u80fd\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u5b9e\u4f53\u76f8\u5173\uff0c\u6211\u4eec\u5c06\u8be5\u5b9e\u4f53\u96c6\u5408\u5b9a\u4e49\u4e3a$\\\\mathbf{E}^C=\\\\{E_1^C,E_2^C,\\\\cdots,E_{|E^C|}^C\\\\}$\u3002\\n\\n\u5b9a\u4e49\u4e3b\u89c2\u77e5\u8bc6\u6570\u636e $\\\\mathbf{B}=\\\\{(\\\\mathbf{E}_1,\\\\mathbf{K}^{E_1}),(\\\\mathbf{E}_2,\\\\mathbf{K}^{E_2}),\\\\cdots,(\\\\mathbf{E}_{|B|},\\\\mathbf{K}^{E_{|B|}})\\\\}$\uff0c\u5176\u4e2d $\\\\mathbf{K}^{E_i}=[K_1,K_2,\\\\cdots,K_{|K^{E_i}|}]$\uff0c\u8868\u793a\u6bcf\u4e00\u4e2a\u5b9e\u4f53\u5305\u542b\u7684\u82e5\u5e72\u77e5\u8bc6\u6761\u76ee\u3002\\n\\n\u6211\u4eec\u7684\u505a\u6cd5\u5c06\u6574\u4e2a\u4efb\u52a1\u8fdb\u4e00\u6b65\u5206\u89e3\u4e3a\u5982\u4e0b\u56fe\u6240\u793a\u7684\u56db\u4e2a\u9636\u6bb5\uff1a\\n\\n![\u56fe2. \u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21\u6d41\u7a0b](./assets/image-pipeline.png)\\n\\n- Turn Detection\uff1a\u5224\u65ad\u7528\u6237\u6700\u540e\u4e00\u8f6e\u67e5\u8be2 $U_t$ \u662f\u5426\u9700\u8981\u4e3b\u89c2\u77e5\u8bc6\\n- Entity Tracking\uff1a\u5982\u9700\u8981\u4e3b\u89c2\u77e5\u8bc6\uff0c\u5219\u786e\u5b9a\u4e0e\u4e4b\u76f8\u5173\u7684\u5b9e\u4f53\u96c6\u5408 $\\\\mathbf{E}^C$\uff08\u672c\u90e8\u5206\u4e0d\u5728\u6bd4\u8d5b\u8bc4\u6d4b\u4e2d\uff09\\n- Entry Selection\uff1a\u4ece\u5b9e\u4f53 $\\\\mathbf{E}^C$ \u5305\u542b\u7684\u77e5\u8bc6\u5019\u9009\u96c6\u5408 $\\\\mathbf{K}^{E_i^C}$ \u4e2d\u9009\u51fa\u76f8\u5173\u7684\u4e3b\u89c2\u77e5\u8bc6\u6761\u76ee\\n- Response Generation\uff1a\u7531\u5bf9\u8bdd\u4e0a\u6587 $\\\\mathbf{C}$ \u548c\u76f8\u5173\u7684\u4e3b\u89c2\u77e5\u8bc6\u6761\u76ee\u751f\u6210\u56de\u590d $A_t$\\n\\n\u672c\u8d5b\u9053\u7684\u96be\u70b9\u6709\u4e09\u4e2a\uff1a\\n\\n1. \u5f53\u9700\u8981\u68c0\u7d22\u4e3b\u89c2\u77e5\u8bc6\u65f6\uff0c\u6bcf\u4e2a\u5bf9\u8bdd\u5bf9\u5e94\u7684\u77e5\u8bc6\u6761\u76ee\u662f\u4e0d\u786e\u5b9a\u6570\u76ee\u7684\u82e5\u5e72\u6761\uff1b\\n2. \u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u5206\u5e03\u4e0e\u8bad\u7ec3\u96c6\u6709\u8f83\u5927\u5dee\u5f02\uff0c\u6709\u5927\u91cf\u7684 unseen \u4fe1\u606f\uff1b\\n3. \u4e0d\u540c\u7684\u4e3b\u89c2\u77e5\u8bc6\u6709\u4e0d\u540c\u7684\u60c5\u611f\u503e\u5411\uff0c\u56de\u590d\u4e2d\u9700\u8981\u8003\u8651\u591a\u6761\u4e3b\u89c2\u77e5\u8bc6\u4e2d\u7684\u4e0d\u540c\u60c5\u611f\u503e\u5411\u3002\\n\\n### 2.3 \u8bc4\u4ef7\u6307\u6807\\n\\n\u4e09\u4e2a\u5b50\u4efb\u52a1\u7684\u8bc4\u4ef7\u6307\u6807\u5206\u522b\u4e3a\uff1a\\n\\n- Turn Detection\uff1aPrecision\u3001Recall\u3001F1\\n\\n- Knowledge Selection\uff1aPrecision\u3001Recall\u3001F1\u3001Exact Match\\n\\n- Response Generation\uff1aBLEU\u3001METEOR\u3001ROUGE-1\u3001ROUGE-2\u3001Rouge-L\\n\\n\\n\u5ba2\u89c2\u8bc4\u6d4b\u7684\u6700\u7ec8\u5206\u6570\u4e3a\u6bcf\u4e2a\u8bc4\u4ef7\u6307\u6807\u6392\u540d\u7684\u5012\u6570\u548c\uff0c\u5373\\n$$\\nScore = \\\\sum_i( \\\\frac {1} {S_i})\\n$$\\n\u5176\u4e2d $S_i$ \u4e3a\u7b2c $i$ \u4e2a\u8bc4\u6d4b\u6307\u6807\u7684\u7ed3\u679c\u5728\u6240\u6709\u53c2\u8d5b\u7ed3\u679c\u4e2d\u7684\u6392\u540d\u3002\\n\\n### 2.4 \u76f8\u5173\u8c03\u7814\\n\\n\u6211\u4eec\u9996\u5148\u8c03\u7814\u4e86 DSTC \u7684\u5f80\u5c4a\u6bd4\u8d5b\uff0c\u5176\u4e2d DSTC9-track1 \u548c DSTC10-track2 \u5747\u4e0e\u672c\u5c4a\u8d5b\u9898\u7c7b\u4f3c\u3002\\n\\nDSTC9-track1 \u7684\u95ee\u9898\u5b9a\u4e49\uff0c\u6570\u636e\u96c6\u683c\u5f0f\u4e0e\u672c\u8d5b\u9898\u5b8c\u5168\u76f8\u540c\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\u6bcf\u8f6e\u5bf9\u8bdd\u53ea\u9700\u627e\u51fa\u4e00\u6761\u6700\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u95ee\u9898\u8981\u7b80\u5355\u8bb8\u591a\uff1a\\n\\n- He[^3]\u7b49\u4eba\u63d0\u51fa\u4e86\u56fe\u5f0f\u5f15\u5bfc\u7684\u77e5\u8bc6\u51b3\u7b56\u3001\u5426\u5b9a\u5f3a\u5316\u7684\u77e5\u8bc6\u9009\u62e9\u548c\u57fa\u4e8e\u77e5\u8bc6\u53ca\u673a\u5668\u7406\u89e3\u7684\u56de\u590d\u751f\u6210\u4ee5\u9002\u5e94\u4e09\u4e2a\u5b50\u4efb\u52a1\u3002\\n- Tang[^4]\u7b49\u4eba\u63d0\u51fa\u4e86\u57fa\u4e8e API \u5173\u952e\u5b57\u4e0e\u5bf9\u8bdd\u4e0a\u4e0b\u6587\u76f8\u5173\u6027\u5b66\u4e60\u7684\u65b9\u6cd5\u3002\\n\\nDSTC10-track2 \u5c06\u5916\u90e8\u77e5\u8bc6\u6570\u636e\u4ece\u4e66\u9762\u8bed\u66f4\u6539\u4e3a\u53e3\u8bed\uff0c\u4f7f\u5f97\u6784\u5efa\u9ad8\u6cdb\u5316\u80fd\u529b\u7684\u6a21\u578b\u66f4\u4e3a\u91cd\u8981\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u8be5\u7ade\u8d5b\u5e76\u672a\u7ed9\u51fa\u8bad\u7ec3\u96c6\uff0c\u53c2\u8d5b\u961f\u4f0d\u63d0\u51fa\u4e86\u5f88\u591a\u6709\u6548\u7684\u6570\u636e\u589e\u5e7f\u65b9\u6cd5\uff1a\\n\\n- Yan[^5]\u7b49\u4eba\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u57df\u5206\u7c7b\u4efb\u52a1\u548c\u5b9e\u4f53\u9009\u62e9\u4efb\u52a1\u6765\u5b66\u4e60\u591a\u7ea7\u8bed\u4e49\u4fe1\u606f\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u901a\u8fc7\u6ce8\u5165\u57fa\u4e8e\u8bed\u97f3\u76f8\u4f3c\u6027\u7684\u4eba\u5de5\u751f\u6210\u7684\u6270\u52a8\u65b9\u6cd5\u6765\u6269\u5145\u4e66\u9762\u6570\u636e\u7684\u601d\u8def\u3002\\n- Xu[^6]\u7b49\u4eba\u9996\u6b21\u5c1d\u8bd5\u5c06\u63a9\u7801\u8de8\u5ea6\u8bed\u8a00\u5efa\u6a21\u5e94\u7528\u4e8e\u5bf9\u8bdd\u72b6\u6001\u751f\u6210\uff0c\u8be5\u65b9\u6cd5\u6709\u6548\u589e\u5f3a\u4e86\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\\n- Whang[^7]\u7b49\u4eba\u4f7f\u7528\u4e86 Levenstein \u8ddd\u79bb\u8fdb\u884c\u540e\u5904\u7406\u6765\u907f\u514d\u6a21\u578b\u9884\u6d4b\u5931\u771f\u95ee\u9898\u3002\\n- Yu[^8]\u7b49\u4eba\u5728 baseline \u4e2d\u589e\u52a0\u4e86\u5377\u79ef\u5c42\uff0c\u8fd9\u4e00\u6539\u52a8\u83b7\u5f97\u4e86\u66f4\u597d\u7684\u8de8\u5ea6\u9884\u6d4b\u6027\u80fd\uff0c\u5e76\u4f7f\u7528\u4e86\u4e00\u79cd\u79f0\u4e3a multiple \u7684\u8ddf\u8e2a\u591a\u503c\u7684\u81ea\u9002\u5e94\u65b9\u6cd5\u3002\\n- Cho[^9]\u7b49\u4eba\u91c7\u7528\u4e86\u5b9e\u4f53\u68c0\u6d4b\u4ee5\u53ca\u57df\u8ddf\u8e2a\u7684\u65b9\u6cd5\u7f29\u5c0f\u4e86\u5019\u9009\u77e5\u8bc6\u7684\u8303\u56f4\u3002\\n- Tan[^10]\u7b49\u4eba\u63d0\u51fa\u4e86\u57fa\u4e8e\u6307\u9488\u7f51\u7edc\u7684\u201c\u77e5\u8bc6\u590d\u5236\u201d\u65b9\u6cd5\uff0c\u6709\u6548\u51cf\u8f7b\u4e86 decoder \u7684\u538b\u529b\uff0c\u540c\u65f6\u63d0\u51fa\u5206\u6bb5\u54cd\u5e94\u7684\u65b9\u6cd5\uff1a\u7528\u4e0d\u540c\u7684\u6a21\u578b\u751f\u6210\u77e5\u8bc6\u9009\u53d6\u90e8\u5206\u548c\u95ee\u5019\u5e94\u7b54\u90e8\u5206\u3002\\n\\n\u9664\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8c03\u7814\u4e86\u4e00\u4e9b\u4f7f\u7528 MultiWOZ \u6570\u636e\u96c6\u505a\u7aef\u5230\u7aef\u5bf9\u8bdd\u751f\u6210\u7684\u6a21\u578b\uff1a\\n\\n- He[^11]\u7b49\u4eba\u63d0\u51fa\u7684 GALAXY \u6a21\u578b\u4f7f\u7528\u95e8\u63a7\u673a\u5236\u6765\u7ed9\u672a\u6807\u8bb0\u6570\u636e\u6253\u4f2a\u6807\u7b7e\u3002\\n- Lee[^12]\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5de7\u5999\u7684\u6a21\u578b\uff0c\u7528\u5bf9\u8bdd\u72b6\u6001\u8ddf\u8e2a\u6a21\u5757\u5728\u8003\u8651\u5bf9\u8bdd\u5386\u53f2\u7684\u60c5\u51b5\u4e0b\u8ddf\u8e2a\u4fe1\u5ff5\u72b6\u6001\uff08\u7528\u6237\u76ee\u6807\uff09\uff0c\u7136\u540e\u518d\u901a\u8fc7\u4fe1\u5ff5\u72b6\u6001\u4f5c\u4e3a\u67e5\u8be2\u83b7\u5f97\u6570\u636e\u5e93\u72b6\u6001\uff0c\u6700\u540e\u751f\u6210\u56de\u590d\u3002\\n\\n## 3 \u7ade\u8d5b\u65b9\u6848\\n\\n### 3.1 \u6570\u636e\u589e\u5f3a\\n\\n\u6211\u4eec\u57fa\u4e8e\u539f\u59cb\u6570\u636e\u96c6\u6784\u9020\u4e86\u4e24\u79cd\u589e\u5f3a\u6570\u636e\u96c6\uff1a\\n\\n1. unseen \u6570\u636e\u96c6\uff1a\u5229\u7528\u77e5\u8bc6\u6570\u636e\u6269\u5145\u5bf9\u8bdd\u3002\u5728\u5bf9\u8bdd\u6570\u636e\u96c6\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8bdd\u5b9e\u4f8b\u90fd\u56f4\u7ed5\u4e00\u4e2a\u5b9e\u4f53\u5c55\u5f00\uff0c\u77e5\u8bc6\u6570\u636e\u4e2d\u4f1a\u6709\u5f88\u591a\u4e0e\u8fd9\u4e2a\u5b9e\u4f53\u76f8\u5173\u7684\u95ee\u7b54\u578b\u77e5\u8bc6\uff08FAQ\uff09\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u95ee\u7b54\u5bf9\u968f\u673a\u62fc\u63a5\u5728\u539f\u59cb\u7684\u5bf9\u8bdd\u5b9e\u4f8b\u4e2d\uff0c\u5c31\u5f97\u5230\u4e86\u53ea\u6d89\u53ca\u4e00\u4e2a\u5b9e\u4f53\u7684\u65b0\u7684\u5bf9\u8bdd\u5b9e\u4f8b\u3002\u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u573a\u666f\u4e2d\u8bdd\u9898\u8f6c\u79fb\uff0c\u6211\u4eec\u5728\u53e6\u4e00\u4e2a\u5b9e\u4f53\u4e0b\u751f\u6210\u5bf9\u8bdd\u7684\u53e6\u4e00\u90e8\u5206\uff0c\u5e76\u4ee5 80% \u7684\u6982\u7387\u5c06\u5b83\u4eec\u62fc\u63a5\u5728\u4e00\u8d77[^13]\u3002\\n2. noise \u6570\u636e\u96c6\uff1a\u91c7\u7528\u8c37\u6b4c\u7ffb\u8bd1\u670d\u52a1\u5c06\u82f1\u8bed\u7ffb\u8bd1\u6210\u5176\u5b83\u56db\u79cd\u8bed\u8a00\uff08\u897f\u73ed\u7259\u8bed/\u5fb7\u8bed/\u65e5\u8bed/\u6cd5\u8bed\uff09\uff0c\u7136\u540e\u518d\u5c06\u5176\u53cd\u8bd1\u4e3a\u82f1\u8bed\u3002\u5f53\u53cd\u8bd1\u53e5\u5b50\u4e0e\u539f\u53e5\u5b50\u76f8\u4f3c\u5ea6\u8fc7\u9ad8\uff08\u8fd9\u4e00\u73b0\u8c61\u5728\u82f1\u6cd5\u4e92\u8bd1\u4e2d\u8f83\u4e3a\u666e\u904d\uff09\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 Wordnet \u8fdb\u884c\u540c\u4e49\u8bcd\u66ff\u6362\u4ee5\u589e\u52a0\u5176\u591a\u6837\u6027\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5bf9\u8bdd\u6570\u636e\u96c6\u53ca\u77e5\u8bc6\u6570\u636e\u6269\u5145\u4e3a\u539f\u6765\u7684 5 \u500d\uff0c\u8fd9\u4e9b\u6570\u636e\u7528\u4e8e\u5bf9\u6a21\u578b\u9884\u8bad\u7ec3\u3002\u8fdb\u4e00\u6b65\u5c06 5 \u79cd\u5bf9\u8bdd\u6570\u636e\u96c6\u548c\u77e5\u8bc6\u6570\u636e\u4e24\u4e24\u7ec4\u5408\uff0c\u5f97\u5230\u539f\u6765 25 \u500d\u5927\u5c0f\u7684\u6570\u636e\u96c6\u3002\u8fd9\u4e9b\u6570\u636e\u96c6\u88ab\u8ba4\u4e3a\u662f\u566a\u97f3\uff0c\u56e0\u4e3a\u53cd\u8bd1\u548c\u540c\u4e49\u8bcd\u66ff\u6362\u5f15\u5165\u4e86\u8bcd\u7ea7\u548c\u8bed\u4e49\u7ea7\u7684\u5e72\u6270\u3002\\n\\n### 3.2 Turn Detection \u9636\u6bb5\\n\\n\u672c\u9636\u6bb5\u7684\u76ee\u6807\u662f\u5224\u65ad\u5f53\u524d\u5bf9\u8bdd\u7528\u6237\u7684\u6700\u540e\u4e00\u8f6e\u67e5\u8be2\u662f\u5426\u9700\u8981\u4e3b\u89c2\u77e5\u8bc6\uff0c\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u3002\\n\\n\u6211\u4eec\u4f7f\u7528\u81ea\u7f16\u7801\u9884\u8bad\u7ec3\u6a21\u578b DeBERTa-v3-base[^14]\uff0c\u5c06\u5f53\u524d\u5bf9\u8bdd\u4e0a\u6587\u548c\u6700\u4e00\u8f6e\u67e5\u8be2 $C$ \u4f5c\u4e3a\u8f93\u5165\uff0c\u53d6\u6700\u540e\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u7b2c\u4e00\u4e2a token \u5373 [CLS] \u7684\u5411\u91cf\u4f5c\u4e3a\u5bf9\u8bdd\u8868\u793a\uff0c\u5c06\u5176\u8f93\u5165\u4e00\u4e2a\u7ebf\u6027\u5c42\u4e2d\u5c31\u6c42\u5f97\u5206\u7c7b\u6982\u7387\uff1a\\n$$\\n\\\\begin{aligned}\\nh_{C}& =\\\\operatorname{Enc}(\\\\mathbf{C}) \\\\\\\\\\nP(\\\\mathbf{C})& =\\\\mathrm{softmax}(\\\\mathrm{FFN}(h_C))\\n\\\\end{aligned}\\n$$\\n\u4e3a\u4e86\u5728\u540e\u9762\u8fdb\u884c\u6a21\u578b\u878d\u5408\uff0c\u63d0\u9ad8\u6574\u4f53\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86\u4e09\u4e2a\u6a21\u578b\uff0c\u5206\u522b\u9002\u7528\u4e8e\u4e09\u79cd\u573a\u666f\uff1a\\n\\n- Seen expert\u3002\u4f7f\u7528 DSTC11-track5 \u63d0\u4f9b\u7684\u8bad\u7ec3\u96c6\u5fae\u8c03 DeBERTA-v3-base \u6a21\u578b\uff0c\u5f97\u5230\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8868\u73b0\u6700\u597d\u7684\u6a21\u578b\u3002\u8fd9\u4e2a\u6a21\u578b\u5728\u89c1\u8fc7\u7684\u5bf9\u8bdd\u5b9e\u4f8b\u4e0a\u6709\u6781\u597d\u7684\u8868\u73b0\u3002\\n- Unseen expert\u3002\u4e3a\u589e\u5f3a\u6a21\u578b\u5728\u672a\u89c1\u8fc7\u7684\u5bf9\u8bdd\u5b9e\u4f8b\u4e0a\u7684\u68c0\u6d4b\u80fd\u529b\uff0c\u6211\u4eec\u4f7f\u7528 3.1 \u4ecb\u7ecd\u7684 unseen \u6570\u636e\u96c6\u5bf9 RoBERTa[^15] \u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u3002\\n- De-noise expert\u3002\u4e3a\u5f97\u5230\u4e00\u4e2a\u6cdb\u5316\u80fd\u529b\u8f83\u5f3a\u7684\u6a21\u578b\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528 3.1 \u4ecb\u7ecd\u7684 noise \u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u3002\u9996\u5148\uff0c\u7528\u56de\u8bd1\u7684 5 \u500d\u6570\u636e\u96c6\u57fa\u4e8e word-masking[^16]\u9884\u8bad\u7ec3\u65b9\u6cd5\u5bf9 DeBERTa \u6a21\u578b\u8fdb\u884c\u9884\u8bad\u7ec3\uff0c\u7136\u540e\uff0c\u4f7f\u7528\u4e24\u4e24\u7ec4\u5408\u7684 25 \u500d\u542b\u6709\u566a\u97f3\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5fae\u8c03\u3002\\n\\n\u5728\u540e\u9762\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u6765\u878d\u5408\u8fd9\u4e09\u79cd\u6a21\u578b\uff0c\u8ba9\u5b83\u4eec\u76f8\u5f97\u76ca\u5f70\u3002\\n\\n### 3.3 Entity Track \u9636\u6bb5\\n\\n\u672c\u9636\u6bb5\u7684\u76ee\u6807\u662f\u786e\u5b9a\u4e0e\u5f53\u524d\u5bf9\u8bdd\u7528\u6237\u7684\u6700\u540e\u4e00\u8f6e\u67e5\u8be2\u76f8\u5173\u7684\u5b9e\u4f53\u3002\u8be5\u9636\u6bb5\u53ef\u4ee5\u7f29\u5c0f\u540e\u7eed\u77e5\u8bc6\u9009\u62e9\u7684\u8303\u56f4\u3002\\n\\n\u6211\u4eec\u4f7f\u7528\u542f\u53d1\u5f0f\u65b9\u6cd5\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u540d\u79f0\u5efa\u7acb\u4e00\u4e2a\u8bcd\u5178\uff0c\u7136\u540e\u57fa\u4e8e n-gram \u5339\u914d\u6700\u540e\u4e00\u8f6e\u5bf9\u8bdd\u4e2d\u51fa\u73b0\u7684\u5b9e\u4f53\u3002\u8fd9\u79cd\u65b9\u6cd5\u5df2\u7ecf\u80fd\u8fbe\u5230\u8f83\u4e3a\u4e0d\u9519\u7684\u7ed3\u679c\uff0c\u9a8c\u8bc1\u96c6\u6027\u80fd\u4e3a  F1=0.9676\uff0caccuracy=0.9398\u3002\\n\\n### 3.4 Entry Selection \u9636\u6bb5\\n\\n\u672c\u9636\u6bb5\u76ee\u6807\u662f\u9009\u51fa\u4e0e\u7528\u6237\u67e5\u8be2\u76f8\u5173\u7684\u77e5\u8bc6\u6761\u76ee\u3002\u8f93\u5165\u662f\u5bf9\u8bdd\u4e0a\u6587$\\\\mathbf{C}$\uff0c\u4ee5\u53ca\u77e5\u8bc6\u5019\u9009 $\\\\mathbf{K}$\uff0c\u8f93\u51fa\u4e3a\u77e5\u8bc6\u5019\u9009\u7684\u5b50\u96c6 $\\\\mathbf{K}^+$\u3002\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u7f16\u7801\u5668\u83b7\u5f97\u4e24\u8005\u7684\u8868\u793a $h_C$\uff0c$k_{K_i}$\u3002\u7136\u540e\u5c06 $h_C$\uff0c$h_{K_i}$\uff0c$|h_C-h_{K_i}|$ \u62fc\u63a5\u5728\u4e00\u8d77\u8ba1\u7b97\u76f8\u5173\u6027\uff1a\\n$$\\n\\\\begin{aligned}\\nh_C& =\\\\operatorname{Enc}(\\\\mathbf{C}),h_{K_i}=\\\\operatorname{Enc}(K_i)  \\\\\\\\\\nh_{feature}& =[h_C;h_{K_i};|h_C-h_{K_i}|]  \\\\\\\\\\nP(\\\\mathbf{C},K_{i})& =\\\\operatorname{softmax}(\\\\operatorname{FFN}(h_{feature}))\\n\\\\end{aligned}\\n$$\\n\u5728\u8bad\u7ec3\u65f6\uff0c\u6211\u4eec\u5c06\u4e0e ground-truth \u540c\u4e00\u5b9e\u4f53\u7684\u77e5\u8bc6\u548c\u5176\u5b83\u5b9e\u4f53\u7684\u77e5\u8bc6\u6309 1 : 1 \u6bd4\u4f8b\u6784\u9020\u8d1f\u4f8b\u3002\u5728\u9a8c\u8bc1\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 Entity Track \u9636\u6bb5\u786e\u5b9a\u7684\u5b9e\u4f53\u4e2d\u7684\u77e5\u8bc6\u4f5c\u4e3a\u77e5\u8bc6\u5019\u9009\u3002\\n\\n\u4e0e Turn Detection \u7c7b\u4f3c\uff0c\u6211\u4eec\u540c\u6837\u8bad\u7ec3\u4e86 Seen expert\uff0cUnseen expert \u548c De-noise expert \u8fd9\u4e09\u79cd\u6a21\u578b\uff0c\u4e4b\u540e\u4e5f\u4f7f\u7528\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u6765\u878d\u5408\u8fd9\u4e09\u79cd\u6a21\u578b\u3002\\n\\n### 3.5 Response Generation \u9636\u6bb5\\n\\n\u672c\u9636\u6bb5\u76ee\u6807\u662f\u57fa\u4e8e\u5bf9\u8bdd\u4e0a\u4e0b\u6587 $\\\\mathbf{C}$ \u548c\u76f8\u5173\u77e5\u8bc6\u7247\u6bb5 $\\\\mathbf{K}^+$ \u6765\u521b\u5efa\u54cd\u5e94\u7528\u6237\u8bf7\u6c42\u7684\u56de\u590d $S_t$\u3002\u6211\u4eec\u5c06 $\\\\mathbf{K}^+$ \u548c $\\\\mathbf{C}$ \u8fde\u63a5\u8d77\u6765\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u4f7f\u7528\u7ecf\u9884\u8bad\u7ec3\u7684\u751f\u6210\u6a21\u578b\u6765\u751f\u6210\u56de\u590d\u3002\\n\\n\u6211\u4eec\u65e2\u8003\u8651\u4e86 decoder-only \u67b6\u6784\u7684\u6a21\u578b\uff08\u5982 GPT-2[^17]\uff09\u4e5f\u8003\u8651\u4e86 encoder-decoder \u67b6\u6784\u7684\u6a21\u578b\uff08\u5982 BART[^18]\u548c T5[^19]\uff09\u3002\\n\\n\u6b64\u5916\uff0c\u4e3a\u4e86\u964d\u4f4e Entity Track \u548c Entry Selection \u9636\u6bb5\u5bf9\u672c\u9636\u6bb5\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5728\u8bad\u7ec3\u65f6\u4f7f\u7528\u4e86\u4e00\u4e9b\u65b9\u6cd5\u8c03\u6574\u6a21\u578b\u8f93\u5165\uff1a\\n\\n1. \u62fc\u63a5\u5bf9\u8bdd\u65f6\u989d\u5916\u6dfb\u52a0\u5b9e\u4f53\u540d\u5b57\u6bb5\u5f3a\u5316\u5b9e\u4f53\u4fe1\u606f\uff1b\\n2. \u968f\u673a\u4e22\u5f03 15% \u7684\u77e5\u8bc6\u4ee5\u8ba9\u6a21\u578b\u5728 Entry Selection \u9636\u6bb5\u6f0f\u9009\u77e5\u8bc6\u65f6\u4ecd\u80fd\u53d6\u5f97\u826f\u597d\u7684\u751f\u6210\u6548\u679c\u3002\\n\\n\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8003\u8651\u4e86\u5176\u4ed6\u751f\u6210\u65b9\u5f0f\uff1a\\n\\n1. \u4f7f\u7528 KAT-TSLF \u7ed3\u6784[^20]\uff0c\u8003\u5bdf\u5c06\u5bf9\u8bdd\u4e0a\u4e0b\u6587\u548c\u5168\u90e8\u5019\u9009\u77e5\u8bc6\u6761\u76ee\u4f5c\u4e3a\u8f93\u5165\u4ee5\u53ca\u5c06\u5bf9\u8bdd\u4e0a\u4e0b\u6587\u548c KS \u9636\u6bb5\u9009\u53d6\u7684\u77e5\u8bc6\u6761\u76ee\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f46\u662f\u6548\u679c\u5747\u4e0d\u5982 BART \u6a21\u578b\uff1b\\n\\n2. \u4f7f\u7528\u5728\u672c\u4efb\u52a1\u4e0a\u7ecf\u8fc7 alpaca \u5fae\u8c03\u7684 LLAMA-13B[^21]\uff0c\u7ed3\u5408\u4e13\u95e8\u8bbe\u8ba1\u7684 instruction\uff0c\u8f93\u5165\u5bf9\u8bdd\u4e0a\u4e0b\u6587\u548c\u6240\u9009\u7684\u77e5\u8bc6\u6761\u76ee\u6765\u751f\u6210\u56de\u590d\u3002\u7136\u800c\uff0c\u6b63\u5982\u8fd1\u671f\u7814\u7a76\u663e\u793a\uff0cLLM \u5b58\u5728\u5e7b\u89c9\u95ee\u9898[^22]\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u6267\u884c\u7279\u5b9a\u9886\u57df\u6216\u77e5\u8bc6\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u56e0\u6b64\u8be5\u6a21\u578b\u5728\u672c\u4efb\u52a1\u4e0a\u5176\u8868\u73b0\u4e5f\u4e0d\u5982 BART \u6a21\u578b\u3002\\n\\n### 3.6 \u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\\n\\n\u4e3a\u4e86\u878d\u5408 Seen expert\uff0cUnseen expert \u548c De-noise expert \u8fd9\u4e09\u79cd\u6a21\u578b\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u3002\\n\\n\u4ee5 Entry Selection \u9636\u6bb5\u8bad\u7ec3\u51fa\u6765\u7684\u4e09\u79cd\u6a21\u578b\u4e3a\u4f8b\u3002\u5bf9\u4e8e\u9a8c\u8bc1\u96c6\u7684\u7b2c $k$ \u4e2a\u5bf9\u8bdd\u5b9e\u4f8b\uff0c\u8bbe $S_j^{gt}$ \u4e3a ground-truth \u6807\u7b7e\uff0c\u5b83\u5305\u542b $K$ \u6761\u77e5\u8bc6\u3002\u6211\u4eec\u7528\u4e0d\u540c\u6a21\u578b\u5f97\u5230 $N$ \u6761\u77e5\u8bc6\u6761\u76ee\u5019\u9009\uff0c\u5e76\u5c06\u5b83\u4eec\u6309\u76f8\u5173\u5ea6\u964d\u5e8f\u6392\u5217\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u77e5\u8bc6\u6761\u76ee\u5019\u9009\uff0c\u6211\u4eec\u4e3a\u5176\u8bbe\u7f6e\u6743\u91cd\u4e3a\u5b83\u7684\u76f8\u5173\u5ea6\u6392\u5e8f\u52a0\u4e00\u7684\u5012\u6570\u3002\u4f8b\u5982 Seen-expert \u6a21\u578b\u5f97\u5230\u7684\u77e5\u8bc6\u5019\u9009\u7684\u7b2c $j$ \u6761 $S_j^D$ \u6743\u91cd\u4e3a $W_j^D=\\\\frac{1}{j+1}$\u3002\u540c\u7406\uff0c$S^R,W^E$ \u548c $S^D,W^D$ \u5206\u522b\u4e3a Unseen expert \u548c De-noise expert \u5f97\u5230\u7684\u77e5\u8bc6\u5019\u9009\u548c\u6743\u91cd\u3002\\n\\n\u7531\u6b64\u5f97\u5230\u77e5\u8bc6\u5019\u9009\u96c6\u5408$S=\\\\{S_i(i=1,2,\\\\cdots,T)\\\\},N\\\\le T\\\\le 3N$\uff0c\u5bf9\u4e8e\u7b2c $i$ \u6761\u77e5\u8bc6\uff0c\u5c06\u5b83\u7684\u878d\u5408\u6743\u91cd\u5b9a\u4e49\u4e3a$W_i=p^D\\\\cdot\\\\tilde{W}_i^D+p^R\\\\cdot\\\\tilde{W}_i^R+p^E\\\\cdot\\\\tilde{W}_i^E(i=1,2,\\\\cdots,T)$\uff0c\u5176\u4e2d\uff0c\u5982\u679c\u5b58\u5728 $S_j^D\\\\in S^D$ \u4f7f $S_j^D=S_i$\uff0c\u5219 $\\\\tilde{W}_i^D=W_j^D$\uff0c\u5426\u5219$\\\\tilde{W}_i^D=0$\uff0c$p$ \u662f\u8d85\u53c2\u6570\uff0c\u6ee1\u8db3 $p^D+p^R+p^E=1$\u3002\\n\\n\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5bf9\u6743\u91cd\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u9608\u503c\uff0c\u5f97\u5230\u7684\u8d85\u8fc7\u9608\u503c\u7684\u77e5\u8bc6\u6761\u76ee\u96c6\u5408 $S_{k}^{threshold}$ \u5373\u4e3a\u6700\u7ec8\u8f93\u51fa\u3002\u4f7f\u7528\u9a8c\u8bc1\u96c6\u7684 Recall/Precision/F1/EM \u7b49\u6307\u6807\u5b66\u4e60\u8d85\u53c2\u6570 $p$\uff0c\u6574\u4f53\u7b97\u6cd5\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![\u56fe3. \u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5](./assets/image-20230606132256125.png)\\n\\n\u8be5\u65b9\u6cd5\u5bf9\u4e8e\u4e0d\u540c\u4efb\u52a1\u548c\u4e0d\u540c\u6570\u636e\u96c6\u5747\u53ef\u9002\u7528\uff1a\\n\\n- \u6bd4\u5982\u5728 Entry Selection \u9636\u6bb5\uff0c\u4e3a\u540c\u65f6\u4fdd\u8bc1\u77e5\u8bc6\u9009\u62e9\u7684\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff0c\u6211\u4eec\u4f7f\u7528\u6743\u91cd\u9608\u503c\u6765\u51b3\u5b9a\u8be5\u77e5\u8bc6\u662f\u5426\u76f8\u5173\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u9009\u62e9 Top-N \u6743\u91cd\u7684\u77e5\u8bc6\u3002\\n- \u5bf9\u4e8e\u4e0d\u540c\u6d4b\u8bd5\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5176\u4e2d unseen \u5bf9\u8bdd\u6761\u6570\u7684\u6bd4\u4f8b\u76f8\u5e94\u8c03\u6574\u9a8c\u8bc1\u96c6\u4e2d unseen \u7684\u6bd4\u4f8b\u6765\u5b66\u4e60 $p$\u3002\u901a\u8fc7 $p$ \u7684\u8c03\u6574\uff0c\u6d4b\u8bd5\u96c6\u4e2d unseen \u5bf9\u8bdd\u6761\u6570\u6bd4\u4f8b\u8d8a\u9ad8\uff0c\u6211\u4eec\u7684 Unseen expert \u5728\u6700\u540e\u6743\u91cd\u5360\u6bd4\u4e5f\u5c31\u8d8a\u5927\u3002 \\n\\n## 4 \u7ed3\u679c\u5206\u6790\\n\\n\u672c\u7ae0\u5206\u6790\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u9a8c\u8bc1\u96c6\u53ca\u6700\u7ec8\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0\u3002\\n\\n### 4.1 Turn Detection \u5b50\u4efb\u52a1\\n\\nTurn Detection \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c\u5982\u8868 1 \u6240\u793a\uff1a\\n\\n![\u88681 Turn Detection \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c](./assets/image-20230606144328712.png)\\n\\n\u4e0d\u96be\u770b\u51fa baseline \u5728\u9a8c\u8bc1\u96c6\u4e0a\u5df2\u7ecf\u6709\u4e86\u5f88\u9ad8\u7684\u6027\u80fd\u3002\u8003\u8651\u5230\u6700\u7ec8\u6d4b\u8bd5\u96c6\u4e2d\u6709 unseen \u5bf9\u8bdd \uff0c\u4e8e\u662f\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\uff0c\u529b\u6c42\u5728\u6d4b\u8bd5\u96c6\u7684 unseen \u5bf9\u8bdd\u4e0a\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002\\n\\n\u6211\u4eec\u5206\u522b\u4f7f\u7528 Precision\u3001Recall \u548c F1 \u4f5c\u4e3a\u6307\u6807\u6765\u5b66\u4e60\u6a21\u578b\u878d\u5408\u53c2\u6570\uff0c\u56e0\u4e3a\u66f4\u9ad8\u7684 Recall \u5bf9 unseen \u5bf9\u8bdd\u66f4\u6709\u6548\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9 Recall \u548c F1 \u8bad\u7ec3\u7684\u7ed3\u679c\u6a21\u578b\u878d\u5408\u7ed3\u679c\u4f5c\u4e3a\u6700\u7ec8\u63d0\u4ea4\u3002\\n\\n\u5728\u6700\u7ec8\u6d4b\u8bd5\u96c6\u4e0a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u6240\u6709\u63d0\u4ea4\u7ed3\u679c\u4e2d F1 \u6307\u6807\u6392\u540d\u7b2c\u4e00\uff0cRecall \u6307\u6807\u6392\u540d\u7b2c\u4e8c\uff0c\u4e09\u9879\u603b\u548c\u6392\u540d\u7b2c\u4e00\u3002\\n\\n### 4.2 Knowledge Selection \u5b50\u4efb\u52a1\\n\\nKnowledge Selection \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c\u5982\u8868 2 \u6240\u793a\uff1a\\n\\n![\u88682 knowledge selection \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c](./assets/image-20230606145002529.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff1a\\n\\n1. \u6211\u4eec\u7684\u5355\u4e2a\u6a21\u578b\u8868\u73b0\u90fd\u53ea\u7565\u597d\u4e8e baseline\uff0c\u7136\u800c\u4f7f\u7528\u6211\u4eec\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u540e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u9ad8\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u80fd\u7ed3\u5408\u4e0d\u540c expert \u7684\u4f18\u52bf\uff0c\u4f7f\u5f97\u6a21\u578b\u7efc\u5408\u6027\u80fd\u5927\u5927\u63d0\u5347\uff1b\\n2. \u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684\u6307\u6807\u5b66\u4e60\u6a21\u578b\u878d\u5408\u53c2\u6570\uff0c\u5c31\u80fd\u5f97\u5230\u76f8\u5e94\u6307\u6807\u4e0b\u8868\u73b0\u6700\u597d\u7684\u6a21\u578b\u3002\\n\\n\u6211\u4eec\u4f9d\u636e 4 \u4e2a\u6307\u6807\u7684\u9a8c\u8bc1\u96c6\u7ed3\u679c\u603b\u548c\u9009\u62e9\u6700\u540e\u4e24\u4e2a\u7ed3\u679c\uff08F1 \u548c EM\uff09\u4f5c\u4e3a\u6700\u7ec8\u63d0\u4ea4\u3002\u5728\u6d4b\u8bd5\u96c6\u4e0a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5177\u6709\u4e00\u81f4\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f18\u4e8e baseline\u3002\u5c24\u5176\u5728 EM \u6307\u6807\u4e0a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u6bd4 baseline \u9ad8\u51fa 14%\u3002\\n\\n\u4e3a\u4e0b\u4e00\u8282\u8868\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u7ed3\u679c\u8868\u793a\u4e3a KS-F1 \u548c KS-EM\u3002\\n\\n### 4.3 Response Generation \u5b50\u4efb\u52a1\\n\\nResponse Generation \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c\u5982\u8868 3 \u6240\u793a\uff1a\\n\\n![\u88683 knowledge selection \u5b50\u4efb\u52a1\u5b9e\u9a8c\u7ed3\u679c](./assets/image-20230606145754031.png)\\n\\n\u6211\u4eec\u5728\u751f\u6210\u56de\u590d\u8fc7\u7a0b\u4e2d\u5e76\u6ca1\u6709\u4f7f\u7528\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u3002\u4e0a\u8ff0\u7ed3\u679c\u53ef\u4ee5\u53cd\u6620\u51fa\u77e5\u8bc6\u9009\u62e9\u5b50\u4efb\u52a1\u5bf9\u751f\u6210\u4efb\u52a1\u7684\u5f71\u54cd\u3002\\n\\n\u4f7f\u7528 KS-F1 \u7684 BART-base \u751f\u6210\u7ed3\u679c\u5728\u6240\u6709\u6307\u6807\u4e0a\u90fd\u4f18\u4e8e baseline\u3002\u8fd9\u4e00\u7ed3\u679c\u8868\u660e\uff0cKS-F1 \u63d0\u4f9b\u4e86\u66f4\u9ad8\u8d28\u91cf\u7684\u77e5\u8bc6\u6761\u76ee\uff0c\u5e76\u518d\u6b21\u8bc1\u660e\u4e86\u6211\u4eec\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002\\n\\nBART-large \u548c T5 \u4f5c\u4e3a\u66f4\u5927\u7684\u6a21\u578b\uff0c\u5728\u5927\u591a\u6570\u6307\u6807\u4e0a\u90fd\u4f18\u4e8e BART-base\u3002\u6b64\u5916\uff0cBART-large (KS-F1) \u7684 BLEU \u6307\u6807\u8868\u73b0\u6781\u597d\uff0c\u5728\u6240\u6709\u63d0\u4ea4\u4e2d\u6392\u540d\u7b2c\u4e8c\u3002BART-large (KS-EM) \u5728 ROUGE \u6307\u6807\u4e0a\u8868\u73b0\u66f4\u597d\uff0cT5-3B (KS-EM) \u5728 METEOR \u6307\u6807\u4e0a\u66f4\u597d\u3002\u7136\u800c\uff0cT5 \u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684 BLEU \u6307\u6807\u8868\u73b0\u4e0d\u4f73\uff0c\u4e0e BART-large \u76f8\u6bd4\u6ca1\u6709\u660e\u663e\u7684\u4f18\u52bf\u3002\\n\\n## 5 \u603b\u7ed3\\n\\n\u6211\u4eec\u5728 DSTC11-track5 \u7ade\u8d5b\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u7ade\u8d5b\u7684\u4e24\u5927\u96be\u70b9\uff1a\\n\\n- \u6bcf\u4e2a\u5bf9\u8bdd\u5b9e\u4f8b\u90fd\u4e0e\u6570\u91cf\u4e0d\u5b9a\u7684\u82e5\u5e72\u6761\u77e5\u8bc6\u76f8\u5173\uff0c\u5982\u4f55\u8ba9\u6a21\u578b\u5b66\u4e60\u5230\u8fd9\u79cd\u5206\u7c7b\u80fd\u529b\u3002\\n- \u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u5e03\u5dee\u5f02\u8f83\u5927\uff0c\u5982\u4f55\u8ba9\u6a21\u578b\u5728 seen \u5bf9\u8bdd\u548c unseen \u5bf9\u8bdd\u4e0a\u90fd\u80fd\u6709\u4e0d\u9519\u7684\u8868\u73b0\u3002\\n\\n\u6700\u540e\u6211\u4eec\u83b7\u5f97\u4e86\u5ba2\u89c2\u6307\u6807\u6392\u540d\u7b2c\u4e09\u7684\u6210\u7ee9\uff0c\u8fd9\u4e00\u6210\u7ee9\u8bc1\u660e\u4e86\u6211\u4eec\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002\\n\\n\u5f53\u7136\uff0c\u672a\u6765\u4e5f\u6709\u5f88\u591a\u5de5\u4f5c\u53ef\u4ee5\u5c1d\u8bd5\uff1a\\n\\n\u6570\u636e\u589e\u5f3a\uff1a\\n\\n- \u5728\u5bf9\u8bdd\u5386\u53f2\u4e2d\u52a0\u5165\u4e00\u5b9a\u6270\u52a8\uff08\u5982\u66f4\u6539\u5bf9\u8bdd\u6b21\u5e8f\uff0c\u8865\u5145\u4e00\u6bb5\u65e0\u5173\u5bf9\u8bdd\uff09\u3002\\n- \u4f7f\u7528 Mixup \u65b9\u6cd5\u5728\u539f\u59cb\u6587\u672c\u95f4\u8fdb\u884c\u63d2\u503c\u3002\\n\\n\u77e5\u8bc6\u9009\u62e9\u5b50\u4efb\u52a1\uff1a\\n\\n- \u53ef\u4ee5\u5c06\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\u540c\u6837\u8fd0\u7528\u5728 Entity Track \u9636\u6bb5\u3002\\n- review \u578b\u7684\u4e3b\u89c2\u77e5\u8bc6\u548c FAQ \u578b\u7684\u4e3b\u89c2\u77e5\u8bc6\u5177\u6709\u4e0d\u540c\u7684\u8bed\u4e49\u7279\u6027\uff0c\u6bd4\u5982 FAQ \u7684\u95ee\u53e5\u53ef\u80fd\u4e0e\u7528\u6237\u67e5\u8be2\u6709\u7740\u8f83\u9ad8\u7684\u76f8\u4f3c\u5ea6\uff0c\u8003\u8651\u5982\u4f55\u5206\u522b\u5bf9\u8fd9\u4e24\u7c7b\u77e5\u8bc6\u8fdb\u884c\u9009\u62e9\u3002\\n\\n\u56de\u590d\u751f\u6210\u5b50\u4efb\u52a1\uff1a\\n\\n- \u53ef\u4ee5\u8003\u8651\u5206\u522b\u7528\u5bf9\u8bdd\u5386\u53f2 encoder \u548c\u5916\u90e8\u77e5\u8bc6 encoder \u5bf9\u8f93\u5165\u8fdb\u884c\u7f16\u7801\u518d\u5bf9\u5176\u52a0\u4ee5\u878d\u5408\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u6a21\u578b\u5bf9\u4e8e\u5bf9\u8bdd\u751f\u6210\u548c\u77e5\u8bc6\u6574\u5408\u4e24\u90e8\u5206\u7684\u5355\u72ec\u5b66\u4e60\u3002\\n- \u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5927\u6a21\u578b\u5bf9\u77e5\u8bc6\u52a0\u4ee5\u521d\u6b65\u7684\u7406\u89e3\uff0c\u518d\u7528\u6211\u4eec\u7684\u56de\u590d\u751f\u6210\u6a21\u578b\u6839\u636e\u88ab\u7406\u89e3\u7684\u4fe1\u606f\u8fdb\u884c\u56de\u590d\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u589e\u5f3a\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\\n- \u53ef\u4ee5\u8003\u8651\u7528\u5bf9\u8bdd\u72b6\u6001\u8ffd\u8e2a\u6280\u672f\u5206\u6790\u8f93\u5165\u7684\u5bf9\u8bdd\u5386\u53f2\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u589e\u5f3a\u6a21\u578b\u6297\u5e72\u6270\u80fd\u529b\u3002\\n- \u9488\u5bf9\u524d\u6587\u63d0\u5230\u7684\u7b2c\u4e09\u4e2a\u96be\u70b9\uff0c\u4e0d\u540c\u7684\u4e3b\u89c2\u77e5\u8bc6\u6709\u4e0d\u540c\u7684\u60c5\u611f\u503e\u5411\u3002\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7279\u5b9a\u7684\u60c5\u611f\u7406\u89e3\u6a21\u578b\u8f85\u52a9\u751f\u6210\u7684\u8bad\u7ec3\u3002\\n\\n\u6a21\u578b\u878d\u5408\uff1a\\n\\n- \u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\u6211\u4eec\u7684\u57fa\u4e8e\u5dee\u5f02\u611f\u77e5\u7684\u6a21\u578b\u878d\u5408\u65b9\u6cd5\uff0c\u8ba9\u6a21\u578b\u81ea\u52a8\u5b66\u4e60\u9608\u503c\u3002\\n\\n## \u53c2\u8003\u6587\u732e\\n\\n[^1]:C. Zhao *et al.*, \u201c\u2018What do others think?\u2019: Task-Oriented Conversational Modeling with Subjective Knowledge.\u201d arXiv, May 20, 2023. Accessed: Jun. 05, 2023. [Online]. Available: http://arxiv.org/abs/2305.12091\\n[^2]: M. Eric *et al.*, \u201cMultiWOZ 2.1: A Consolidated Multi-Domain Dialogue Dataset with State Corrections and State Tracking Baselines.\u201d arXiv, Dec. 03, 2019. doi: [10.48550/arXiv.1907.01669](https://doi.org/10.48550/arXiv.1907.01669).\\n[^3]: H. He *et al.*, \u201cLearning to Select External Knowledge with Multi-Scale Negative Sampling.\u201d arXiv, Feb. 03, 2021. doi: [10.48550/arXiv.2102.02096](https://doi.org/10.48550/arXiv.2102.02096).\\n[^4]: L. Tang *et al.*, \u201cRADGE: Relevance Learning and Generation Evaluating Method for Task-oriented Conversational System\u201d *Google Docs*. https://drive.google.com/file/d/1BdhrczeSPlRU26iBsmGHhw8vPkwI4dlk/view.\\n[^5]: R. Yan *et al.*, \u201cTowards Generalized Models for Task-oriented Dialogue Modeling on Spoken Conversations.\u201d arXiv, Mar. 08, 2022. doi: [10.48550/arXiv.2203.04045](https://doi.org/10.48550/arXiv.2203.04045).\\n[^6]: X. Xu, J. Li, G. Chen, and G. Jin, \u201cUsing Masked Span Language Modeling for Multi-domain Dialogue State Tracking\u201d.\\n[^7]: T. Whang, J. Lim, D. Lee, S. Lee, and H. Lim, \u201cTowards Filling the Gap Between Written and Spoken Dialogues for Multi-Domain Dialogue State Tracking\u201d.\\n[^8]: H. Yu, T. Hong, Y. Ko, and K. Lee, \u201cAdapting Pre-trained Language Model for Dialogue State Tracking on Spoken Conversations\u201d.\\n[^9]: J. Cho, T. Hong, C. Park, J. You, Y. Ko, and K. Son, \u201cVarious Uses of Pre-trained Language Model for a Knowledge-grounded Task Oriented Dialogue System\u201d.\\n[^10]: C.-H. Tan *et al.*, \u201cLearning to Retrieve Entity-Aware Knowledge and Generate Responses with Copy Mechanism for Task-Oriented Dialogue Systems.\u201d arXiv, Dec. 22, 2020. Accessed: Jun. 05, 2023. [Online]. Available: http://arxiv.org/abs/2012.11937\\n[^11]: W. He *et al.*, \u201cGALAXY: A Generative Pre-trained Model for Task-Oriented Dialog with Semi-Supervised Learning and Explicit Policy Injection.\u201d arXiv, Mar. 29, 2022. doi: [10.48550/arXiv.2111.14592](https://doi.org/10.48550/arXiv.2111.14592).\\n[^12]: Y. Lee, \u201cImproving End-to-End Task-Oriented Dialog System with A Simple Auxiliary Task,\u201d in *Findings of the Association for Computational Linguistics: EMNLP 2021*, Punta Cana, Dominican Republic: Association for Computational Linguistics, Nov. 2021, pp. 1296\u20131303. doi: [10.18653/v1/2021.findings-emnlp.112](https://doi.org/10.18653/v1/2021.findings-emnlp.112).\\n[^13]: C.-H. Tan *et al.*, \u201cLearning to Retrieve Entity-Aware Knowledge and Generate Responses with Copy Mechanism for Task-Oriented Dialogue Systems.\u201d arXiv, Dec. 22, 2020. Accessed: Jun. 05, 2023. [Online]. Available: http://arxiv.org/abs/2012.11937\\n[^14]:P. He, X. Liu, J. Gao, and W. Chen, \u201cDEBERTA: DECODING-ENHANCED BERT WITH DISENTANGLED ATTENTION,\u201d presented at the International Conference on Learning Representations, Jan. 2021. Accessed: Jun. 06, 2023. [Online]. Available: https://openreview.net/forum?id=XPZIaotutsD\\n[^15]:Y. Liu *et al.*, \u201cRoBERTa: A Robustly Optimized BERT Pretraining Approach.\u201d arXiv, Jul. 26, 2019. doi: [10.48550/arXiv.1907.11692](https://doi.org/10.48550/arXiv.1907.11692).\\n[^16]:J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova, \u201cBERT: Pre-training of Deep Bidirectional Transformers for Language Understanding.\u201d arXiv, May 24, 2019. Accessed: Sep. 23, 2022. [Online]. Available: http://arxiv.org/abs/1810.04805\\n[^17]:Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, et al. Language models are unsupervised multitask learners.\\n[^18]:Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Veselin Stoyanov, and Luke Zettlemoyer. 2020. Bart: Denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension. In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pages 7871\u20137880.\\n[^19]:C. Raffel *et al.*, \u201cExploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer.\u201d arXiv, Jul. 28, 2020. doi: [10.48550/arXiv.1910.10683](https://doi.org/10.48550/arXiv.1910.10683).\\n[^20]:S. Liu, X. Zhao, B. Li, F. Ren, L. Zhang, and S. Yin, \u201cA Three-Stage Learning Framework for Low-Resource Knowledge-Grounded Dialogue Generation.\u201d arXiv, Sep. 09, 2021. Accessed: Nov. 17, 2022. [Online]. Available: http://arxiv.org/abs/2109.04096\\n[^21]:H. Touvron *et al.*, \u201cLLaMA: Open and Efficient Foundation Language Models.\u201d arXiv, Feb. 27, 2023. doi: [10.48550/arXiv.2302.13971](https://doi.org/10.48550/arXiv.2302.13971).\\n[^22]:S. Bubeck *et al.*, \u201cSparks of Artificial General Intelligence: Early experiments with GPT-4.\u201d arXiv, Apr. 13, 2023. doi: [10.48550/arXiv.2303.12712](https://doi.org/10.48550/arXiv.2303.12712)."},{"id":"/2022/11/12/bert-family","metadata":{"permalink":"/blog/2022/11/12/bert-family","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2022/11-12-bert-family.md","source":"@site/blog/2022/11-12-bert-family.md","title":"BERT \u5bb6\u65cf\u5927\u5168\u89e3\u2014\u2014RoBERTa, DeBERTa","description":"\u672c\u6587\u5c06\u5bf9 BERT \u53ca\u5176\u53d8\u79cd\u6a21\u578b\u8fdb\u884c\u5168\u9762\u7684\u4ecb\u7ecd\u548c\u5206\u6790\uff0c\u5305\u62ec RoBERTa\u3001DeBERTa\u3001BART \u7b49\uff0c\u5e0c\u671b\u80fd\u591f\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e00\u4e2a\u6e05\u6670\u7684\u6982\u89c8\u548c\u53c2\u8003\u3002","date":"2022-11-12T00:00:00.000Z","formattedDate":"2022\u5e7411\u670812\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"deep learning","permalink":"/blog/tags/deep-learning"}],"readingTime":1.985,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","deep learning"]},"prevItem":{"title":"\u8d5b\u5c14\u7b14\u8bb0 | \u57fa\u4e8e\u4e3b\u89c2\u77e5\u8bc6\u7684\u4efb\u52a1\u578b\u5bf9\u8bdd\u5efa\u6a21","permalink":"/blog/2023/04/26/dstc11"},"nextItem":{"title":"\u8be6\u89e3 Beam Search \u4ee3\u7801\u5b9e\u73b0","permalink":"/blog/2022/09/01/beam-search"}},"content":"![](./assets/1686580600888.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n\u672c\u6587\u5c06\u5bf9 BERT \u53ca\u5176\u53d8\u79cd\u6a21\u578b\u8fdb\u884c\u5168\u9762\u7684\u4ecb\u7ecd\u548c\u5206\u6790\uff0c\u5305\u62ec RoBERTa\u3001DeBERTa\u3001BART \u7b49\uff0c\u5e0c\u671b\u80fd\u591f\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e00\u4e2a\u6e05\u6670\u7684\u6982\u89c8\u548c\u53c2\u8003\u3002\\n\\n## BERT\\n\\n\u89c1\uff1a[BERT \u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790](/blog/2022/11/04/bert-code)\\n\\n## RoBERTa\\n\\n\u8bba\u6587\uff1a[RoBERTa: A Robustly Optimized BERT Pretraining Approach (arxiv.org)](https://arxiv.org/abs/1907.11692)\\n\\n\u6539\u8fdb\u70b9\uff1a\\n\\n- \u4fee\u6539\u4e86\u8d85\u53c2\u6570\uff1a\u5c06 adam \u7684 $\\\\beta_2$ \u53c2\u6570\u4ece 0.999 \u6539\u4e3a 0.98\\n- \u52a0\u5165\u4e86\u6df7\u5408\u7cbe\u5ea6\\n- \u52a0\u5927batch size\uff1a\u4ece BERT \u7684 256 \u6539\u4e3a 2K \u751a\u81f3 8K\uff0c\u8bad\u7ec3\u6b65\u6570\u4ece 1M \u964d\u5230 500K\\n- \u5728\u66f4\u957f\u7684\u5e8f\u5217\u4e0a\u8bad\u7ec3\uff0c\u4fee\u6539\u8f93\u5165\u683c\u5f0f\uff1aFULL-SENTENCES + \u79fb\u9664 NSP \u4efb\u52a1\\n- \u52a8\u6001\u63a9\u7801\u673a\u5236\\n\\n### \u52a8\u6001\u63a9\u7801\\n\\nBERT \u5728\u9884\u8bad\u7ec3\u65f6\u5bf9\u6570\u636e\u8fdb\u884c mask\uff0c\u4e00\u65e6\u5904\u7406\u597d\u4fbf\u4e0d\u4f1a\u518d\u53d8\uff0c\u8fd9\u4fbf\u662f**\u9759\u6001\u63a9\u7801**\u3002RoBERTa \u6240\u8c13\u7684\u52a8\u6001\u63a9\u7801\u5c31\u662f\u6bcf\u6b21\u8f93\u5165\u65f6\u90fd\u968f\u673a\u8fdb\u884c mask\uff0c\u8fd9\u6837\uff0c\u5728\u5927\u91cf\u6570\u636e\u4e0d\u65ad\u8f93\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u4f1a\u9010\u6e10\u9002\u5e94\u4e0d\u540c\u7684\u63a9\u7801\u7b56\u7565\uff0c\u5b66\u4e60\u4e0d\u540c\u7684\u8bed\u8a00\u8868\u5f81\u3002\\n\\n### \u79fb\u9664NSP\u4efb\u52a1\\n\\n\u4f5c\u8005\u5bf9\u6bd4\u4e86\u56db\u79cd\u8f93\u5165\u6a21\u5f0f\uff1a\\n\\n- SEGMENT-PAIR+NSP\uff1aBERT \u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u8f93\u5165\u6709\u4e00\u5bf9\u6bb5\u843d\uff0c\u6bb5\u843d\u4e4b\u95f4\u7528 [SEP] \u5206\u5272\uff0c\u5e76\u4e14\u8ba1\u7b97 NSP \u635f\u5931\\n- SENTENCE-PAIR+NSP\uff1a\u5c06 segment \u66ff\u6362\u4e3a sentence\\n- FULL-SENTENCES\uff1a\u5982\u679c\u8f93\u5165\u7684\u6700\u5927\u957f\u5ea6\u4e3a512\uff0c\u90a3\u4e48\u5c31\u662f\u5c3d\u91cf\u9009\u62e9 512 \u957f\u5ea6\u7684\u8fde\u7eed\u53e5\u5b50\u3002\u5982\u679c\u8de8 document\u4e86\uff0c\u5c31\u5728\u4e2d\u95f4\u52a0\u4e0a\u4e00\u4e2a\u7279\u6b8a\u5206\u9694\u7b26\uff0c\u4e0d\u4f7f\u7528 NSP \u635f\u5931\\n- DOC-SENTENCES\uff1a\u548c FULL-SENTENCES \u4e00\u6837\uff0c\u53ea\u662f\u4e0d\u80fd\u8de8\u6587\u6863\\n\\n\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n\\n![](./assets/image-20230613003736967.png)\\n\\n## DeBERTa\uff1a\u5177\u6709\u89e3\u7801\u589e\u5f3a\u548c\u6ce8\u610f\u529b\u89e3\u8026\u7684 BERT\\n\\n\\n\\n## \u53c2\u8003\\n\\n- [\u4e07\u5b57\u957f\u6587\u5e26\u4f60\u7eb5\u89c8 BERT \u5bb6\u65cf - \u77e5\u4e4e (zhihu.com)](https://zhuanlan.zhihu.com/p/145119424)"},{"id":"/2022/09/01/beam-search","metadata":{"permalink":"/blog/2022/09/01/beam-search","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2022/09-01-beam-search.md","source":"@site/blog/2022/09-01-beam-search.md","title":"\u8be6\u89e3 Beam Search \u4ee3\u7801\u5b9e\u73b0","description":"Beam Search \u662f\u4e00\u4e2a\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u4ee3\u7801\u5b9e\u73b0\u6280\u5de7\u6027\u5f88\u5f3a\u7684\u7b97\u6cd5\uff0c\u4e0d\u540c\u5b9e\u73b0\u65b9\u5f0f\u7684\u6027\u80fd\u53ef\u80fd\u5343\u5dee\u4e07\u522b\u3002","date":"2022-09-01T00:00:00.000Z","formattedDate":"2022\u5e749\u67081\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"deep learning","permalink":"/blog/tags/deep-learning"}],"readingTime":6.795,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","deep learning"]},"prevItem":{"title":"BERT \u5bb6\u65cf\u5927\u5168\u89e3\u2014\u2014RoBERTa, DeBERTa","permalink":"/blog/2022/11/12/bert-family"},"nextItem":{"title":"BERT \u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790","permalink":"/blog/2022/08/04/bert-code"}},"content":"Beam Search \u662f\u4e00\u4e2a\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u4ee3\u7801\u5b9e\u73b0\u6280\u5de7\u6027\u5f88\u5f3a\u7684\u7b97\u6cd5\uff0c\u4e0d\u540c\u5b9e\u73b0\u65b9\u5f0f\u7684\u6027\u80fd\u53ef\u80fd\u5343\u5dee\u4e07\u522b\u3002\\n\\n\u5728 [Stanford CS 224N | Natural Language Processing with Deep Learning](https://web.stanford.edu/class/cs224n/) \u8bfe\u7a0b\u4f5c\u4e1a [A4-NMT with RNNs](/docs/ai/dl-nlp/Assignment4-NMT_with_RNNs) \u4e2d\u5c31\u7528\u5230\u4e86 Beam Search\uff0c\u5b83\u7684`beam_search`\u51fd\u6570\u5b9e\u73b0\u5f97\u975e\u5e38\u5999\uff0c\u5f53\u7136\uff0c\u6280\u5de7\u6027\u4e5f\u5f88\u5f3a\uff0c\u8bfb\u61c2\u5b83\u5e76\u4e0d\u5bb9\u6613\u3002\\n\\n\u672c\u6587\u5c31\u5177\u4f53\u8bb2\u89e3\u5176\u4e2d\u7684\u5b9e\u73b0\u601d\u8def\u4e0e\u7ec6\u8282\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u51fd\u6570\u89c4\u7ea6\\n\\n```python\\ndef beam_search(self, src_sent: List[str], beam_size: int=5, max_decoding_time_step: int=70) -> List[Hypothesis]:\\n    \\"\\"\\" Given a single source sentence, perform beam search, yielding translations in the target language.\\n    @param src_sent (List[str]): a single source sentence (words)\\n    @param beam_size (int): beam size\\n    @param max_decoding_time_step (int): maximum number of time steps to unroll the decoding RNN\\n    @returns hypotheses (List[Hypothesis]): a list of hypothesis, each hypothesis has two fields:\\n            value: List[str]: the decoded target sentence, represented as a list of words\\n            score: float: the log-likelihood of the target sentence\\n    \\"\\"\\"\\n```\\n\\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u8f93\u5165\u6e90\u53e5\u5b50\uff0cbeam_size\uff0c\u6700\u957f\u957f\u5ea6\uff0c\u671f\u671b\u8f93\u51fa\u6982\u7387\u524d beam_size \u4e2a\u53e5\u5b50\u53ca\u5176\u5bf9\u5e94\u7684\u6982\u7387\u3002\\n\\n## \u4ee3\u7801\u89e3\u6790\\n\\n\u6211\u5148\u9010\u6b65\u6838\u5fc3\u5206\u6790\uff0c\u6700\u540e\u7ed9\u51fa\u5168\u90e8\u4ee3\u7801\\n\\n### \u521d\u59cb\u5316\\n\\n\u6574\u4e2a\u4ee3\u7801\u7684\u6838\u5fc3\u5c31\u662f\u7ef4\u62a4`hypotheses`\u548c`hyp_scores`\\n\\n```python\\n# \u5b58\u653e\u6240\u6709\u5e8f\u5217\u96c6\u5408, \u6700\u5f00\u59cb\u662f<s>\u6807\u7b7e\\nhypotheses = [[\'<s>\']]\\n# \u6bcf\u4e2a\u5e8f\u5217\u7684\u5206\u6570, \u5927\u5c0f\u4e5f\u5c31\u662f\u5e8f\u5217\u96c6\u5408\u4e2d\u7684\u5e8f\u5217\u6570\u91cf\\nhyp_scores = torch.zeros(len(hypotheses), dtype=torch.float, device=self.device)\\n# \u5b58\u653e\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u6bd5\u7684\u5e8f\u5217\uff0c\\ncompleted_hypotheses = []\\n```\\n\\n### \u66f4\u65b0\\n\\n1. **\u9996\u5148\uff0c\u4f7f\u7528\u4e00\u4e2a\u5927\u5faa\u73af\uff0c\u4e00\u6b65\u4e00\u6b65\u89e3\u7801\u751f\u6210\u4e0b\u4e00\u4e2a token\uff0c\u5e76\u5728\u6bcf\u6b65\u7ed3\u675f\u65f6\u9009\u62e9\u5f53\u524d\u5f97\u5206\u524d beam_size \u4e2a\u5e8f\u5217\uff0c\u66f4\u65b0\u5e8f\u5217\u548c\u5f97\u5206**\\n\\n```python\\nt = 0\\nwhile len(completed_hypotheses) < beam_size and t < max_decoding_time_step:\\n    t += 1\\n```\\n\\n\u7ec8\u6b62\u6761\u4ef6\u6709\u4e24\u4e2a\uff1a\\n\\n- \u8ba1\u7b97\u5b8c\u6bd5\u7684\u5e8f\u5217\u8fbe\u5230\u4e86 beam_size\\n- \u5e8f\u5217\u957f\u5ea6\u8fbe\u5230\u4e86 max_decoding_time_step\\n\\n\u7136\u540e\uff0c\u5728\u5faa\u73af\u5185\u90e8\uff1a\\n\\n2. **\u4f7f\u7528`torch.expand()`\u5c06\u8f93\u5165\u7684 encoding \u590d\u5236\u4e3a\u5f53\u524d\u65f6\u95f4\u6b65\u5e8f\u5217\u7684\u6570\u91cf\uff0c\u8fd9\u662f\u4e3a\u4e86\u5e76\u884c\u751f\u6210**\\n\\n```python\\n# \u5e8f\u5217\u7684\u6570\u91cf\\nhyp_num = len(hypotheses)\\n\\n# (hyp_num, src_len, h)\\nexp_src_encodings = src_encodings.expand(hyp_num,\\n                                         src_encodings.size(1),\\n                                         src_encodings.size(2))\\n# (hyp_num, src_len, h)\\nexp_src_encodings_att_linear = src_encodings_att_linear.expand(hyp_num,                                                   src_encodings_att_linear.size(1),\\n                                    src_encodings_att_linear.size(2))\\n```\\n\\n3. **\u6839\u636e\u6bcf\u4e2a\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a token \u548c\u8f93\u5165\uff0c\u5229\u7528`step()`\u51fd\u6570\u5f97\u5230\u4e0b\u4e00\u6b65 token\uff0c\u5e76\u8ba1\u7b97\u8be5 token \u7684\u6982\u7387**\\n\\n```python\\n# \u6bcf\u4e2a\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u8bcd\u7684\u5d4c\u5165(hyp_num,e)\\ny_tm1 = torch.tensor([self.vocab.tgt[hyp[-1]] for hyp in hypotheses], dtype=torch.long, device=self.device)\\ny_t_embed = self.model_embeddings.target(y_tm1)\\nx = torch.cat([y_t_embed, att_tm1], dim=-1)\\n\\n# \u5229\u7528step\u51fd\u6570\u4e0b\u4e00\u6b65\u9884\u6d4b\\n(h_t, cell_t), att_t, _  = self.step(x, h_tm1, exp_src_encodings, exp_src_encodings_att_linear, enc_masks=None)\\n# \u6ce8\u610f\uff0c\u8fd9\u91cc\u8f93\u5165\u7684\u5927\u5c0f\u4e3a (hyp_num, src_len, h)\\n# \u6240\u4ee5\uff0c\u8f93\u51fa\u7684att_t\u5927\u5c0f\u4e3a(hyp_num, h)\\n\\n# self.target_vocab_projection \u662f\u5c06\u9690\u85cf\u5c42\u9690\u5c04\u5230\u6574\u4e2a\u8bcd\u8868\\n# log_p_t \u5c31\u662f\u6bcf\u4e00\u4e2a\u5e8f\u5217\u4e0b\u4e00\u4e2a\u8bcd\u7684\u6982\u7387\\n# \u5927\u5c0f\u4e3a(hyp_num, vocab_size)\\nlog_p_t = F.log_softmax(self.target_vocab_projection(att_t), dim=-1)\\n# \u5269\u4f59\u9700\u8981\u7684\u5e8f\u5217\u6570\u91cf\\nlive_hyp_num = beam_size - len(completed_hypotheses)\\n```\\n\\n4. **\u8ba1\u7b97\u4e0d\u540c\u5e8f\u5217\u7684\u5f97\u5206**\\n\\n```python\\n# \u8fd9\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u5e8f\u5217\u5728\u6574\u4e2a\u8bcd\u8868\u7684\u5f97\u5206\\n# view(-1) \u662f\u4e3a\u4e86\u9009\u53d6\u6240\u6709\u4e2d\u6700\u5927\u7684\\n# hyp_scores: (hyp_num, ) -> (hyp_num, 1) -> (hyp_num, vocab_size) -> (hyp_num * vocab_size,) \\ncontiuating_hyp_scores = (hyp_scores.unsqueeze(1).expand_as(log_p_t) + log_p_t).view(-1)\\n# \u524d k \u4e2a\u6700\u5927\u7684\\ntop_cand_hyp_scores, top_cand_hyp_pos = torch.topk(contiuating_hyp_scores, k=live_hyp_num)\\n\\n# \u627e\u5230\u4e4b\u540e\uff0c\u600e\u4e48\u786e\u5b9a\u8fd9\u524d k \u4e2a\u6700\u5927\u7684\u662f\u54ea\u4e2a\u5e8f\u5217\uff0c\u4ee5\u53ca\u9009\u62e9\u7684\u8bcd\u8868\u4e2d\u7684\u54ea\u4e2a\u8bcd\u5462\uff1f\\n# \u7531\u4e8e contiuating_hyp_scores: (hyp_num * vocab_size,), \u6545\u4f5c\u5546\u5c31\u5f97\u5230\u4e86\u5177\u4f53\u7684\u5e8f\u5217\uff0c\u4f59\u6570\u5373\u4e3a\u5bf9\u5e94\u8bcd\u8868\u7684\u8bcd\uff0c\u592a\u79d2\u4e86\uff01\uff01\\nprev_hyp_ids = top_cand_hyp_pos // len(self.vocab.tgt) # (live_hyp_num, )\\nhyp_word_ids = top_cand_hyp_pos % len(self.vocab.tgt) # (live_hyp_num, )\\n```\\n\\n5. **\u5f97\u5230\u5f53\u524d topk \u7684\u5e8f\u5217\u548c\u5206\u6570**\\n\\n```python\\nnew_hypotheses = []\\nlive_hyp_ids = []\\nnew_hyp_scores = []\\n# \u4e00\u5171\u5faa\u73af\u4e86 live_hyp_num \u6b21\\nfor prev_hyp_id, hyp_word_id, cand_new_hyp_score in zip(prev_hyp_ids, hyp_word_ids, top_cand_hyp_scores):\\n    prev_hyp_id = prev_hyp_id.item()\\n    hyp_word_id = hyp_word_id.item()\\n    cand_new_hyp_score = cand_new_hyp_score.item()\\n    # top[i]\u7684\u5e8f\u5217\u548c\u8bcd\\n    hyp_word = self.vocab.tgt.id2word[hyp_word_id]\\n    new_hyp_sent = hypotheses[prev_hyp_id] + [hyp_word]\\n  \\t# \u6709\u7ed3\u675f\u6807\u5fd7\uff0c\u5c31\u76f4\u63a5\u52a0\u8fdb\u5b8c\u6210\u5e8f\u5217\u4e2d\\n    if hyp_word == \'</s>\':\\n        completed_hypotheses.append(Hypothesis(value=new_hyp_sent[1:-1],score=cand_new_hyp_score))\\n    else:\\n        new_hypotheses.append(new_hyp_sent)\\n        live_hyp_ids.append(prev_hyp_id)\\n        new_hyp_scores.append(cand_new_hyp_score)\\n\\nif len(completed_hypotheses) == beam_size:\\n        break\\n```\\n\\n6. **\u66f4\u65b0`hypotheses`\u548c`hyp_scores`\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\u5faa\u73af**\\n\\n```python\\nhypotheses = new_hypotheses\\nhyp_scores = torch.tensor(new_hyp_scores, dtype=torch.float, device=self.device)\\n```\\n\\n### \u5b8c\u6574\u4ee3\u7801\\n\\n```python\\ndef beam_search(self, src_sent: List[str], beam_size: int=5, max_decoding_time_step: int=70) -> List[Hypothesis]:\\n    \\"\\"\\" Given a single source sentence, perform beam search, yielding translations in the target language.\\n    @param src_sent (List[str]): a single source sentence (words)\\n    @param beam_size (int): beam size\\n    @param max_decoding_time_step (int): maximum number of time steps to unroll the decoding RNN\\n    @returns hypotheses (List[Hypothesis]): a list of hypothesis, each hypothesis has two fields:\\n            value: List[str]: the decoded target sentence, represented as a list of words\\n            score: float: the log-likelihood of the target sentence\\n    \\"\\"\\"\\n    src_sents_var = self.vocab.src.to_input_tensor([src_sent], self.device)\\n\\n    src_encodings, dec_init_vec = self.encode(src_sents_var, [len(src_sent)])\\n    src_encodings_att_linear = self.att_projection(src_encodings)\\n\\n    h_tm1 = dec_init_vec\\n    att_tm1 = torch.zeros(1, self.hidden_size, device=self.device)\\n\\n    eos_id = self.vocab.tgt[\'</s>\']\\n    hypotheses = [[\'<s>\']]\\n    hyp_scores = torch.zeros(len(hypotheses), dtype=torch.float, device=self.device)\\n\\n    completed_hypotheses = []\\n\\n    t = 0\\n    while len(completed_hypotheses) < beam_size and t < max_decoding_time_step:\\n        t += 1\\n\\n        hyp_num = len(hypotheses)\\n\\n        exp_src_encodings = src_encodings.expand(hyp_num,\\n                                                 src_encodings.size(1),\\n                                                 src_encodings.size(2))\\n\\n        exp_src_encodings_att_linear = src_encodings_att_linear.expand(hyp_num,\\n                                                                       src_encodings_att_linear.size(1),\\n                                                                       src_encodings_att_linear.size(2))\\n\\n        y_tm1 = torch.tensor([self.vocab.tgt[hyp[-1]] for hyp in hypotheses], dtype=torch.long, device=self.device)\\n        y_t_embed = self.model_embeddings.target(y_tm1)\\n\\n        x = torch.cat([y_t_embed, att_tm1], dim=-1)\\n\\n        (h_t, cell_t), att_t, _  = self.step(x, h_tm1,\\n                                                  exp_src_encodings, exp_src_encodings_att_linear, enc_masks=None)\\n\\n        log_p_t = F.log_softmax(self.target_vocab_projection(att_t), dim=-1)\\n\\n        live_hyp_num = beam_size - len(completed_hypotheses)\\n        contiuating_hyp_scores = (hyp_scores.unsqueeze(1).expand_as(log_p_t) + log_p_t).view(-1)\\n        top_cand_hyp_scores, top_cand_hyp_pos = torch.topk(contiuating_hyp_scores, k=live_hyp_num)\\n        prev_hyp_ids = torch.div(top_cand_hyp_pos, len(self.vocab.tgt), rounding_mode=\'floor\')\\n        hyp_word_ids = top_cand_hyp_pos % len(self.vocab.tgt)\\n\\n        new_hypotheses = []\\n        live_hyp_ids = []\\n        new_hyp_scores = []\\n        for prev_hyp_id, hyp_word_id, cand_new_hyp_score in zip(prev_hyp_ids, hyp_word_ids, top_cand_hyp_scores):\\n            prev_hyp_id = prev_hyp_id.item()\\n            hyp_word_id = hyp_word_id.item()\\n            cand_new_hyp_score = cand_new_hyp_score.item()\\n\\n            hyp_word = self.vocab.tgt.id2word[hyp_word_id]\\n            new_hyp_sent = hypotheses[prev_hyp_id] + [hyp_word]\\n            if hyp_word == \'</s>\':\\n                completed_hypotheses.append(Hypothesis(value=new_hyp_sent[1:-1],\\n                                                       score=cand_new_hyp_score))\\n            else:\\n                new_hypotheses.append(new_hyp_sent)\\n                live_hyp_ids.append(prev_hyp_id)\\n                new_hyp_scores.append(cand_new_hyp_score)\\n\\n        if len(completed_hypotheses) == beam_size:\\n            break\\n        live_hyp_ids = torch.tensor(live_hyp_ids, dtype=torch.long, device=self.device)\\n        h_tm1 = (h_t[live_hyp_ids], cell_t[live_hyp_ids])\\n        att_tm1 = att_t[live_hyp_ids]\\n\\n        hypotheses = new_hypotheses\\n        hyp_scores = torch.tensor(new_hyp_scores, dtype=torch.float, device=self.device)\\n\\n    if len(completed_hypotheses) == 0:\\n        completed_hypotheses.append(Hypothesis(value=hypotheses[0][1:],\\n                                               score=hyp_scores[0].item()))\\n    completed_hypotheses.sort(key=lambda hyp: hyp.score, reverse=True)\\n    return completed_hypotheses\\n```\\n\\n\\n\\n## \u603b\u7ed3\\n\\n\u603b\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u7ef4\u62a4\u4e86\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u524d k \u4e2a\u53e5\u5b50\u4ee5\u53ca\u5bf9\u5e94\u7684\u5206\u6570\u3002\\n\\n\u5728\u5f97\u5230\u4e0b\u4e00\u6b65\u8bcd\u8868\u6982\u7387\u540e\uff0c\u5f53\u524d\u5f20\u91cf\u5f62\u5f0f\u4e3a (k, vocab_size)\uff0c\u5019\u9009\u53e5\u5b50\u5c31\u6709 k * vocab_size \u4e2a\uff0c\u5982\u4f55\u5feb\u901f\u5f97\u5230\u8fd9\u4e48\u591a\u53e5\u5b50\u7684 topk \u5462\uff1f\u8be5\u4ee3\u7801\u6700\u5999\u7684\u5730\u65b9\u5c31\u662f\u5c06\u8be5\u5f20\u91cf\u5c55\u5f00\u4e3a 1 \u7ef4\uff0c\u5feb\u901f\u5f97\u5230 topk \u4e2a\u5e8f\u53f7\uff0c\u518d\u6839\u636e\u5e8f\u53f7\u4e0e vocab_size \u7684\u5546\u548c\u4f59\u5b9a\u4f4d\u5bf9\u5e94\u7684\u53e5\u5b50\u548c\u8bcd\uff0c\u8fd9\u4e00\u6b65\u975e\u5e38\u5999\uff01"},{"id":"/2022/08/04/bert-code","metadata":{"permalink":"/blog/2022/08/04/bert-code","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2022/08-04-bert-code.md","source":"@site/blog/2022/08-04-bert-code.md","title":"BERT \u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790","description":"\u8bba\u6587\uff1aBERT: Pre-training of Deep Bidirectional Transformers for Language Understanding","date":"2022-08-04T00:00:00.000Z","formattedDate":"2022\u5e748\u67084\u65e5","tags":[{"label":"NLP","permalink":"/blog/tags/nlp"},{"label":"deep learning","permalink":"/blog/tags/deep-learning"}],"readingTime":2.3,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["NLP","deep learning"]},"prevItem":{"title":"\u8be6\u89e3 Beam Search \u4ee3\u7801\u5b9e\u73b0","permalink":"/blog/2022/09/01/beam-search"},"nextItem":{"title":"CSAPP\uff0c\u6211\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u542f\u8499\u4e66","permalink":"/blog/2022/05/01/csapp"}},"content":"\u8bba\u6587\uff1a[BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding](https://arxiv.org/abs/1810.04805)\\n\\n\u6a21\u578b\u7531\u8f93\u5165\u5c42\uff08Embedding\uff09\uff0c\u7f16\u7801\u5c42\uff08Transformer-Encoder\uff09\u548c\u8f93\u51fa\u5c42\u4e09\u90e8\u5206\u7ec4\u6210\u3002\\n\\n## \u6a21\u578b\u7ed3\u6784\\n\\n### \u8f93\u5165\u5c42\\n\\n![](./assets/image-20230612231726961.png)\\n\\n- Token Embedding\uff1a\u8bcd\u5411\u91cf\uff0c\u7b2c\u4e00\u4e2a Token \u662f [CLS]\uff0c\u4f5c\u4e3a\u6574\u4e2a\u53e5\u5b50\u7684\u8868\u5f81\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u5206\u7c7b\u4efb\u52a1\\n- Segment Embedding\uff1a\u7528\u6765\u533a\u5206\u4e24\u79cd\u53e5\u5b50\\n- Position Embedding\uff1a\u4e0e transformer \u7684 position encoding \u4e0d\u540c\uff0c\u8fd9\u91cc\u7684 Position Embedding \u662f\u81ea\u5df1\u5b66\u4e60\u7684\\n\\n\x3c!--truncate--\x3e\\n\\n### \u7f16\u7801\u5c42\\n\\nBERT \u4ec5\u4ec5\u4f7f\u7528 transformer \u7684 encoder\uff0c\\n\\n![](./assets/image-20230612232548339.png)\\n\\n## \u9884\u8bad\u7ec3\\n\\n### Task 1#: Masked LM\\n\\n\u9996\u5148\uff0c\u4f7f\u7528 [MASK] \u968f\u673a mask \u6389 15% \u7684 token\uff0c\u4f46\u662f\u5728\u662f\u9884\u6d4b\u4e2d\uff0c\u6a21\u578b\u65f6\u9047\u4e0d\u5230 [MASK] \u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u907f\u514d\u5f71\u54cd\u6a21\u578b\uff0c\u5f53\u9009\u5b9a\u4e00\u4e2a\u5f85 mask \u7684\u8bcd\u65f6\uff0c\u4f7f\u7528\u5982\u4e0b\u7b56\u7565\uff1a\\n\\n1. 80% \u7684\u6982\u7387\u5c06\u5176\u66ff\u6362\u4e3a[MASK]\\n2. 10% \u7684\u6982\u7387\u5c06\u5176\u968f\u673a\u66ff\u6362\u4e3a\u5176\u5b83 token\\n3. 10% \u7684\u6982\u7387\u4e0d\u6539\u53d8\u5b83\\n\\n\u505a MLM \u8bad\u7ec3\u65f6\uff0c\u5c31\u662f\u5c06 mask \u6389\u7684 token \u7684\u6700\u540e\u4e00\u5c42\u9690\u85cf\u5c42\u5411\u91cf\u8f93\u5165\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\u6620\u5c04\u5230\u6574\u4e2a\u8bcd\u8868\uff0c\u5373\u5f97\u5230\u4e86\u6bcf\u4e2a\u8bcd\u7684\u6982\u7387\uff0c\u635f\u5931\u51fd\u6570\u7528\u4ea4\u53c9\u71b5\u3002\\n\\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```python\\nclass BertLMPredictionHead(nn.Module):\\n    def __init__(self, config):\\n        super().__init__()\\n        self.transform = BertPredictionHeadTransform(config)\\n\\n        # The output weights are the same as the input embeddings, but there is\\n        # an output-only bias for each token.\\n        self.decoder = nn.Linear(config.hidden_size, config.vocab_size, bias=False)\\n\\n        self.bias = nn.Parameter(torch.zeros(config.vocab_size))\\n\\n        # Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`\\n        self.decoder.bias = self.bias\\n\\n    def forward(self, hidden_states):\\n        hidden_states = self.transform(hidden_states)\\n        hidden_states = self.decoder(hidden_states)\\n        return hidden_states\\n```\\n\\n### Task 2#: Next Sentence Prediction\\n\\n\u56e0\u4e3a\u6d89\u53ca\u5230 QA \u548c NLI \u4e4b\u7c7b\u7684\u4efb\u52a1\uff0c\u589e\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u9884\u8bad\u7ec3\u4efb\u52a1\uff0c\u76ee\u7684\u662f\u8ba9\u6a21\u578b\u7406\u89e3\u4e24\u4e2a\u53e5\u5b50\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u8bad\u7ec3\u7684\u8f93\u5165\u662f\u53e5\u5b50 A \u548c B\uff0cB \u6709\u4e00\u534a\u7684\u51e0\u7387\u662fA\u7684\u4e0b\u4e00\u53e5\uff0c\u8f93\u5165\u8fd9\u4e24\u4e2a\u53e5\u5b50\uff0c\u6a21\u578b\u9884\u6d4b B \u662f\u4e0d\u662f A \u7684\u4e0b\u4e00\u53e5\u3002\\n\\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u4efb\u52a1\uff0c\u4f7f\u7528 [CLS] \u8f93\u5165\u5230\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\u7136\u540e\u505a softmax \u5373\u53ef\u3002\\n\\n## \u5fae\u8c03\\n\\n![](./assets/image-20230612235434891.png)"},{"id":"/2022/05/01/csapp","metadata":{"permalink":"/blog/2022/05/01/csapp","editUrl":"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2022/05-01-csapp.md","source":"@site/blog/2022/05-01-csapp.md","title":"CSAPP\uff0c\u6211\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u542f\u8499\u4e66","description":"\u672c\u6587\u6700\u65e9\u53d1\u5e03\u4e8e\u6211\u7684\u77e5\u4e4e\uff1a\u5982\u4f55\u9605\u8bfb\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u8fd9\u672c\u4e66\uff1f - \u77e5\u4e4e","date":"2022-05-01T00:00:00.000Z","formattedDate":"2022\u5e745\u67081\u65e5","tags":[{"label":"\u8ba1\u7b97\u673a\u79d1\u5b66","permalink":"/blog/tags/\u8ba1\u7b97\u673a\u79d1\u5b66"}],"readingTime":12.105,"hasTruncateMarker":true,"authors":[{"name":"Kcxain","url":"https://github.com/kcxain","email":"kcxain@gmail.com","imageURL":"https://github.com/kcxain.png","key":"kcxain"}],"frontMatter":{"authors":"kcxain","tags":["\u8ba1\u7b97\u673a\u79d1\u5b66"]},"prevItem":{"title":"BERT \u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790","permalink":"/blog/2022/08/04/bert-code"}},"content":"\u672c\u6587\u6700\u65e9\u53d1\u5e03\u4e8e\u6211\u7684\u77e5\u4e4e\uff1a[\u5982\u4f55\u9605\u8bfb\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u8fd9\u672c\u4e66\uff1f - \u77e5\u4e4e](https://www.zhihu.com/question/20402534/answer/2655186100)\\n\\n\u4eca\u5929\uff0c\u804a\u804a\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u8fd9\u672c\u4e66\uff0c\u5f88\u591a\u4eba\u4e00\u770b\u201c\u6df1\u5165\u201d\u4e8c\u5b57\u5c31\u4f1a\u88ab\u5413\u5230\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u7684\u82f1\u6587\u5168\u79f0\u662f\uff1aComputer Systems: A Programmer\u2019s Perspective\\n\\n\u76f4\u8bd1\u8fc7\u6765\uff1a\u4ee5\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u89c6\u89d2\u6765\u770b\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u5185\u5bb9\u5e76\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u53ef\u4ee5\u8bf4\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5927\u7eb2\uff0c\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u539f\u7406\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u77e5\u8bc6\u5747\u6709\u6d89\u53ca\uff0c\u5185\u5bb9\u517c\u5177\u5e7f\u5ea6\u4e0e\u6df1\u5ea6\u3002\\n\\n\u8fd9\u672c\u4e66\u6700\u65e9\u662f CMU \u5f00\u8bbe\u7684 Introduction to Computer Systems \u8bfe\u7a0b\u6559\u6750\uff0c\u540e\u6765\u4e5f\u88ab\u56fd\u5185\u7684\u5317\u5927\u3001\u4e0a\u4ea4\u3001\u54c8\u5de5\u5927\u3001\u5317\u90ae\u3001\u6b66\u5927\u7b49\u5b66\u6821\u4f7f\u7528\uff0c\u4f5c\u4e3a\u672c\u79d1\u751f\u201c\u8ba1\u7b97\u673a\u7cfb\u7edf\u5bfc\u8bba\u201d\u8bfe\u7a0b\u7684\u6559\u6750\u3002\u6211\u6821\uff08\u54c8\u5de5\u5927\uff09\u751a\u81f3\u5c06\u5b83\u4f5c\u4e3a\u8003\u7814\u4e13\u4e1a\u8bfe\u7684\u53c2\u8003\u6559\u6750\u3002\\n\\n\u6211\u662f\u4ece\u5927\u4e8c\u7684\u5bd2\u5047\u5f00\u59cb\u8bfb\u7684\uff0c\u8017\u65f6\u4e09\u4e2a\u6708\uff0c\u8bfb\u5b8c\u4e86\u6574\u672c\u4e66\uff0c\u505a\u5b8c\u4e86\u4e66\u4e2d\u6240\u6709\u7684 exercise\uff08homework \u53ea\u505a\u4e86\u90e8\u5206\u9898\uff09\uff0c\u5e76\u5b8c\u6210\u4e86\u914d\u5957\u7684\u5168\u90e8 9 \u4e2a\u5b9e\u9a8c\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n\u8bfb\u5b8c\u4e5f\u662f\u6210\u5c31\u611f\u6ee1\u6ee1\uff08\u56fe\u7247\u6c34\u5370\u4e3a\u6211\u4e2a\u4eba\u77e5\u4e4e\uff09\uff1a\\n\\n![img](./assets/v2-1435e8b4a167fb514e291aff1c7ef695_720w.webp)\\n\\n![img](./assets/v2-0805340d1858d58b284d3f7537c26b10_720w.webp)\\n\\n\u6211\u6821\u5927\u4e8c\u4e0b\u7684\u201c\u8ba1\u7b97\u673a\u7cfb\u7edf\u201d\u8bfe\u7a0b\u5c31\u662f\u7528\u7684\u8fd9\u672c\u6559\u6750\uff0c\u6211\u5728\u5907\u8003\u671f\u672b\u65f6\u5236\u4f5c\u7684\u4e00\u7eb8\u5f00\u5377\uff0c\u68b3\u7406\u4e86\u5168\u4e66\u5185\u5bb9\uff1a\\n\\n![img](./assets/v2-21941a3f99caabdbb44ad5cda43834f8_720w.webp)\\n\\n![img](./assets/v2-0f0072083850bbda3306ec5f71218b99_720w.webp)\\n\\n\u6700\u540e\u8003\u4e86 92 \u5206\uff0c\u6210\u7ee9\u8fd8\u7b97\u7406\u60f3\\n\\n\u6211\u9605\u8bfb\u6b64\u4e66\u524d\u8ba1\u7b97\u673a\u57fa\u7840\u51e0\u4e4e\u4e3a 0\uff08\u4e13\u4e1a\u8bfe\u53ea\u5b66\u4e86 C \u8bed\u8a00\u548c\u6570\u636e\u7ed3\u6784\uff09\uff0c\u6545\u6211\u7684\u9605\u8bfb\u65b9\u6cd5\u5e94\u8be5\u662f\u9002\u5408\u5927\u90e8\u5206\u4eba\u7684\u3002\\n\\n### \u5148\u63d0\u51fa\u4e00\u4e9b\u603b\u4f53\u4e0a\u7684\u5efa\u8bae\uff1a\\n\\n- **\u4e0d\u5efa\u8bae**\u770b\u4efb\u4f55\u7f51\u8bfe\uff0c\u5305\u62ec\u8be5\u4e66\u4f5c\u8005\u5728 CMU \u5f55\u5236\u7684\u8bfe\u3002\u8fd9\u672c\u4e66\u7684\u5185\u5bb9\u76f8\u5f53\u4e30\u5bcc\uff0c\u800c\u4e14\u8bb2\u89e3\u7684\u5f88\u6e05\u6670\uff0c\u96be\u5ea6\u66f2\u7ebf\u4e0a\u5347\u5f88\u7f13\u6162\uff0c\u76f4\u63a5\u8010\u5fc3\u5543\u4e66\u5c31\u597d\u3002\\n- \u6bcf\u4e2a\u7ae0\u8282\u7684 **[exercise](https://www.zhihu.com/search?q=exercise&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={\\"sourceType\\":\\"answer\\"%2C\\"sourceId\\":2655186100})** \u4e00\u5b9a\u8981\u505a\uff01\u8fd9\u4e9b\u4e60\u9898\u90fd\u662f\u4f5c\u8005\u7cbe\u5fc3\u8bbe\u8ba1\u7528\u6765\u5de9\u56fa\u5f53\u524d\u5b66\u4e60\u5185\u5bb9\u7684\uff0c\u5c24\u5176\u662f\u524d\u516d\u7ae0\u548c\u7b2c\u4e5d\u7ae0\u7684\u4e60\u9898\u8bbe\u8ba1\u7684\u975e\u5e38\u597d\uff0c\u540e\u9762\u8fd8\u9644\u4e0a\u4e86\u7ec6\u81f4\u7684\u89e3\u6790\uff0c\u505a\u5b8c\u5bf9\u77e5\u8bc6\u7684\u7406\u89e3\u5927\u6709\u597d\u5904\u3002\\n- **\u4efb\u52a1\u9a71\u52a8\u5f0f**\u5b66\u4e60\u3002\u6211\u8bfb\u8fd9\u672c\u4e66\u65f6\u5b9a\u4e0b\u7684\u76ee\u6807\u662f\u6bcf\u4e2a\u5468\u672b\u505a\u5b8c\u4e00\u4e2a lab\uff0c\u4e00\u4e2a lab \u57fa\u672c\u4e0a\u5bf9\u5e94\u4e66\u4e2d\u7684\u4e00\u4e2a\u7ae0\u8282\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u6bcf\u5468\u8981\u81f3\u5c11\u8bfb\u5b8c\u4e00\u4e2a\u7ae0\u8282\uff0c\u6709\u4e86\u8fd9\u79cd\u660e\u786e\u7684\u76ee\u6807\uff0c\u6211\u7684\u5b66\u4e60\u6548\u7387\u5927\u5927\u63d0\u5347\\n\\n\u4e0b\u9762\u5206\u7ae0\u8282\u63d0\u51fa\u4e00\u4e9b\u9605\u8bfb\u5efa\u8bae\uff1a\\n\\n### \u7b2c\u4e00\u7ae0\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38\\n\\n\u5c5e\u4e8e\u662f\u5168\u4e66\u7684\u7eb2\u8981\uff0c\u6982\u62ec\u4e86\u5168\u4e66\u8981\u8bb2\u89e3\u7684\u5185\u5bb9\u3002\u8bfb\u4e0d\u61c2\u5f88\u6b63\u5e38\uff0c\u7565\u8bfb\u5373\u53ef\uff0c\u7b49\u8bfb\u5b8c\u5168\u4e66\u518d\u56de\u6765\u81ea\u4f1a\u6709\u4e0d\u540c\u7684\u9886\u609f\u3002\\n\\n### \u7b2c\u4e8c\u7ae0\uff1a\u4fe1\u606f\u7684\u8868\u793a\u548c\u5904\u7406\\n\\n\u8bb2\u89e3\u6570\u636e\u7684\u673a\u5668\u7ea7\u5b58\u50a8\uff0c\u8865\u7801/\u53cd\u7801\u3001IEEE \u6d6e\u70b9\u6570\u8868\u793a\u7b49\u3002\u672c\u7ae0\u975e\u5e38\u96be\u5543\u4e14\u6280\u5de7\u6027\u8f83\u5f3a\uff0c\u5efa\u8bae\u8bfb\u65f6\u4ee5\u7406\u89e3\u4e3a\u4e3b\uff0c\u4e0d\u8981\u6b7b\u6263\u4e66\u4e0a\u7684\u6570\u5b66\u63a8\u5bfc\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u8fb9\u8bfb\u8fb9\u505a\u672c\u7ae0\u5bf9\u5e94\u7684 [Data Lab](https://zhuanlan.zhihu.com/p/472188244) \u6765\u4fc3\u8fdb\u7406\u89e3\\n\\n### \u7b2c\u4e09\u7ae0\uff1a\u7a0b\u5e8f\u7684\u673a\u5668\u7ea7\u8868\u793a\\n\\n\u8fd9\u7ae0\u4ece\u5e95\u5c42\u8bb2\u89e3\u4e00\u6bb5\u4ee3\u7801\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff0c\u6d89\u53ca\u6c47\u7f16\u4ee3\u7801\uff0c[\u51fd\u6570\u8c03\u7528\u6808](https://www.zhihu.com/search?q=\u51fd\u6570\u8c03\u7528\u6808&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={\\"sourceType\\":\\"answer\\"%2C\\"sourceId\\":2655186100})\u7b49\uff0c\u662f\u76f8\u5bf9\u96be\u5543\u7684\u4e00\u7ae0\u3002\\n\\n\u5982\u679c\u5b9e\u5728\u8bfb\u4e0d\u4e0b\u53bb\u53ef\u4ee5\u5148\u8bfb\u4e00\u8bfb\u738b\u723d\u7684**\u300a\u6c47\u7f16\u8bed\u8a00\u300b**\\n\\n![img](./assets/v2-5cfb610c486daa42d88e247081ac065e_720w.webp)\\n\\n\u6b64\u4e66\u76f8\u5f53\u4e8e\u7f29\u5c0f\u7248\u7684 CSAPP\uff0c\u901a\u4fd7\u6613\u61c2\uff0c\u96be\u5ea6\u66f2\u7ebf\u66f4\u4f4e\u3002\u6211\u82b1\u4e86\u4e09\u5929\u65f6\u95f4\u8bfb\u5b8c\u8fd9\u672c\u4e66\uff0c\u7136\u540e\u518d\u56de\u6765\u8bfb CSAPP \u7684\u7b2c\u4e09\u7ae0\uff0c\u57fa\u672c\u5c31\u6ca1\u4ec0\u4e48\u969c\u788d\u4e86\u3002\\n\\n\u8bfb\u5b8c\u672c\u7ae0\u53ef\u4ee5\u505a\u4e24\u4e2a lab\uff1a\\n\\n- \u4e00\u4e2a\u662f\u975e\u5e38\u51fa\u540d\u7684[Bomb Lab](https://zhuanlan.zhihu.com/p/472178808)\uff0c\u8fd9\u4e2a lab \u8003\u5bdf\u9605\u8bfb\u6c47\u7f16\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u975e\u5e38\u96be\uff0c\u4f46\u662f\u5982\u679c\u4f60\u771f\u7684\u80fd\u4e00\u884c\u4e00\u884c\u4ee3\u7801\u8bfb\u4e0b\u6765\uff0c\u5f53\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u540e\uff0c\u4f60\u9605\u8bfb\u6c47\u7f16\u4ee3\u7801\u5c06\u5982\u9605\u8bfb C \u4ee3\u7801\u822c\u4e1d\u6ed1\uff01\\n- \u53e6\u4e00\u4e2a\u662f[Attack Lab](https://zhuanlan.zhihu.com/p/476396465)\uff0c\u8fd9\u4e2a lab \u4e3b\u8981\u8003\u5bdf\u7b2c\u4e09\u7ae0\u4e2d\u8bb2\u89e3\u7684\u7f13\u51b2\u533a\u6ea2\u51fa\u539f\u7406\uff0c\u540c\u6837\u4e5f\u662f\u8bad\u7ec3\u9605\u8bfb\u6c47\u7f16\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u5bf9\u51fd\u6570\u8c03\u7528\u6808\u7684\u7406\u89e3\u3002\\n\\n### \u7b2c\u56db\u7ae0\uff1a\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\\n\\n\u8fd9\u7ae0\u4f9d\u65e7\u5f88\u96be\uff0c\u4ecb\u7ecd\u5904\u7406\u5668\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u6d41\u6c34\u7ebf\u8bbe\u8ba1\u7b49\uff0c\u539f\u4e66\u4f5c\u8005\u4e3a\u4e86\u5199\u8fd9\u7ae0\u82b1\u8d39\u4e86\u4e0d\u5c11\u5fc3\u8840\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e2a Y86-64 \u6307\u4ee4\u96c6\u6765\u4e3a\u6211\u4eec\u8bb2\u89e3\u3002\u5b66\u4e60\u8fd9\u7ae0\u4e00\u5b9a\u8981\u591a\u753b\u753b\u56fe\uff0c\u628a\u5404\u4e2a\u6307\u4ee4\u6bcf\u4e00\u9636\u6bb5\u6267\u884c\u7684\u8fc7\u7a0b\u641e\u6e05\u695a\u3002\\n\\n\u8bfb\u5b8c\u672c\u7ae0\u53ef\u4ee5\u505a[Architecture Lab](https://zhuanlan.zhihu.com/p/480380496)\uff0c\u8fd9\u4e2a lab \u4e2d\u4f5c\u8005\u5b9e\u73b0\u4e86 Y86-64 \u7684\u6a21\u62df\u5668\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u6709\u4e09\u90e8\u5206\uff1a\\n\\n- \u7528 Y86-64 \u6307\u4ee4\u96c6\u7f16\u5199\u4ee3\u7801\uff0c\u8003\u5bdf\u672c\u7ae0**\u7b2c\u4e00\u8282**\\n- \u4e3a Y86-64 \u65b0\u589e\u6307\u4ee4\uff0c\u8003\u5bdf\u672c\u7ae0**\u7b2c\u4e8c\u3001\u4e09\u8282**\\n- \u4f18\u5316 Y86-64 \u7a0b\u5e8f\uff0c\u8003\u5bdf\u672c\u7ae0**\u7b2c\u56db\u3001\u4e94\u8282**\\n\\n\u5efa\u8bae\u8bfb\u5b8c\u5bf9\u5e94\u5c0f\u8282\u540e\u5c31\u505a\u5b9e\u9a8c\u7684\u5bf9\u5e94\u90e8\u5206\uff0c\u52a0\u6df1\u7406\u89e3\u3002\u800c\u4e66\u4e0a\u8bb2\u89e3\u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\uff0c\u4e5f\u53ef\u4ee5\u6253\u5f00\u672c\u5b9e\u9a8c\u6750\u6599\u67e5\u770b\u539f\u4e66\u4f5c\u8005\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\\n\\n### **\u7b2c\u4e94\u7ae0\uff1a\u4f18\u5316\u7a0b\u5e8f\u6027\u80fd**\\n\\n\u5728\u7b2c\u56db\u7ae0\u7684\u57fa\u7840\u4e0a\u8bb2\u89e3\u4f18\u5316\u7a0b\u5e8f\u6027\u80fd\u7684\u6280\u5de7\uff0c\u5982\u5faa\u73af\u5c55\u5f00\u7b49\uff0c\u901f\u8bfb\u5373\u53ef\uff0c\u4e0d\u5fc5\u5728\u610f\u8fc7\u591a\u7ec6\u8282\u3002\\n\\n### \u7b2c\u516d\u7ae0\uff1a\u5b58\u50a8\u5668\u5c42\u6b21\u7ed3\u6784\\n\\n\u8fd9\u4e00\u7ae0\u53c8\u662f\u91cd\u70b9\uff0c\u4e3b\u8981\u8bb2\u89e3\u7f13\u5b58\u7684\u5b9e\u73b0\u53ca\u4f5c\u7528\uff0c\u96be\u70b9\u5728\u4e8e\u7406\u89e3\u8fd9\u6837\u8bbe\u8ba1\u80cc\u540e\u7684\u539f\u7406\uff0c\u5207\u8bb0\u4e0d\u8981\u6b7b\u8bb0\u786c\u80cc\\n\\n\u672c\u7ae0\u8bfb\u5b8c\u540e\uff0c\u53ef\u4ee5\u505a[Cache Lab](https://zhuanlan.zhihu.com/p/484657229)\uff0c\u8fd9\u4e5f\u662f\u975e\u5e38\u7ecf\u5178\u7684 lab\uff0c\u65e2\u8003\u5bdf\u4e86 Cache \u7684\u5b9e\u73b0\uff0c\u53c8\u8003\u5bdf\u4e86\u5982\u4f55\u7f16\u5199 Cache \u53cb\u597d\u7684\u7a0b\u5e8f\\n\\n### \u7b2c\u4e03\u7ae0\uff1a\u94fe\u63a5\\n\\n\u8bb2\u89e3\u7a0b\u5e8f\u7f16\u8bd1\u7684\u8fc7\u7a0b\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8bb2\u89e3\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u53ef\u4ee5\u7ed3\u5408\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e\u7684\u300a[\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b](https://book.douban.com/subject/3652388/)\u300b\u6765\u770b\\n\\n### \u7b2c\u516b\u7ae0\uff1a\u5f02\u5e38\u63a7\u5236\u6d41\\n\\n\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u8bb2\u89e3\u64cd\u4f5c\u7cfb\u7edf\u5f02\u5e38\u3001\u8fdb\u7a0b\u8c03\u5ea6\u3001\u4fe1\u53f7\u7b49\u6982\u5ff5\u3002\u5982\u679c\u50cf\u6211\u4e00\u6837\u6ca1\u6709\u5b66\u8fc7\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bfb\u8fd9\u4e00\u7ae0\u662f\u975e\u5e38\u5403\u529b\u7684\u3002\\n\\n\u540c\u65f6\u4e66\u4e2d\u4f1a\u6709\u5927\u91cf\u4ee3\u7801\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u8fb9\u8bfb\u8fb9\u505a\u8fd9\u7ae0\u5bf9\u5e94\u7684\u5b9e\u9a8c[Shell Lab](https://zhuanlan.zhihu.com/p/492645370)\uff0c\u6bd5\u7adf\u8fd9\u4e9b\u4ee3\u7801\u8981\u5728\u5b9e\u8df5\u4e2d\u624d\u80fd\u7406\u89e3\u3002\u672c\u7ae0\u5bf9\u5e94\u7684 Shell Lab \u5c31\u662f\u5728\u539f\u4e66\u4f5c\u8005\u5b9e\u73b0\u7684 Shell \u6846\u67b6\u4e0b\uff0c\u81ea\u5df1\u8865\u5168\u76f8\u5173\u51fd\u6570\uff0c\u5b9e\u73b0\u4f5c\u4e1a\u63a7\u5236\u529f\u80fd\\n\\n### **\u7b2c\u4e5d\u7ae0\uff1a\u865a\u62df\u5185\u5b58**\\n\\n\u8fd9\u7ae0\u7684\u5185\u5bb9\u975e\u5e38\u96be\uff0c\u5b66\u4e60\u8fd9\u7ae0\u4e4b\u524d\u53ef\u4ee5\u5148\u56de\u987e\u4e00\u4e0b\u7b2c\u4e94\u7ae0\u7684\u5185\u5bb9\uff0c\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e0d\u8981\u8f7b\u6613\u8df3\u8fc7\u4e66\u4e2d\u6a21\u62df\u5730\u5740\u7ffb\u8bd1\u7684\u9898\u76ee\uff0c\u591a\u6a21\u62df\u51e0\u904d\u624d\u80fd\u7406\u89e3\u900f\u5f7b\u3002\\n\\n\u540e\u9762**\u52a8\u6001\u5185\u5b58\u5206\u914d\u5668**\u7684\u5b9e\u73b0\u4e5f\u662f\u5f88\u96be\u7684\u5185\u5bb9\uff0c\u8981\u60f3\u5c06\u5176\u8bfb\u61c2\u8bfb\u900f\uff0c\u9700\u8981\u4e0b\u5927\u529f\u592b\u3002\u672c\u7ae0\u5bf9\u5e94\u7684 lab [Malloc Lab](https://zhuanlan.zhihu.com/p/496366818)\uff0c\u8981\u81ea\u5df1\u5b9e\u73b0`malloc`\u51fd\u6570\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u4ee3\u7801\u80fd\u529b\u8f83\u5f31\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e2a lab \u662f\u5168\u4e66\u6700\u96be\u4e5f\u662f\u6700\u8017\u65f6\u7684\uff0c\u8fd8\u597d\u5728\u53c2\u8003\u522b\u4eba\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u6210\u529f\u8dd1\u901a\u4e86\\n\\n### \u7b2c\u5341\u7ae0\uff1a\u7cfb\u7edf\u7ea7 I/O\\n\\n\u4ecb\u7ecd\u64cd\u4f5c\u7cfb\u7edf I/O \u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u611f\u89c9\u4f5c\u8005\u4ece\u8fd9\u4e00\u7ae0\u5f00\u59cb\u5c31\u5199\u5f97\u6709\u70b9\u7b80\u7565\u4e86\uff0c\u6ca1\u6709\u76f8\u5173\u7684\u7f16\u7a0b\u7ecf\u9a8c\u5f88\u96be\u8bfb\u4e0b\u53bb\\n\\n### \u7b2c\u5341\u4e00\u3001\u5341\u4e8c\u7ae0\uff1a[\u7f51\u7edc\u7f16\u7a0b](https://www.zhihu.com/search?q=\u7f51\u7edc\u7f16\u7a0b&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={\\"sourceType\\":\\"answer\\"%2C\\"sourceId\\":2655186100})\u548c\u5e76\u53d1\u7f16\u7a0b\\n\\n\u6d89\u53ca\u8ba1\u7f51\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u6ca1\u6709\u57fa\u7840\u7684\u8bdd\u5f88\u96be\u770b\u61c2\uff0c\u8fd9\u4e24\u7ae0\u4f9d\u65e7\u6709\u5927\u91cf\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u4f5c\u8005\u5b9e\u73b0\u7684 TINY Web \u670d\u52a1\u5668\uff0c\u4ee5\u53ca\u540e\u9762\u7684\u57fa\u4e8e\u9884\u7ebf\u7a0b\u5316\u7684\u670d\u52a1\u5668\uff0c\u8fd8\u662f\u5efa\u8bae\u8fb9\u5b9e\u8df5\u8fb9\u8bfb\\n\\n\u670d\u52a1\u5668\u7684\u4ee3\u7801\u5728\u672c\u7ae0\u5bf9\u5e94\u7684[Proxy Lab](https://zhuanlan.zhihu.com/p/497982541)\u4e2d\uff0c\u8fd9\u4e2a lab \u662f\u5b9e\u73b0\u4e00\u4e2a[\u591a\u7ebf\u7a0b\u5e26\u7f13\u5b58](https://www.zhihu.com/search?q=\u591a\u7ebf\u7a0b\u5e26\u7f13\u5b58&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={\\"sourceType\\":\\"answer\\"%2C\\"sourceId\\":2655186100}) Web \u4ee3\u7406\uff0c\u53ea\u8981\u80fd\u8bfb\u61c2\u539f\u4e66\u4f5c\u8005\u670d\u52a1\u5668\u7684\u5b9e\u73b0\uff0c\u518d\u7ed3\u5408 Cache Lab \u5c31\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u6765\\n\\n### \u91cd\u8bfb\u7b2c\u4e00\u7ae0\\n\\n\u8bfb\u5b8c\u6574\u672c\u4e66\uff0c\u518d\u56de\u5230\u7b2c\u4e00\u7ae0\u68b3\u7406\u5168\u4e66\u7684\u8109\u7edc\uff0c\u4f60\u4f1a\u53d1\u73b0\u6574\u4e2a\u4eba\u90fd\u901a\u900f\u4e86\uff0c\u6bd5\u7adf\u4e66\u540d\u7684\u76f4\u8bd1\u662f\u201c\u4ee5\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u89d2\u5ea6\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u7cfb\u7edf\u201d\uff0c\u6574\u672c\u4e66\u8bb2\u89e3\u7684\u65e0\u975e\u5c31\u662f\u4e00\u6bb5\u7a0b\u5e8f\u5728\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u4ece**\u51fa\u751f\u5230\u6b7b\u4ea1**\u7684\u5168\u8fc7\u7a0b\u3002\\n\\n\u7531\u6b64\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u6587\u7ae0\uff0c\u4e32\u8d77\u5168\u4e66\u7684\u77e5\u8bc6\uff0c\u8bb2\u89e3\u4e00\u6bb5 C \u8bed\u8a00\u7a0b\u5e8f\u4ece\u7f16\u8bd1\u5230\u8fd0\u884c\u7684\u5168\u8fc7\u7a0b\uff1a[\u8ba1\u7b97\u673a\u7cfb\u7edf\u6f2b\u6e38 | Hello, world \u7684\u4e00\u751f](https://zhuanlan.zhihu.com/p/513307151)\\n\\n## \u540e\u7eed\u5b66\u4e60\\n\\n\u672c\u4e66\u524d\u534a\u90e8\u5206\u5199\u7684\u975e\u5e38\u597d\uff0c\u4f46\u662f\u540e\u9762\u6d89\u53ca**\u64cd\u4f5c\u7cfb\u7edf**\uff0c\u8ba1\u7b97\u673a\u7f51\u7edc\u6982\u5ff5\u7684\u90e8\u5206\u5c31\u663e\u5f97\u6709\u4e9b\u7b80\u7565\u4e86\uff0c\u5982\u679c\u8bfb\u4e0d\u61c2\u4e0d\u5efa\u8bae\u5728\u8fd9\u4e0a\u9762\u6b7b\u78d5\uff0c\u53ef\u4ee5\u53bb\u641c\u7d22\u5176\u5b83\u5b66\u4e60\u6750\u6599\u3002\\n\\n\u6bd4\u5982\uff0c\u6211\u975e\u5e38\u5efa\u8bae\u8bfb\u5b8c\u672c\u4e66\u540e\u53bb\u5b66\u4e60MIT [\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba](https://www.zhihu.com/search?q=\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra={\\"sourceType\\":\\"answer\\"%2C\\"sourceId\\":2655186100})\u8bfe\u7a0b **6.S081: Operating System Engineering**\\n\\n\u8fd9\u95e8\u8bfe\u7a0b\u516c\u5f00\u4e86\u8be6\u5c3d\u7684\u5b66\u4e60\u8ba1\u5212\u8868\uff0c\u8bfe\u7a0b\u89c6\u9891\u4ee5\u53ca 10 \u4e2a lab\uff0c\u6559\u5b66\u4f7f\u7528\u7684 MIT \u4e09\u4e2a\u8001\u5e08\u7f16\u5199\u7684\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf xv6\uff0c\u53ca\u5176\u8bf4\u660e\u6587\u6863 [xv6 book](https://pdos.csail.mit.edu/6.828/2021/xv6/book-riscv-rev2.pdf) \u4e5f\u5168\u90e8\u5f00\u6e90\uff0c\u7b80\u76f4\u4e0d\u8981\u592a\u826f\u5fc3\uff01\\n\\n6.S081 \u53ef\u4ee5\u8bf4\u662f\u65e0\u7f1d\u8854\u63a5 CSAPP\uff0c\u6bd4\u5982\u524d\u8005\u7684\u7b2c\u4e09\u4e2a\u5b9e\u9a8c\u5c31\u662f\u5728\u5185\u6838\u4e2d**\u9875\u8868**\u76f8\u5173\u7684\u4ee3\u7801\u4e0a\u52a8\u5200\uff0c\u800c\u9875\u8868\u6b63\u662f CSAPP \u7b2c\u4e5d\u7ae0\u7684\u91cd\u70b9\uff0c\u8fd8\u6709\u7b2c\u4e94\u4e2a\u5b9e\u9a8c COW \u548c\u7b2c\u5341\u4e2a\u5b9e\u9a8c mmap \u90fd\u662f\u5728 CSAPP \u4e2d\u6709\u8bb2\u89e3\u4f46\u662f\u5e76\u4e0d\u6df1\u5165\u7684\u5185\u5bb9\u3002\\n\\n\u8bfe\u7a0b\u4e3b\u9875\uff1a[6.S081 / Fall 2021](https://pdos.csail.mit.edu/6.828/2021/schedule.html)\\n\\n\u5bf9\u4e8e\u8ba1\u7f51\uff0c\u53ef\u4ee5\u5b66\u4e60\u65af\u5766\u798f\u7684\u8bfe\u7a0b **CS 144: Introduction to Computer Networking**\uff0c\u8be5\u8bfe\u7a0b\u662f\u7528 C++ \u5b9e\u73b0\u4e00\u4e2aTCP\uff0c\u53c2\u8003\u6559\u6750\u4e3a\u300a\u8ba1\u7b97\u673a\u7f51\u7edc\uff1a\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\u300b\\n\\n\u8bfe\u7a0b\u4e3b\u9875\uff1a[CS 144: Introduction to Computer Networking](https://cs144.github.io/)"}]}')}}]);