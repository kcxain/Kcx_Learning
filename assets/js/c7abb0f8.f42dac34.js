"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[7007],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5561:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={authors:"kcxain",tags:["NLP","deep learning"]},o="BERT\u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790",l={permalink:"/blog/2022/11/04/bert-code",editUrl:"https://github.com/kcxain/Kcx_Learning/tree/master/blog/2022-11-04-bert-code.md",source:"@site/blog/2022-11-04-bert-code.md",title:"BERT\u539f\u7406\u4e0e\u4ee3\u7801\u89e3\u6790",description:"\u8bba\u6587\uff1aBERT: Pre-training of Deep Bidirectional Transformers for Language Understanding",date:"2022-11-04T00:00:00.000Z",formattedDate:"2022\u5e7411\u67084\u65e5",tags:[{label:"NLP",permalink:"/blog/tags/nlp"},{label:"deep learning",permalink:"/blog/tags/deep-learning"}],readingTime:2.315,hasTruncateMarker:!0,authors:[{name:"Kcxain",url:"https://github.com/kcxain",email:"kcxain@gmail.com",imageURL:"https://github.com/kcxain.png",key:"kcxain"}],frontMatter:{authors:"kcxain",tags:["NLP","deep learning"]},prevItem:{title:"DSTC11-Track5 \u7ade\u8d5b\u603b\u7ed3",permalink:"/blog/2023/04/10/dstc"}},s={authorsImageUrls:[void 0]},c=[{value:"\u6a21\u578b\u7ed3\u6784",id:"\u6a21\u578b\u7ed3\u6784",level:2},{value:"\u8f93\u5165\u5c42",id:"\u8f93\u5165\u5c42",level:3},{value:"\u7f16\u7801\u5c42",id:"\u7f16\u7801\u5c42",level:3},{value:"\u9884\u8bad\u7ec3",id:"\u9884\u8bad\u7ec3",level:2},{value:"Task 1#: Masked LM",id:"task-1-masked-lm",level:3},{value:"Task 2#: Next Sentence Prediction",id:"task-2-next-sentence-prediction",level:3},{value:"\u5fae\u8c03",id:"\u5fae\u8c03",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(p,(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u8bba\u6587\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1810.04805"},"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding")),(0,a.kt)("p",null,"\u6a21\u578b\u7531\u8f93\u5165\u5c42\uff08Embedding\uff09\uff0c\u7f16\u7801\u5c42\uff08Transformer-Encoder\uff09\u548c\u8f93\u51fa\u5c42\u4e09\u90e8\u5206\u7ec4\u6210\u3002"),(0,a.kt)("h2",{id:"\u6a21\u578b\u7ed3\u6784"},"\u6a21\u578b\u7ed3\u6784"),(0,a.kt)("h3",{id:"\u8f93\u5165\u5c42"},"\u8f93\u5165\u5c42"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(9554).Z,width:"863",height:"258"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Token Embedding\uff1a\u8bcd\u5411\u91cf\uff0c\u7b2c\u4e00\u4e2a Token \u662f ","[CLS]","\uff0c\u4f5c\u4e3a\u6574\u4e2a\u53e5\u5b50\u7684\u8868\u5f81\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u5206\u7c7b\u7caa\u6c61"),(0,a.kt)("li",{parentName:"ul"},"Segment Embedding\uff1a\u7528\u6765\u533a\u5206\u4e24\u79cd\u53e5\u5b50"),(0,a.kt)("li",{parentName:"ul"},"Position Embedding\uff1a\u4e0e transformer \u7684 position encoding \u4e0d\u540c\uff0c\u8fd9\u91cc\u7684 Position Embedding \u662f\u81ea\u5df1\u5b66\u4e60\u7684")),(0,a.kt)("h3",{id:"\u7f16\u7801\u5c42"},"\u7f16\u7801\u5c42"),(0,a.kt)("p",null,"BERT \u4ec5\u4ec5\u4f7f\u7528 transformer \u7684 encoder\uff0c"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(38269).Z,width:"697",height:"1015"})),(0,a.kt)("h2",{id:"\u9884\u8bad\u7ec3"},"\u9884\u8bad\u7ec3"),(0,a.kt)("h3",{id:"task-1-masked-lm"},"Task 1#: Masked LM"),(0,a.kt)("p",null,"\u9996\u5148\uff0c\u4f7f\u7528 ","[MASK]"," \u968f\u673a mask \u6389 15% \u7684 token\uff0c\u4f46\u662f\u5728\u662f\u9884\u6d4b\u4e2d\uff0c\u6a21\u578b\u65f6\u9047\u4e0d\u5230 ","[MASK]"," \u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u907f\u514d\u5f71\u54cd\u6a21\u578b\uff0c\u5f53\u9009\u5b9a\u4e00\u4e2a\u5f85 mask \u7684\u8bcd\u65f6\uff0c\u4f7f\u7528\u5982\u4e0b\u7b56\u7565\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"80% \u7684\u6982\u7387\u5c06\u5176\u66ff\u6362\u4e3a","[MASK]"),(0,a.kt)("li",{parentName:"ol"},"10% \u7684\u6982\u7387\u5c06\u5176\u968f\u673a\u66ff\u6362\u4e3a\u5176\u5b83 token"),(0,a.kt)("li",{parentName:"ol"},"10% \u7684\u6982\u7387\u4e0d\u6539\u53d8\u5b83")),(0,a.kt)("p",null,"\u505a MLM \u8bad\u7ec3\u65f6\uff0c\u5c31\u662f\u5c06 mask \u6389\u7684 token \u7684\u6700\u540e\u4e00\u5c42\u9690\u85cf\u5c42\u5411\u91cf\u8f93\u5165\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\u7136\u540e\u5728\u6574\u4e2a\u8bcd\u8868\u4e0a\u505a softmax\uff0c\u5373\u5f97\u5230\u4e86\u6bcf\u4e2a\u8bcd\u7684\u6982\u7387\uff0c\u635f\u5931\u51fd\u6570\u7528\u4ea4\u53c9\u71b5\u3002"),(0,a.kt)("p",null,"\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class BertLMPredictionHead(nn.Module):\n    def __init__(self, config):\n        super().__init__()\n        self.transform = BertPredictionHeadTransform(config)\n\n        # The output weights are the same as the input embeddings, but there is\n        # an output-only bias for each token.\n        self.decoder = nn.Linear(config.hidden_size, config.vocab_size, bias=False)\n\n        self.bias = nn.Parameter(torch.zeros(config.vocab_size))\n\n        # Need a link between the two variables so that the bias is correctly resized with `resize_token_embeddings`\n        self.decoder.bias = self.bias\n\n    def forward(self, hidden_states):\n        hidden_states = self.transform(hidden_states)\n        hidden_states = self.decoder(hidden_states)\n        return hidden_states\n")),(0,a.kt)("h3",{id:"task-2-next-sentence-prediction"},"Task 2#: Next Sentence Prediction"),(0,a.kt)("p",null,"\u56e0\u4e3a\u6d89\u53ca\u5230 QA \u548c NLI \u4e4b\u7c7b\u7684\u4efb\u52a1\uff0c\u589e\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u9884\u8bad\u7ec3\u4efb\u52a1\uff0c\u76ee\u7684\u662f\u8ba9\u6a21\u578b\u7406\u89e3\u4e24\u4e2a\u53e5\u5b50\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u8bad\u7ec3\u7684\u8f93\u5165\u662f\u53e5\u5b50 A \u548c B\uff0cB \u6709\u4e00\u534a\u7684\u51e0\u7387\u662fA\u7684\u4e0b\u4e00\u53e5\uff0c\u8f93\u5165\u8fd9\u4e24\u4e2a\u53e5\u5b50\uff0c\u6a21\u578b\u9884\u6d4b B \u662f\u4e0d\u662f A \u7684\u4e0b\u4e00\u53e5\u3002"),(0,a.kt)("p",null,"\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u4efb\u52a1\uff0c\u4f7f\u7528 ","[CLS]"," \u8f93\u5165\u5230\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\u7136\u540e\u505a softmax \u5373\u53ef\u3002"),(0,a.kt)("h2",{id:"\u5fae\u8c03"},"\u5fae\u8c03"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(57065).Z,width:"802",height:"790"})))}u.isMDXComponent=!0},9554:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/image-20230612231726961-9dabb48899212e3eaf8bc804f6c9605c.png"},38269:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/image-20230612232548339-b160d9b866c472bdcd4c9997c52fbdc9.png"},57065:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/image-20230612235434891-c6a0a542d4eb7fd1af1732b268263e33.png"}}]);