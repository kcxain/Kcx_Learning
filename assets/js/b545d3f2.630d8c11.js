"use strict";(self.webpackChunkcs_notes=self.webpackChunkcs_notes||[]).push([[2888],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),o=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=o(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=o(n),k=a,c=u["".concat(s,".").concat(k)]||u[k]||m[k]||l;return n?i.createElement(c,r(r({ref:t},d),{},{components:n})):i.createElement(c,r({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,r[1]=p;for(var o=2;o<l;o++)r[o]=n[o];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},71201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var i=n(87462),a=(n(67294),n(3905));const l={},r="Lab7-Shell Lab \u6df1\u5165\u89e3\u6790",p={unversionedId:"system/CSAPP/Lab07-Shell_Lab",id:"system/CSAPP/Lab07-Shell_Lab",title:"Lab7-Shell Lab \u6df1\u5165\u89e3\u6790",description:"\u5b9e\u9a8c\u6982\u89c8",source:"@site/docs/system/CSAPP/Lab07-Shell_Lab.md",sourceDirName:"system/CSAPP",slug:"/system/CSAPP/Lab07-Shell_Lab",permalink:"/CS-Notes/system/CSAPP/Lab07-Shell_Lab",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/system/CSAPP/Lab07-Shell_Lab.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lab6-Performance Lab \u6df1\u5165\u89e3\u6790",permalink:"/CS-Notes/system/CSAPP/Lab06-Performance_Lab"},next:{title:"Lab8-Malloc Lab \u6df1\u5165\u89e3\u6790",permalink:"/CS-Notes/system/CSAPP/Lab08-Malloc_Lab"}},s={},o=[{value:"\u5b9e\u9a8c\u6982\u89c8",id:"\u5b9e\u9a8c\u6982\u89c8",level:2},{value:"\u5b9e\u9a8c\u524d",id:"\u5b9e\u9a8c\u524d",level:2},{value:"\u56de\u987e\uff1a\u56de\u6536\u5b50\u8fdb\u7a0b",id:"\u56de\u987e\u56de\u6536\u5b50\u8fdb\u7a0b",level:3},{value:"\u56de\u987e\uff1a\u5e76\u53d1\u7f16\u7a0b\u539f\u5219",id:"\u56de\u987e\u5e76\u53d1\u7f16\u7a0b\u539f\u5219",level:3},{value:"\u56de\u987e\uff1a\u7ade\u4e89",id:"\u56de\u987e\u7ade\u4e89",level:3},{value:"\u9519\u8bef\u5904\u7406\u5305\u88c5\u51fd\u6570",id:"\u9519\u8bef\u5904\u7406\u5305\u88c5\u51fd\u6570",level:2},{value:"eval",id:"eval",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u8bf4\u660e",id:"\u8bf4\u660e",level:3},{value:"builtin_cmd",id:"builtin_cmd",level:2},{value:"do_bgfg",id:"do_bgfg",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801-1",level:3},{value:"\u8bf4\u660e",id:"\u8bf4\u660e-1",level:3},{value:"waitfg",id:"waitfg",level:2},{value:"\u56de\u987e\uff1a\u663e\u5f0f\u5730\u7b49\u5f85\u4fe1\u53f7",id:"\u56de\u987e\u663e\u5f0f\u5730\u7b49\u5f85\u4fe1\u53f7",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801-2",level:3},{value:"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u5b9e\u73b0",id:"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u5b9e\u73b0",level:2},{value:"sigchld_handler",id:"sigchld_handler",level:3},{value:"sigint_handler",id:"sigint_handler",level:3},{value:"sigstp_handler",id:"sigstp_handler",level:3},{value:"tsh \u6d4b\u8bd5",id:"tsh-\u6d4b\u8bd5",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],d={toc:o},u="wrapper";function m(e){let{components:t,...l}=e;return(0,a.kt)(u,(0,i.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lab7-shell-lab-\u6df1\u5165\u89e3\u6790"},"Lab7-Shell Lab \u6df1\u5165\u89e3\u6790"),(0,a.kt)("h2",{id:"\u5b9e\u9a8c\u6982\u89c8"},"\u5b9e\u9a8c\u6982\u89c8"),(0,a.kt)("p",null,"Shell Lab \u8981\u6c42\u5b9e\u73b0\u4e00\u4e2a\u5e26\u6709\u4f5c\u4e1a\u63a7\u5236\u7684 Unix Shell \u7a0b\u5e8f\uff0c\u9700\u8981\u8003\u8651\u57fa\u7840\u7684\u5e76\u53d1\uff0c\u8fdb\u7a0b\u63a7\u5236\u4ee5\u53ca\u4fe1\u53f7\u548c\u4fe1\u53f7\u5904\u7406\u3002\u505a\u8fd9\u4e2a\u5b9e\u9a8c\u4e4b\u524d\u4e00\u5b9a\u8981\u5c06 CSAPP \u7684\u7b2c\u516b\u7ae0\uff08\u5f02\u5e38\u63a7\u5236\u6d41\uff09\u4ed4\u7ec6\u7814\u8bfb\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eval"),"\uff1a\u89e3\u6790\u547d\u4ee4\u884c ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 70 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"builtin_cmd"),"\uff1a\u68c0\u6d4b\u662f\u5426\u4e3a\u5185\u7f6e\u547d\u4ee4",(0,a.kt)("inlineCode",{parentName:"li"},"quit"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"fg"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"bg"),"\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"jobs")," ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 25 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"do_bgfg"),"\uff1a\u5b9e\u73b0\u5185\u7f6e\u547d\u4ee4",(0,a.kt)("inlineCode",{parentName:"li"},"bg"),"\u548c",(0,a.kt)("inlineCode",{parentName:"li"},"fg")," ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 50 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"waitfg"),"\uff1a\u7b49\u5f85\u524d\u53f0\u4f5c\u4e1a\u6267\u884c\u5b8c\u6210 ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 20 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sigchld_handler"),"\uff1a\u5904\u7406",(0,a.kt)("inlineCode",{parentName:"li"},"SIGCHLD"),"\u4fe1\u53f7\uff0c\u5373\u5b50\u8fdb\u7a0b\u505c\u6b62\u6216\u8005\u7ec8\u6b62 ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 80 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sigint_handler"),"\uff1a\u5904\u7406",(0,a.kt)("inlineCode",{parentName:"li"},"SIGINT"),"\u4fe1\u53f7\uff0c\u5373\u6765\u81ea\u952e\u76d8\u7684\u4e2d\u65ad",(0,a.kt)("inlineCode",{parentName:"li"},"ctrl-c")," ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 15 \u884c]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sigtstp_handler"),"\uff1a\u5904\u7406",(0,a.kt)("inlineCode",{parentName:"li"},"SIGTSTP"),"\u4fe1\u53f7\uff0c\u5373\u6765\u81ea\u7ec8\u7aef\u7684\u505c\u6b62\u4fe1\u53f7 ",(0,a.kt)("strong",{parentName:"li"},"[\u7ea6 15 \u884c]"))),(0,a.kt)("p",null,"\u4f5c\u8005\u63d0\u4f9b\u7684\u5e2e\u52a9\u51fd\u6570\u53ca\u529f\u80fd\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"/* Here are helper routines that we've provided for you */\nint parseline(const char *cmdline, char **argv);  //\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5982\u679c\u540e\u53f0\u8fd0\u884c\u5219\u8fd4\u56de 1\nvoid sigquit_handler(int sig);\n\nvoid clearjob(struct job_t *job);               //\u6e05\u9664job\u7ed3\u6784\u4f53\nvoid initjobs(struct job_t *jobs);              //\u521d\u59cb\u5316jobs\u5217\u8868\nint maxjid(struct job_t *jobs);                 //\u8fd4\u56dejobs\u5217\u8868\u4e2djid\u6700\u5927\u503c\nint addjob(struct job_t *jobs, pid_t pid, int state, char *cmdline);    //\u5728jobs\u5217\u8868\u4e2d\u6dfb\u52a0job\nint deletejob(struct job_t *jobs, pid_t pid);   //\u5728jobs\u5217\u8868\u4e2d\u5220\u9664pid\u5bf9\u5e94\u7684job\npid_t fgpid(struct job_t *jobs);                //\u8fd4\u56de\u524d\u53f0\u8fd0\u884c\u7684job\u7684pid\nstruct job_t *getjobpid(struct job_t *jobs, pid_t pid); //\u8fd4\u56de\u5bf9\u5e94pid\u7684job\nstruct job_t *getjobjid(struct job_t *jobs, int jid);   //\u8fd4\u56de\u5bf9\u5e94jid\u7684job\nint pid2jid(pid_t pid);     //\u8fd4\u56de\u5bf9\u5e94pid\u7684job\u7684jid\nvoid listjobs(struct job_t *jobs);  //\u6253\u5370jobs\u5217\u8868\n\nvoid usage(void);   //\u5e2e\u52a9\u4fe1\u606f\nvoid unix_error(char *msg); //\u9519\u8bef\u4fe1\u606f\nvoid app_error(char *msg);\ntypedef void handler_t(int);\nhandler_t *Signal(int signum, handler_t *handler);\n")),(0,a.kt)("p",null,"CMU \u6587\u6863\u7684\u4e00\u4e9b\u8bf4\u660e\u4e0e\u8981\u6c42\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Shell \u7684\u63d0\u793a\u6807\u8bb0\u7b26\u4e3a "tsh> "'),(0,a.kt)("li",{parentName:"ul"},"\u7528\u6237\u952e\u5165\u7684\u547d\u4ee4\u884c\u5e94\u5305\u62ec\u547d\u4ee4\u540d\u79f0\u548c 0 \u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff0c\u6240\u6709\u53c2\u6570\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5206\u9694\u3002\u5982\u679c name \u662f\u4e00\u4e2a\u5185\u7f6e\u547d\u4ee4\uff0c\u5219 tsh \u5e94\u8be5\u7acb\u5373\u5904\u7406\u5b83\u5e76\u7b49\u5f85\u4e0b\u4e00\u4e2a\u547d\u4ee4\u884c\u3002\u5426\u5219\uff0ctsh \u5047\u5b9a\u8be5\u540d\u79f0\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84\uff0c\u5e76\u5728\u5728\u4e00\u4e2a\u521d\u59cb\u5b50\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u52a0\u8f7d\u5e76\u8fd0\u884c"),(0,a.kt)("li",{parentName:"ul"},"tsh \u4e0d\u9700\u8981\u652f\u6301\u7ba1\u9053\uff08|\uff09\u6216 I/O \u91cd\u5b9a\u5411\uff08< \u548c >\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u952e\u5165 ctrl-c\uff08ctrl-z\uff09\u5e94\u8be5\u4f1a\u53d1\u9001\u4e00\u4e2a SIGINT\uff08SIGTSTP\uff09\u4fe1\u53f7\u7ed9\u5f53\u524d\u7684\u524d\u53f0\u4f5c\u4e1a\u4ee5\u53ca\u5b83\u7684\u5b50\u8fdb\u7a0b\u3002\u5982\u679c\u6ca1\u6709\u524d\u53f0\u4f5c\u4e1a\uff0c\u5219\u8be5\u4fe1\u53f7\u5e94\u8be5\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u547d\u4ee4\u884c\u4ee5 \uff06 \u7ed3\u675f\uff0c\u5219 tsh \u5e94\u8be5\u5728\u540e\u53f0\u8fd0\u884c\u8be5\u4f5c\u4e1a\u3002\u5426\u5219\uff0c\u5b83\u5e94\u8be5\u5728\u524d\u53f0\u8fd0\u884c"),(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u4f5c\u4e1a\u90fd\u53ef\u4ee5\u7531\u4e00\u4e2a\u8fdb\u7a0b ID\uff08PID\uff09\u6216\u4e00\u4e2a\u4f5c\u4e1a ID\uff08JID\uff09\u6807\u8bc6\uff0c\u8be5 ID \u662f\u4e00\u4e2a\u7531 tsh \u5206\u914d\u7684\u6b63\u6574\u6570\u3002 JID\u5e94\u8be5\u5728\u547d\u4ee4\u884c\u4e0a\u4ee5\u524d\u7f00 \u201c\uff05\u201d \u8868\u793a\u3002\u4f8b\u5982\uff0c\u201c\uff055\u201d \u8868\u793a JID 5\uff0c\u201c 5\u201d \u8868\u793a PID 5"),(0,a.kt)("li",{parentName:"ul"},"tsh \u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u547d\u4ee4\uff1a",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"quit\uff1a\u7ec8\u6b62 tsh \u7a0b\u5e8f\u3002"),(0,a.kt)("li",{parentName:"ul"},"jobs\uff1a\u5217\u51fa\u6240\u6709\u540e\u53f0\u4f5c\u4e1a"),(0,a.kt)("li",{parentName:"ul"},"bg job\uff1a\u5411\u4f5c\u4e1a\u5176\u53d1\u9001 SIGCONT \u4fe1\u53f7\u6765\u91cd\u65b0\u542f\u52a8\uff0c\u7136\u540e\u5728\u540e\u53f0\u8fd0\u884c"),(0,a.kt)("li",{parentName:"ul"},"fg  job\uff1a\u5411\u4f5c\u4e1a\u53d1\u9001 SIGCONT \u4fe1\u53f7\u6765\u91cd\u65b0\u542f\u52a8\uff0c\u7136\u540e\u5728\u524d\u53f0\u8fd0\u884c"))),(0,a.kt)("li",{parentName:"ul"},"tsh \u5fc5\u987b\u56de\u6536\u6240\u6709\u7684\u50f5\u6b7b\u8fdb\u7a0b")),(0,a.kt)("h2",{id:"\u5b9e\u9a8c\u524d"},"\u5b9e\u9a8c\u524d"),(0,a.kt)("p",null,"\u5728\u6b63\u5f0f\u5b9e\u9a8c\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u662f\u56de\u987e\u4e00\u4e0b\u76f8\u5173\u77e5\u8bc6"),(0,a.kt)("h3",{id:"\u56de\u987e\u56de\u6536\u5b50\u8fdb\u7a0b"},"\u56de\u987e\uff1a\u56de\u6536\u5b50\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u4e00\u4e2a\u7ec8\u6b62\u4e86\u4f46\u662f\u8fd8\u672a\u88ab\u56de\u6536\u7684\u8fdb\u7a0b\u79f0\u4e3a\u50f5\u6b7b\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u6bd4\u5982 Shell\uff09\u6765\u8bf4\uff0c\u5185\u6838\u4e0d\u4f1a\u5b89\u6392",(0,a.kt)("inlineCode",{parentName:"p"},"init"),"\u8fdb\u7a0b\u53bb\u56de\u6536\u50f5\u6b7b\u8fdb\u7a0b\uff0c\u800c\u5b83\u867d\u4e0d\u8fd0\u884c\u5374\u4ecd\u7136\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u56e0\u6b64\u5b9e\u9a8c\u8981\u6c42\u6211\u4eec\u56de\u6536\u6240\u6709\u7684\u50f5\u6b7b\u8fdb\u7a0b\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"waitpid"),"\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u51fd\u6570\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"waitpid"),"\u51fd\u6570\u6765\u7b49\u5f85\u5b83\u7684\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u6216\u505c\u6b62\uff0c\u4ece\u800c\u56de\u6536\u5b50\u8fdb\u7a0b\uff0c\u5728\u672c\u5b9e\u9a8c\u5927\u91cf\u7528\u5230\uff0c\u6211\u4eec\u5fc5\u987b\u5b66\u4e60\u5b83\u7684\u7528\u6cd5\uff1a"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u6302\u8d77\u8c03\u7528\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u76f4\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"pid"),"\u5bf9\u5e94\u7684\u7b49\u5f85\u96c6\u5408\u7684\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7684\u6539\u53d8\u624d\u8fd4\u56de\uff0c\u5305\u62ec\u4e09\u79cd\u72b6\u6001\u7684\u6539\u53d8\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5b50\u8fdb\u7a0b\u7ec8\u6b62"),(0,a.kt)("li",{parentName:"ul"},"\u5b50\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7\u505c\u6b62"),(0,a.kt)("li",{parentName:"ul"},"\u5b50\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7\u91cd\u65b0\u6267\u884c")),(0,a.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5728\u8c03\u7528\u4e4b\u524d\u5c31\u5df2\u7ecf\u7ec8\u6b62\u4e86\uff0c\u90a3\u4e48\u51fd\u6570\u5c31\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u5426\u5219\uff0c\u5c31\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6539\u53d8\u72b6\u6001\u3002"),(0,a.kt)("p",null,"\u7b49\u5f85\u96c6\u5408\u4ee5\u53ca\u76d1\u6d4b\u90a3\u4e9b\u72b6\u6001\u90fd\u662f\u7528\u51fd\u6570\u7684\u53c2\u6570\u786e\u5b9a\u7684\uff0c\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"pid_t waitpid(pid_t pid, int *wstatus, int options);\n")),(0,a.kt)("p",null,"\u5404\u53c2\u6570\u542b\u4e49\u53ca\u4f7f\u7528"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"pid\uff1a\u5224\u5b9a\u7b49\u5f85\u96c6\u5408\u6210\u5458")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"pid > 0 : \u7b49\u5f85\u96c6\u5408\u4e3a pid \u5bf9\u5e94\u7684\u5355\u72ec\u5b50\u8fdb\u7a0b"),(0,a.kt)("li",{parentName:"ul"},"pid = -1: \u7b49\u5f85\u96c6\u5408\u4e3a\u6240\u6709\u7684\u5b50\u8fdb\u7a0b"),(0,a.kt)("li",{parentName:"ul"},"pid < -1: \u7b49\u5f85\u96c6\u5408\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0cID \u4e3a pid \u7684\u7edd\u5bf9\u503c"),(0,a.kt)("li",{parentName:"ul"},"pid = 0 : \u7b49\u5f85\u96c6\u5408\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\uff0cID \u4e3a\u8c03\u7528\u8fdb\u7a0b\u7684 pid"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"options\uff1a\u4fee\u6539\u9ed8\u8ba4\u884c\u4e3a")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"WNOHANG\uff1a\u96c6\u5408\u4e2d\u4efb\u4f55\u5b50\u8fdb\u7a0b\u90fd\u672a\u7ec8\u6b62\uff0c\u7acb\u5373\u8fd4\u56de 0"),(0,a.kt)("li",{parentName:"ul"},"WUNTRACED\uff1a\u963b\u585e\uff0c\u76f4\u5230\u4e00\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u6216\u505c\u6b62\uff0c\u8fd4\u56de PID"),(0,a.kt)("li",{parentName:"ul"},"WCONTINUED\uff1a\u963b\u585e\uff0c\u76f4\u5230\u4e00\u4e2a\u505c\u6b62\u7684\u8fdb\u7a0b\u6536\u5230 SIGCONT \u4fe1\u53f7\u91cd\u65b0\u5f00\u59cb\u6267\u884c"),(0,a.kt)("li",{parentName:"ul"},"\u4e5f\u53ef\u4ee5\u7528\u6216\u8fd0\u7b97\u628a options \u7684\u9009\u9879\u7ec4\u5408\u8d77\u6765\u3002\u4f8b\u5982 WNOHANG | WUNTRACED \u8868\u793a\uff1a\u7acb\u5373\u8fd4\u56de\uff0c\u5982\u679c\u7b49\u5f85\u96c6\u5408\u4e2d\u7684\u5b50\u8fdb\u7a0b\u90fd\u6ca1\u6709\u88ab\u505c\u804c\u6216\u7ec8\u6b62\uff0c\u5219\u8fd4\u56de\u503c\u4e3a 0\uff1b\u5982\u679c\u6709\u4e00\u4e2a\u505c\u6b62\u6216\u7ec8\u6b62\uff0c\u5219\u8fd4\u56de\u503c\u4e3a\u8be5\u5b50\u8fdb\u7a0b\u7684 PID"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"statusp\uff1a\u68c0\u67e5\u5df2\u56de\u6536\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"waitpid \u4f1a\u5728 status \u4e2d\u653e\u4e0a\u5173\u4e8e\u5bfc\u81f4\u8fd4\u56de\u7684\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u7ffb\u8bd1\u4e86")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{src:n(74090).Z,width:"772",height:"952"})))),(0,a.kt)("h3",{id:"\u56de\u987e\u5e76\u53d1\u7f16\u7a0b\u539f\u5219"},"\u56de\u987e\uff1a\u5e76\u53d1\u7f16\u7a0b\u539f\u5219"),(0,a.kt)("p",null,"\u8fd9\u91cc\u4ec5\u5217\u51fa\u5728\u672c\u5b9e\u9a8c\u4e2d\u7528\u5230\u7684\u539f\u5219\uff0c\u540e\u9762\u7684\u89e3\u6790\u4e5f\u4f1a\u5927\u91cf\u63d0\u53ca"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6ce8\u610f\u4fdd\u5b58\u548c\u6062\u590d errno\u3002\u5f88\u591a\u51fd\u6570\u4f1a\u5728\u51fa\u9519\u8fd4\u56de\u5f0f\u8bbe\u7f6e errno\uff0c\u5728\u5904\u7406\u7a0b\u5e8f\u4e2d\u8c03\u7528\u8fd9\u6837\u7684\u51fd\u6570\u53ef\u80fd\u4f1a\u5e72\u6270\u4e3b\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u4f9d\u8d56\u4e8e errno \u7684\u90e8\u5206\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u8fdb\u5165\u5904\u7406\u51fd\u6570\u65f6\u7528\u5c40\u90e8\u53d8\u91cf\u4fdd\u5b58\u5b83\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\u518d\u5c06\u5176\u6062\u590d"),(0,a.kt)("li",{parentName:"ol"},"\u8bbf\u95ee\u5168\u5c40\u6570\u636e\u65f6\uff0c\u963b\u585e\u6240\u6709\u4fe1\u53f7\u3002\u8fd9\u91cc\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4e0d\u518d\u89e3\u91ca\u4e86"),(0,a.kt)("li",{parentName:"ol"},"\u4e0d\u53ef\u4ee5\u7528\u4fe1\u53f7\u6765\u5bf9\u5176\u5b83\u8fdb\u7a0b\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u8ba1\u6570\u3002\u672a\u5904\u7406\u7684\u4fe1\u53f7\u662f\u4e0d\u6392\u961f\u7684\uff0c\u5373\u6bcf\u79cd\u7c7b\u578b\u7684\u4fe1\u53f7\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u5f85\u5904\u7406\u4fe1\u53f7\u3002",(0,a.kt)("strong",{parentName:"li"},"\u4e3e\u4f8b"),"\uff1a\u5982\u679c\u7236\u8fdb\u7a0b\u5c06\u8981\u63a5\u53d7\u4e09\u4e2a\u76f8\u540c\u7684\u4fe1\u53f7\uff0c\u5f53\u5904\u7406\u7a0b\u5e8f\u8fd8\u5728\u5904\u7406\u4e00\u4e2a\u4fe1\u53f7\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u4fe1\u53f7\u5c31\u4f1a\u52a0\u5165\u5f85\u5904\u7406\u4fe1\u53f7\u96c6\u5408\uff0c\u5982\u679c\u6b64\u65f6\u7b2c\u4e09\u4e2a\u4fe1\u53f7\u5230\u8fbe\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u7b80\u5355\u5730\u4e22\u5f03\uff0c\u4ece\u800c\u51fa\u73b0\u95ee\u9898"),(0,a.kt)("li",{parentName:"ol"},"\u6ce8\u610f\u8003\u8651\u540c\u6b65\u9519\u8bef\uff1a\u7ade\u4e89\u3002\u6211\u4eec\u5728\u4e0b\u9762\u5355\u72ec\u5f00\u4e00\u8282\u8bf4\u660e")),(0,a.kt)("h3",{id:"\u56de\u987e\u7ade\u4e89"},"\u56de\u987e\uff1a\u7ade\u4e89"),(0,a.kt)("p",null,"\u770b\u5982\u4e0b\u4f8b\u5b50\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(84250).Z,width:"841",height:"897"})),(0,a.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a Unix Shell \u7684\u6846\u67b6\uff0c\u7236\u8fdb\u7a0b\u5728\u4e00\u4e2a\u5168\u5c40\u5217\u8868\u4e2d\u8bb0\u5f55\u5b50\u8fdb\u7a0b\uff0c\u5e76\u8bbe\u7f6e\u4e86\u4e00\u4e2a SIGCHLD \u5904\u7406\u7a0b\u5e8f\u6765\u56de\u6536\u5b50\u8fdb\u7a0b\uff0c\u4e4d\u4e00\u770b\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u8003\u8651\u5982\u4e0b\u53ef\u80fd\u7684\u4e8b\u4ef6\u5e8f\u5217\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7b2c 29 \u884c\uff0c\u521b\u5efa\u5b50\u8fdb\u7a0b\u8fd0\u884c"),(0,a.kt)("li",{parentName:"ul"},"\u5047\u8bbe\u5b50\u8fdb\u7a0b\u5728\u7236\u8fdb\u7a0b\u8fd0\u884c\u5230 32 \u884c\uff0c\u5373\u8fd0\u884c",(0,a.kt)("inlineCode",{parentName:"li"},"addjob"),"\u51fd\u6570\u4e4b\u524d\u5c31\u7ed3\u675f\u4e86\uff0c\u5e76\u53d1\u9001\u4e00\u4e2a SIGCHLD \u4fe1\u53f7"),(0,a.kt)("li",{parentName:"ul"},"\u7236\u8fdb\u7a0b\u63a5\u6536\u5230\u4fe1\u53f7\uff0c\u8fd0\u884c\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\uff0c\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"deletejob"),"\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a",(0,a.kt)("inlineCode",{parentName:"li"},"job"),"\u672c\u6765\u5c31\u6ca1\u6709\u6dfb\u52a0\u5165\u5217\u8868"),(0,a.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u7236\u8fdb\u7a0b\uff0c\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"addjob"),"\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u5e76\u56de\u6536\u4e86\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"job"),"\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86")),(0,a.kt)("p",null,"\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fd9\u91cc\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"deletejob"),"\u51fd\u6570\u7684\u8c03\u7528\u53d1\u751f\u5728\u4e86",(0,a.kt)("inlineCode",{parentName:"p"},"addjos"),"\u4e4b\u524d\uff0c\u5bfc\u81f4\u9519\u8bef\u3002\u6211\u4eec\u79f0",(0,a.kt)("inlineCode",{parentName:"p"},"addjob"),"\u548c",(0,a.kt)("inlineCode",{parentName:"p"},"deletejob"),"\u5b58\u5728\u7ade\u4e89\u3002"),(0,a.kt)("p",null,"\u89e3\u51b3\u529e\u6cd5\u4e5f\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u4e86\uff0c\u5373\u5728\u7236\u8fdb\u7a0b",(0,a.kt)("inlineCode",{parentName:"p"},"folk"),"\u4e4b\u524d\u5c31\u963b\u585e SIGCHLD \u4fe1\u53f7\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5134).Z,width:"803",height:"895"})),(0,a.kt)("p",null,"\u8fd9\u6837\uff0c\u7236\u8fdb\u7a0b\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"fork"),"\u540e\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"addjob"),"\u524d\u4e00\u5b9a\u4e0d\u4f1a\u5904\u7406 SIGCHLD \u4fe1\u53f7\uff0c\u4fdd\u8bc1\u4e86",(0,a.kt)("inlineCode",{parentName:"p"},"addjob"),"\u4e00\u5b9a\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"deletejob"),"\u4e4b\u524d\u6267\u884c"),(0,a.kt)("h2",{id:"\u9519\u8bef\u5904\u7406\u5305\u88c5\u51fd\u6570"},"\u9519\u8bef\u5904\u7406\u5305\u88c5\u51fd\u6570"),(0,a.kt)("p",null,"\u5f53 Unix \u7cfb\u7edf\u53ca\u51fd\u6570\u9047\u5230\u9519\u8bef\u65f6\uff0c\u5b83\u4eec\u901a\u5e38\u4f1a\u8fd4\u56de -1\uff0c\u5e76\u8bbe\u7f6e\u5168\u5c40\u6574\u578b\u53d8\u91cf",(0,a.kt)("inlineCode",{parentName:"p"},"errno"),"\u6765\u8868\u793a\u4ec0\u4e48\u51fa\u9519\u4e86\u3002\u4e3a\u4e86\u80fd\u8ba9\u7a0b\u5e8f\u68c0\u67e5\u9519\u8bef\u7684\u540c\u65f6\u4ee3\u7801\u4e0d\u90a3\u4e48\u81c3\u80bf\uff0c\u6309\u7167\u4e66\u672c\u63a8\u8350\u7684\u65b9\u5f0f\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u5957\u540e\u9762\u5c06\u8981\u7528\u5230\u7684\u9519\u8bef\u5904\u7406\u5305\u88c5\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* Error wrapper function */\npid_t Fork(void);\nvoid Sigprocmask(int how, const sigset_t *set, sigset_t *oldset);\nvoid Sigemptyset(sigset_t *set);\nvoid Sigfillset(sigset_t *set);\nvoid Sigaddset(sigset_t *set, int signum);\nvoid Execve(const char *filename, char *const argv[], char *const envp[]);\nvoid Setpgid(pid_t pid, pid_t pgid);\nvoid Kill(pid_t pid, int sig);\npid_t Fork(void){\n    pid_t pid;\n    if((pid = fork()) < 0)\n        unix_error("Fork error");\n    return pid;\n}\nvoid Sigprocmask(int how, const sigset_t *set, sigset_t *oldset){\n    if(sigprocmask(how, set, oldset) < 0)\n        unix_error("Sigprocmask error");\n}\nvoid Sigemptyset(sigset_t *set){\n    if(sigemptyset(set) < 0)\n        unix_error("Sigprocmask error");\n}\nvoid Sigfillset(sigset_t *set){\n    if(sigfillset(set) < 0)\n        unix_error("Sigfillset error");\n}\nvoid Sigaddset(sigset_t *set, int signum){\n    if(sigaddset(set, signum) < 0)\n        unix_error("Sigaddset error");\n}\nvoid Execve(const char *filename, char *const argv[], char *const envp[]){\n    if(execve(filename, argv, envp) < 0){\n        printf("%s: Command not found.\\n", argv[0]);\n    }\n}\nvoid Setpgid(pid_t pid, pid_t pgid){\n    if(setpgid(pid, pgid) < 0){\n        unix_error("Setpid error");\n    }\n}\nvoid Kill(pid_t pid, int sig){\n    if(kill(pid, sig) < 0){\n        unix_error("Kill error");\n    }\n}\n')),(0,a.kt)("h2",{id:"eval"},"eval"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u529f\u80fd\u662f\u89e3\u6790\u547d\u4ee4\u884c\u540e\u5224\u65ad\u4e3a\u5185\u7f6e\u547d\u4ee4\u8fd8\u662f\u7a0b\u5e8f\u8def\u5f84\uff0c\u5206\u522b\u6267\u884c\u3002\u5982\u679c\u662f\u524d\u53f0\u4f5c\u4e1a\uff0c\u5219\u8981\u7b49\u5f85\u5176\u5b8c\u6210\uff0c\u5982\u679c\u662f\u540e\u53f0\u4f5c\u4e1a\uff0c\u5219\u8981\u8f93\u51fa\u5176\u76f8\u5e94\u4fe1\u606f"),(0,a.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* \n * eval - Evaluate the command line that the user has just typed in\n * \n * If the user has requested a built-in command (quit, jobs, bg or fg)\n * then execute it immediately. Otherwise, fork a child process and\n * run the job in the context of the child. If the job is running in\n * the foreground, wait for it to terminate and then return.  Note:\n * each child process must have a unique process group ID so that our\n * background children don\'t receive SIGINT (SIGTSTP) from the kernel\n * when we type ctrl-c (ctrl-z) at the keyboard.  \n*/\nvoid eval(char *cmdline) \n{\n    char *argv[MAXARGS];        //\u5b58\u653e\u89e3\u6790\u7684\u53c2\u6570\n    char buf[MAXLINE];          //\u89e3\u6790cmdline\n    int bg;                     //\u5224\u65ad\u7a0b\u5e8f\u662f\u524d\u53f0\u8fd8\u662f\u540e\u53f0\u6267\u884c\n    int state;                  //\u6307\u793a\u524d\u53f0\u8fd8\u662f\u540e\u53f0\u8fd0\u884c\u72b6\u6001\n    pid_t pid;                  //\u6267\u884c\u7a0b\u5e8f\u7684\u5b50\u8fdb\u7a0b\u7684pid\n    \n    strcpy(buf, cmdline);   \n    bg = parseline(buf, argv);  //\u89e3\u6790\u53c2\u6570\n    state = bg? BG:FG;          \n    if(argv[0] == NULL)         //\u7a7a\u884c\uff0c\u76f4\u63a5\u8fd4\u56de\n        return;\n    sigset_t mask_all, mask_one, prev_one;\n    Sigfillset(&mask_all);\n    Sigemptyset(&mask_one);\n    Sigaddset(&mask_one, SIGCHLD);\n    if(!builtin_cmd(argv)) {                            //\u5224\u65ad\u662f\u5426\u4e3a\u5185\u7f6e\u547d\u4ee4\n        Sigprocmask(SIG_BLOCK, &mask_one, &prev_one);       //fork\u524d\u963b\u585eSIGCHLD\u4fe1\u53f7\n        if((pid = Fork()) == 0) {                           //\u521b\u5efa\u5b50\u8fdb\u7a0b\n            Sigprocmask(SIG_SETMASK, &prev_one, NULL);      //\u89e3\u9664\u5b50\u8fdb\u7a0b\u7684\u963b\u585e\n            Setpgid(0, 0);                                  //\u521b\u5efa\u65b0\u8fdb\u7a0b\u7ec4\uff0cID\u8bbe\u7f6e\u4e3a\u8fdb\u7a0bPID\n            Execve(argv[0], argv, environ);                 //\u6267\u884c\n            exit(0);                                        //\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\u4e00\u5b9a\u8981\u9000\u51fa\n        }\n        if(state==FG){\n            Sigprocmask(SIG_BLOCK, &mask_all, NULL);            //\u6dfb\u52a0\u5de5\u4f5c\u524d\u963b\u585e\u6240\u6709\u4fe1\u53f7\n            addjob(jobs, pid, state, cmdline);                  //\u6dfb\u52a0\u81f3\u4f5c\u4e1a\u5217\u8868\n            Sigprocmask(SIG_SETMASK, &mask_one, NULL);\n            waitfg(pid);                                        //\u7b49\u5f85\u524d\u53f0\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\n        }         \n        else{\n            Sigprocmask(SIG_BLOCK, &mask_all, NULL);            //\u6dfb\u52a0\u5de5\u4f5c\u524d\u963b\u585e\u6240\u6709\u4fe1\u53f7\n            addjob(jobs, pid, state, cmdline);                  //\u6dfb\u52a0\u81f3\u4f5c\u4e1a\u5217\u8868\n            Sigprocmask(SIG_SETMASK, &mask_one, NULL);                                 \n            printf("[%d] (%d) %s",pid2jid(pid), pid, cmdline);  //\u6253\u5370\u540e\u53f0\u8fdb\u7a0b\u4fe1\u606f\n        }\n        Sigprocmask(SIG_SETMASK, &prev_one, NULL);          //\u89e3\u9664\u963b\u585e \n    }\n    return;\n}\n')),(0,a.kt)("h3",{id:"\u8bf4\u660e"},"\u8bf4\u660e"),(0,a.kt)("p",null,"\u6ce8\u91ca\u5df2\u7ecf\u5199\u5f97\u5f88\u8be6\u7ec6\u4e86\uff0c\u8fd9\u91cc\u7528\u5230\u4e86\u6d88\u9664\u7ade\u4e89\u7684\u65b9\u6cd5\u3002\u6211\u8981\u89e3\u91ca\u4e24\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"printf"),"\u65f6\u4e5f\u963b\u585e\u4fe1\u53f7\uff1f\u8fd9\u91cc\u6253\u5370\u4e86\u5168\u5c40\u53d8\u91cf\uff0c\u800c",(0,a.kt)("inlineCode",{parentName:"li"},"printf"),"\u51fd\u6570\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u6bd4\u5982\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bfb\u5185\u5b58\u7684\u540c\u65f6\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u5b83\u7684\u60c5\u51b5"),(0,a.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u8981\u5728\u6267\u884c\u524d\u521b\u5efa\u65b0\u7ebf\u7a0b\u7ec4\uff1f\u8fd9\u91cc\u4e3b\u8981\u662f\u4e3a\u4e86\u5c06\u5b50\u8fdb\u7a0b\u7ec4\u4e0e tsh \u8fdb\u7a0b\u7ec4\u5206\u5f00\uff0c\u9632\u6b62\u53d1\u4fe1\u53f7\u7ec8\u6b62\u5b50\u8fdb\u7a0b\u7ec4\u65f6\u4e5f\u5c06 tsh \u8fdb\u7a0b\u7ec4\u7ec8\u6b62\u4e86")),(0,a.kt)("p",null,"\u53c2\u89c1 Write UP \u4e2d\u7684\u63d0\u793a\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"After the fork, but before the execve, the child process should call setpgid(0, 0), which puts the child in a new process group whose group ID is identical to the child\u2019s PID. This ensures that there will be only one process, your shell, in the foreground process group.")),(0,a.kt)("h2",{id:"builtin_cmd"},"builtin_cmd"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u7b80\u7b80\u5355\u5355\u5224\u65ad\u662f\u5426\u4e3a\u5185\u7f6e\u547d\u4ee4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* \n * builtin_cmd - If the user has typed a built-in command then execute\n *    it immediately.  \n */\nint builtin_cmd(char **argv) \n{\n    if (!strcmp(argv[0], "quit"))\n        exit(0);\n    if (!strcmp(argv[0], "bg") || !strcmp(argv[0], "fg")) {\n        do_bgfg(argv);\n        return 1;\n    }\n    if (!strcmp(argv[0], "jobs")) {\n        listjobs(jobs);\n        return 1;\n    }\n    if (!strcmp(argv[0], "&"))\n        return 1;\n    return 0;     /* not a builtin command */\n}\n')),(0,a.kt)("h2",{id:"do_bgfg"},"do_bgfg"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u8981\u5b9e\u73b0\u5185\u7f6e\u547d\u4ee4",(0,a.kt)("inlineCode",{parentName:"p"},"bg"),"\u548c",(0,a.kt)("inlineCode",{parentName:"p"},"fg"),"\uff0c\u8fd9\u4e24\u4e2a\u547d\u4ee4\u7684\u529f\u80fd\u5982\u4e0b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"bg <job>"),"\uff1a\u901a\u8fc7\u5411",(0,a.kt)("inlineCode",{parentName:"p"},"<job>"),"\u5bf9\u5e94\u7684\u4f5c\u4e1a\u53d1\u9001",(0,a.kt)("inlineCode",{parentName:"p"},"SIGCONT"),"\u4fe1\u53f7\u6765\u4f7f\u5b83\u91cd\u542f\u5e76\u653e\u5728\u540e\u53f0\u8fd0\u884c ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"fg <job>"),"\uff1a\u901a\u8fc7\u5411 ",(0,a.kt)("inlineCode",{parentName:"p"},"<job>"),"\u5bf9\u5e94\u7684\u4f5c\u4e1a\u53d1\u9001",(0,a.kt)("inlineCode",{parentName:"p"},"SIGCONT"),"\u4fe1\u53f7\u6765\u4f7f\u5b83\u91cd\u542f\u5e76\u653e\u5728\u524d\u53f0\u8fd0\u884c")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u8f93\u5165\u65f6\u540e\u9762\u7684\u53c2\u6570\u6709",(0,a.kt)("inlineCode",{parentName:"p"},"%"),"\u5219\u4ee3\u8868",(0,a.kt)("inlineCode",{parentName:"p"},"jid"),"\uff0c\u6ca1\u6709\u5219\u4ee3\u8868",(0,a.kt)("inlineCode",{parentName:"p"},"pid")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"trace14"),"\u4e3b\u8981\u5c31\u662f\u7528\u6765\u6d4b\u8bd5\u8fd9\u4e2a\u547d\u4ee4\uff0c\u67e5\u770b\u6807\u51c6\u7a0b\u5e8f\u7684\u8f93\u51fa\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(81963).Z,width:"592",height:"757"})),(0,a.kt)("h3",{id:"\u4ee3\u7801-1"},"\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* \n * do_bgfg - Execute the builtin bg and fg commands\n */\nvoid do_bgfg(char **argv) \n{\n    struct job_t *job = NULL;        //\u8981\u5904\u7406\u7684job\n    int state;                      //\u8f93\u5165\u7684\u547d\u4ee4\n    int id;                         //\u5b58\u50a8jid\u6216pid\n    if(!strcmp(argv[0], "bg")) state = BG;\n        else state = FG;  \n    if(argv[1]==NULL){               //\u6ca1\u5e26\u53c2\u6570\n        printf("%s command requires PID or %%jobid argument\\n", argv[0]);\n        return;\n    }\n    if(argv[1][0]==\'%\'){             //\u8bf4\u660e\u662fjid\n       if(sscanf(&argv[1][1], "%d", &id) > 0){\n            job = getjobjid(jobs, id);  //\u83b7\u5f97job\n            if(job==NULL){\n                printf("%%%d: No such job\\n", id);\n                return;\n            }\n        }\n    }\n    else if(!isdigit(argv[1][0])) {  //\u5176\u5b83\u7b26\u53f7\uff0c\u975e\u6cd5\u8f93\u5165\n        printf("%s: argument must be a PID or %%jobid\\n", argv[0]);\n        return;\n    }\n    else{                       //pid\n        id = atoi(argv[1]);\n        job = getjobpid(jobs, id);\n        if(job==NULL){\n            printf("(%d): No such process\\n", id);\n            return;\n        }\n\n    }\n    Kill(-(job->pid), SIGCONT);       //\u91cd\u542f\u8fdb\u7a0b, \u8fd9\u91cc\u53d1\u9001\u5230\u8fdb\u7a0b\u7ec4\n    job->state = state;\n    if(state==BG)\n        printf("[%d] (%d) %s",job->jid, job->pid, job->cmdline);\n    else \n        waitfg(job->pid);\n    return;\n}\n')),(0,a.kt)("h3",{id:"\u8bf4\u660e-1"},"\u8bf4\u660e"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u4ee3\u7801\u7684\u96be\u70b9\u4e3b\u8981\u5728\u4e8e\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5224\u65ad\uff0c\u8981\u8003\u8651\u5065\u58ee\u6027\u3002\u6ce8\u610f\u539f\u6765\u7684\u540e\u53f0\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u53d8\u6210\u524d\u53f0\u8fdb\u7a0b\uff0c\u6240\u4ee5\u5e94\u4fee\u6539",(0,a.kt)("inlineCode",{parentName:"p"},"job"),"\u7ed3\u6784\u4f53\u7684\u76f8\u5e94\u4fe1\u606f"),(0,a.kt)("h2",{id:"waitfg"},"waitfg"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u4ece\u8981\u6c42\u5b9e\u73b0\u963b\u585e\u7236\u8fdb\u7a0b\uff0c\u76f4\u5230\u5f53\u524d\u7684\u524d\u53f0\u8fdb\u7a0b\u4e0d\u518d\u662f\u524d\u53f0\u8fdb\u7a0b\u4e86\u3002\u8fd9\u91cc\u663e\u7136\u8981\u663e\u793a\u5730\u7b49\u5f85\u4fe1\u53f7\uff0c\u6211\u4eec\u5148\u56de\u987e\u4e00\u4e0b\u76f8\u5173\u77e5\u8bc6"),(0,a.kt)("h3",{id:"\u56de\u987e\u663e\u5f0f\u5730\u7b49\u5f85\u4fe1\u53f7"},"\u56de\u987e\uff1a\u663e\u5f0f\u5730\u7b49\u5f85\u4fe1\u53f7"),(0,a.kt)("p",null,"\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"while(fgpid(jobs) != 0)\n    pause();\n")),(0,a.kt)("p",null,"\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u7ade\u4e89\uff0c\u5e76\u4e14\u5b83\u53ef\u80fd\u5f15\u8d77\u81f4\u547d\u7684\u9519\u8bef\uff01\u8003\u8651\u5982\u4e0b\u4e8b\u4ef6\u5e8f\u5217\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7236\u8fdb\u7a0b\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"fgpid"),"\u51fd\u6570\uff0c\u6b64\u65f6\u6709\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4ecd\u7136\u5728\u524d\u53f0\u8fd0\u884c\uff0c\u6240\u4ee5\u5224\u65ad\u6761\u4ef6\u4e3a\u771f\uff0c\u8fdb\u5165\u5faa\u73af"),(0,a.kt)("li",{parentName:"ul"},"\u5047\u5b9a\u7236\u8fdb\u7a0b\u5728\u8fdb\u5165\u5faa\u73af\u540e\uff0c\u800c\u6267\u884c",(0,a.kt)("inlineCode",{parentName:"li"},"pause"),"\u524d\uff0c\u5b50\u8fdb\u7a0b\u7ec8\u6b62"),(0,a.kt)("li",{parentName:"ul"},"\u7236\u8fdb\u7a0b\u63a5\u6536\u5230 SIGCHLD \u4fe1\u53f7\uff0c\u5e76\u5904\u7406\u7ed3\u675f\u540e\u624d\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"pause"))),(0,a.kt)("p",null,"\u7531\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"pause"),"\u4ec5\u5728\u6355\u6349\u5230\u4fe1\u53f7\u540e\u8fd4\u56de\uff0c\u800c\u4e4b\u540e\u4e0d\u4f1a\u518d\u6709\u4efb\u4f55\u4fe1\u53f7\u62b5\u8fbe\uff0c\u90a3\u4e48\u7236\u8fdb\u7a0b\u5c31\u4f1a\u6c38\u8fdc\u4f11\u7720\uff01"),(0,a.kt)("p",null,"\u89e3\u51b3\u529e\u6cd5\u662f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"sleep"),"\u51fd\u6570\uff1a\u56e0\u4e3a\u5b83\u4e0d\u4f9d\u8d56\u4fe1\u53f7\u6765\u8fd4\u56de\uff0c\u901a\u8fc7\u6bcf\u6b21\u5faa\u73af\u6765\u76d1\u6d4b\u5b50\u8fdb\u7a0b\u72b6\u6001"),(0,a.kt)("p",null,"\u4e5f\u53ef\u4ee5\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"sigsuspend"),"\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u76f8\u5f53\u4e8e\u5982\u4e0b\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"sigprocmask(SIG_SETMASK, &mask, &prev);\npause();\nsigprocmask(SIG_SETMASK, &prev, NULL);\n")),(0,a.kt)("p",null,"\u5728\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"sigsuspend"),"\u4e4b\u524d\u963b\u585e SIGCHLD \u4fe1\u53f7\uff0c\u8c03\u7528\u65f6\u53c8\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"sigprocmask"),"\u51fd\u6570\uff0c\u5728\u6267\u884c",(0,a.kt)("inlineCode",{parentName:"p"},"pause"),"\u51fd\u6570\u4e4b\u524d\u89e3\u9664\u5bf9\u4fe1\u53f7\u7684\u963b\u585e\uff0c\u4ece\u800c\u6b63\u5e38\u4f11\u7720\u3002\u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u95ee\u4e86\uff1a\u8fd9\u91cc\u5e76\u6ca1\u6709\u6d88\u9664\u7ade\u4e89\u554a\uff1f\u5982\u679c\u5728\u7b2c 1 \u884c\u548c\u7b2c 2 \u884c\u4e4b\u95f4\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u4e0d\u8fd8\u662f\u4f1a\u53d1\u751f\u6c38\u4e45\u4f11\u7720\u5417\uff1f"),(0,a.kt)("p",null,"\u8fd9\u5c31\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"sigsuspend"),"\u4e0e\u4e0a\u8ff0\u4ee3\u7801\u7684\u4e0d\u540c\u4e4b\u5904\u4e86\uff0c\u5b83\u76f8\u5f53\u4e8e\u4e0a\u8ff0\u4ee3\u7801\u7684\u539f\u5b50\u7248\u672c\uff0c\u5373\u7b2c 1 \u884c\u548c\u7b2c 2 \u884c\u603b\u662f\u4e00\u8d77\u53d1\u751f\u7684\uff0c\u4e0d\u4f1a\u88ab\u4e2d\u65ad\uff01"),(0,a.kt)("h3",{id:"\u4ee3\u7801-2"},"\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"/* \n * waitfg - Block until process pid is no longer the foreground process\n */\nvoid waitfg(pid_t pid)\n{\n    sigset_t mask;\n    Sigemptyset(&mask);   \n    while (fgpid(jobs) != 0){\n        sigsuspend(&mask);      //\u6682\u505c\u65f6\u53d6\u6d88\u963b\u585e,\u89c1sigsuspend\u7528\u6cd5\n    }\n    return;\n}\n")),(0,a.kt)("p",null,"\u7ecf\u8fc7\u4e0a\u9762\u7684\u56de\u987e\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u3002"),(0,a.kt)("h2",{id:"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u5b9e\u73b0"},"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u5b9e\u73b0"),(0,a.kt)("p",null,"\u9664\u4e86\u524d\u9762\u7684 4 \u4e2a\u51fd\u6570\uff0c\u8fd8\u8981\u5b9e\u73b0 3 \u4e2a\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\u7531\u4e8e\u4ed6\u4eec\u975e\u5e38\u76f8\u50cf\uff0c\u6211\u653e\u5728\u4e86\u4e00\u8d77"),(0,a.kt)("h3",{id:"sigchld_handler"},"sigchld_handler"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a SIGCHLD \u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u80fd\u591f\u56de\u6536\u6240\u6709\u50f5\u6b7b\u8fdb\u7a0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-C"},'/* \n * sigchld_handler - The kernel sends a SIGCHLD to the shell whenever\n *     a child job terminates (becomes a zombie), or stops because it\n *     received a SIGSTOP or SIGTSTP signal. The handler reaps all\n *     available zombie children, but doesn\'t wait for any other\n *     currently running children to terminate.  \n */\nvoid sigchld_handler(int sig) \n{\n    int olderrno = errno;   //\u7531\u4e8eerrno\u662f\u5168\u5c40\u53d8\u91cf,\u6ce8\u610f\u4fdd\u5b58\u548c\u6062\u590derrno\n    int status;\n    pid_t pid;\n    struct job_t *job;\n    sigset_t mask, prev;\n    sigfillset(&mask);\n    while ((pid = waitpid(-1, &status, WNOHANG | WUNTRACED)) > 0){      //\u7acb\u5373\u8fd4\u56de\u8be5\u5b50\u8fdb\u7a0b\u7684pid\n        sigprocmask(SIG_BLOCK, &mask, &prev);   //\u963b\u585e\u6240\u6709\u4fe1\u53f7\n        if (WIFEXITED(status)){                 //\u6b63\u5e38\u7ec8\u6b62\n            deletejob(jobs, pid);\n        }\n        else if (WIFSIGNALED(status)){          //\u56e0\u4e3a\u4fe1\u53f7\u800c\u7ec8\u6b62, \u6253\u5370\n            printf ("Job [%d] (%d) terminated by signal %d\\n", pid2jid(pid), pid, WTERMSIG(status));\n            deletejob(jobs, pid);\n        }\n        else if (WIFSTOPPED(status)){           //\u56e0\u4e3a\u4fe1\u53f7\u800c\u505c\u6b62, \u6253\u5370\n            printf ("Job [%d] (%d) stoped by signal %d\\n", pid2jid(pid), pid, WSTOPSIG(status));\n            job = getjobpid(jobs, pid);\n            job->state = ST;\n        }\n        sigprocmask(SIG_SETMASK, &prev, NULL);          \n    }\n    errno = olderrno;\n    return;\n}\n')),(0,a.kt)("p",null,"\u8fd9\u91cc\u7528\u5230\u4e86\u5e76\u53d1\u7f16\u7a0b\u539f\u5219 1\uff0c\u540e\u9762\u5c31\u662f\u5229\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"waitpid"),"\u51fd\u6570\uff08\u524d\u9762\u8bb2\u89e3\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u68c0\u6d4b\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u6765\u5b9e\u73b0\u76f8\u5e94\u64cd\u4f5c\uff0c\u5982\u56de\u6536\u5b50\u8fdb\u7a0b\uff0c\u6253\u5370\u76f8\u5173\u4fe1\u606f\u7b49\u7b49\u3002"),(0,a.kt)("h3",{id:"sigint_handler"},"sigint_handler"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a SIGINT \u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5c06\u4fe1\u53f7\u4f20\u9001\u7ed9\u524d\u53f0\u8fdb\u7a0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"/* \n * sigint_handler - The kernel sends a SIGINT to the shell whenver the\n *    user types ctrl-c at the keyboard.  Catch it and send it along\n *    to the foreground job.  \n */\nvoid sigint_handler(int sig) \n{\n    int olderrno = errno;\n    int pid;\n    sigset_t mask_all, prev;\n    Sigfillset(&mask_all);\n    Sigprocmask(SIG_BLOCK, &mask_all, &prev);   //jobs\u4e3a\u5168\u5c40\u53d8\u91cf\n    if((pid = fgpid(jobs)) != 0){\n        Sigprocmask(SIG_SETMASK, &prev, NULL);\n        Kill(-pid, SIGINT);\n    }\n    errno = olderrno;\n    return;\n}\n")),(0,a.kt)("p",null,"\u4e3a\u4ec0\u4e48\u8981\u5728\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"fpgid"),"\u51fd\u6570\u4e4b\u524d\u963b\u585e\u4fe1\u53f7\uff0c\u6211\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"waitfg"),"\u5b9e\u73b0\u4e2d\u5df2\u7ecf\u8bb2\u89e3\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002"),(0,a.kt)("h3",{id:"sigstp_handler"},"sigstp_handler"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a SIGSTOP \u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5c06\u4fe1\u53f7\u4f20\u9001\u7ed9\u524d\u53f0\u8fdb\u7a0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"/*\n * sigtstp_handler - The kernel sends a SIGTSTP to the shell whenever\n *     the user types ctrl-z at the keyboard. Catch it and suspend the\n *     foreground job by sending it a SIGTSTP.  \n */\nvoid sigtstp_handler(int sig) \n{\n    int olderrno = errno;\n    int pid;\n    sigset_t mask_all, prev;\n    Sigfillset(&mask_all);\n    Sigprocmask(SIG_BLOCK, &mask_all, &prev);\n    if((pid = fgpid(jobs)) > 0){\n        Sigprocmask(SIG_SETMASK, &prev, NULL);\n        Kill(-pid, SIGSTOP);\n    }\n    errno = olderrno;\n    return;\n}\n")),(0,a.kt)("p",null,"\u4ee3\u7801\u4e0e\u4e0a\u4e2a\u51fd\u6570\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c"),(0,a.kt)("h2",{id:"tsh-\u6d4b\u8bd5"},"tsh \u6d4b\u8bd5"),(0,a.kt)("p",null,"\u5b9e\u9a8c\u6587\u4ef6\u8fd8\u5305\u62ec\u4e86\u4f5c\u8005\u5236\u4f5c\u7684\u53c2\u8003 tsh\uff0c\u4ee5\u53ca 16 \u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u901a\u8fc7\u8dd1\u7528\u4f8b\u67e5\u770b\u7ed3\u679c\u4e0e\u53c2\u8003 tsh \u662f\u5426\u76f8\u540c\uff0c\u5c31\u80fd\u5224\u65ad\u6211\u4eec\u5199\u7684 tsh \u6709\u65e0\u95ee\u9898\uff0c\u6211\u8fd9\u91cc\u4ec5\u653e\u51fa\u5176\u4e2d\u51e0\u4e2a\u7528\u4f8b\u7684\u6d4b\u8bd5\u622a\u56fe\uff08\u5de6\u8fb9\u4e3a\u53c2\u8003 tsh\uff0c\u53f3\u8fb9\u4e3a\u6211\u7684 tsh\uff09\uff1a"),(0,a.kt)("p",null,"trace 14\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(16567).Z,width:"1920",height:"1032"})),(0,a.kt)("p",null,"trace 15\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(53339).Z,width:"1920",height:"1032"})),(0,a.kt)("p",null,"trace 09\uff1a"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(40686).Z,width:"1920",height:"505"})),(0,a.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u672c\u5b9e\u9a8c\u8fd8\u662f\u76f8\u5f53\u6709\u8da3\u7684\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u7528 Shell\uff0c\u800c\u5b83\u7684\u4e00\u4e2a\u6700\u57fa\u7840\u7684\u4f5c\u4e1a\u63a7\u5236\u5c31\u8981\u8003\u8651\u5982\u6b64\u591a\u7684\u4e1c\u897f\uff1a\u56de\u6536\u8fdb\u7a0b\uff0c\u907f\u514d\u7ade\u4e89\u7b49\uff0c\u7740\u5b9e\u4ee4\u6211\u5927\u5f00\u773c\u754c"),(0,a.kt)("li",{parentName:"ul"},"\u8bfb CSAPP \u7b2c 8 \u7ae0\u65f6\uff0c\u6211\u5bf9\u5f88\u591a\u5730\u65b9\u90fd\u4e0d\u751a\u7406\u89e3\u3002\u800c\u505a\u5b8c\u4e86\u672c\u5b9e\u9a8c\uff0c\u901a\u8fc7\u4eb2\u81ea\u7f16\u5199\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\uff0c\u8003\u8651\u5982\u4f55\u907f\u514d\u7ade\u4e89\uff0c\u4e0d\u65ad\u8c03\u8bd5\u7531\u4e8e\u5e76\u53d1\u5e26\u6765\u7684 BUG\uff0c\u6211\u5bf9\u4e66\u4e0a\u7684\u4f8b\u7a0b\u4e00\u4e0b\u5b50\u5c31\u9886\u609f\u4e86\uff0c\u611f\u8c22 CMU \u63d0\u4f9b\u7684\u5b9e\u9a8c\u6750\u6599\uff01"),(0,a.kt)("li",{parentName:"ul"},"\u8fd9\u662f\u6211\u8ba1\u7b97\u673a\u751f\u6daf\u4e2d\u7b2c\u4e00\u6b21\u771f\u6b63\u63a5\u89e6\u5e76\u53d1\uff0c\u6240\u4ee5\u5f88\u591a\u5730\u65b9\u53ea\u4f1a\u7167\u732b\u753b\u864e\uff0c\u5e0c\u671b\u4ee5\u540e\u6211\u7684\u6c34\u5e73\u80fd\u4e0d\u65ad\u63d0\u9ad8\uff0c\u751a\u81f3\u80fd\u5199\u51fa\u50cf zsh \u8fd9\u6837\u5f3a\u5927\u7684\u7ec8\u7aef\u5de5\u5177"),(0,a.kt)("li",{parentName:"ul"},"\u672c\u5b9e\u9a8c\u8017\u65f6 2 \u5929\uff0c\u7ea6 9 \u5c0f\u65f6")))}m.isMDXComponent=!0},81963:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220402164708317-fd61553fdd5b9c2a80ce02c301f53665.png"},74090:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403111407584-09ecb2d889bc9bf7c3016389dd0c9ac6.png"},84250:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403155658148-87736488eb9d7112f4165eea9ea189ff.png"},5134:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403161137998-7c7ce0f9dda1bf9f5faf9065a9e62b2d.png"},16567:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403172229310-2874241ad929be49887b0fbf653a7f82.png"},53339:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403172401604-a9c324f1796e4b61c9b05948d1d8a783.png"},40686:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image-20220403172459125-c13e70bce9e9b807cc1ee819a6dcc744.png"}}]);